{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# EEP 153: Project 2\n",
    "## Team Margaret Reid: A Study of Inuit Diet and Minimum Cost Information\n",
    "\n",
    "This Python notebook walks through all of our deliverables, so you can run it and check out how everything works in addition to verify we have met all of our deliverables. ***Click*** on the Table of Contents to be directed to any deliverable you want to see."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Topic & Goals:**\n",
    "Our project focused on analyzing the minimum cost diet for Inuit people in Nunavut, comparing an entirely Western diet compared to a diet with a mix of Western diet and traditional hunted and gathered foods. \n",
    "\n",
    "**Our project goals included:**\n",
    "Understanding food security, health, and diet of Inuit in Nunavut\n",
    "Developing the dietary reference intakes for Inuit, \n",
    "Gathering data on food prices and nutritional content of store-bought and traditional food\n",
    "Identifying minimum cost diet using only store bought food vs store-bought and traditional, and analyzing the sensitivity of each solution\n",
    "Understand the cost-saving potential of a diet with traditional foods for Inuit people and solutions to address food insecurity\n",
    "\n",
    "**Outcomes:**\n",
    "Found data on Inuit diet requirements, and created a function to display the information.\n",
    "Found that the introduction of traditional foods in the Inuit diet led to a cost reduction of $171,925.02, showing that a big way to reduce food insecurity for the population would be by removing barriers to access for hunting, fishing, and gathering and ensuring sustainable resources."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Note to the reader: Please open this on DataHub!! The Table of Contents below will not work on Github - open and run everything with this DataHub link - [DataHub Link to this Python Notebook](https://datahub.berkeley.edu/hub/user-redirect/git-pull?repo=https://github.com/vishalival/eep153-margaret-reid&urlpath=tree/eep153-margaret-reid/deliverables_code_final.ipynb)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Table of Contents and Deliverables\n",
    "1. <a href=\"#deliverable-1a-description-of-population-of-interest-introduction\"><span style=\"color:red;\">[Deliverable 1[A]]</span> - Description of Population of Interest, Introduction</a>\n",
    "2. <a href=\"#dietary-reference-intakes\"><span style=\"color:red;\">[Deliverable 2[A]]</span> - Dietary Reference Intakes</a>\n",
    "3. <a href=\"#data-prices-foods\"><span style=\"color:red;\">[Deliverable 3[A]]</span> - Data on Prices for Different Foods</a>\n",
    "4. <a href=\"#nutrition-content-foods\"><span style=\"color:red;\">[Deliverable 4[A]]</span> - Nutritional Content for Different Foods</a>\n",
    "5. <a href=\"#solution\"><span style=\"color:red;\">[Deliverable 5[A]]</span> - Solution</a>\n",
    "6. <a href=\"#solution-sensitivity\"><span style=\"color:red;\">[Deliverable 6[C]]</span> - Sensitivity of Solution</a>\n",
    "7. <a href=\"#total-cost\"><span style=\"color:red;\">[Deliverable 7[B]]</span> - Total Cost for Population of Interest</a>\n",
    "9. <a href=\"#works-cited\">Works Cited</a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1. <span style=\"color:red\">*Deliverable 1[A]*</span> - Description of Population of Interest, Introduction <a name=\"deliverable-1a-description-of-population-of-interest-introduction\"></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![Alt text](https://www.canadanorthoutfitting.com/images/heroes/1920/inuit-culture-221223090111.jpg)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### <span style=\"color:purple\">Description of Population of Interest</span>\n",
    "\n",
    "Alternatively, check out this deliverable on a Google Doc via <a href=\"https://docs.google.com/document/d/1eGTRVFoSgfhhXi8iGrQo0t8yEQVVuVloBh95G35iXsc/edit?usp=sharing\">this link</a>.\n",
    "\n",
    "#### <span style=\"color:pink\">Population: Inuit peoples living in Nunavut</span>\n",
    "\n",
    "Inuit is a broad term to refer to the indigenous people of the Arctic (Canada.gov). While Inuit live in many places, including Alaska, Canada, and Greenland, we are focusing on the Inuit people in Nunavut, due to the region’s overwhelming population of Inuit people. Nunavut is part of the Inuit Nunangut, a region self-governed by Inuit (The Canadian Encyclopedia). Nunavut means “Our Land” in the Inuit language, Inuktut, and is the northernmost territory of Canada (Canadian Geographic).  According to the 2021 Nunavut census, 30,865 out of 36,600 people living in Nunavut are Inuit (Statistics Canada).\n",
    "\n",
    "Inuit were hunter-gatherers throughout history with food consumption patterns corresponding to the season. During these times, traditional foods contributed to the social, cultural and economic parts of the Inuit lifestyle. The traditional diet was mainly protein based, such as fish, caribou, and marine mammals, which were of great importance to the native people for health and culture.  However, the indigenous people have been making the transition from traditional foods to manufactured and imported items such as sweetened beverages and chips (Sharma). \n",
    "\n",
    "#### <span style=\"color:pink\">Description: Food Security, Health, and Diet of Inuit in Nunavut</span>\n",
    "The minimum cost diet is a pertinent issue for Inuit people in Nunavut. The population struggles with high rates of food insecurity compared to other Canadian regions, health concerns such as diabetes, and also consumes a mix of unique traditional indigenous foods alongside store-bought foods.\n",
    "While the numbers vary slightly, in Canada, roughly 8.8 percent of households are food insecure (Statistics Canada), but these rates are much higher in Nunavut, where roughly 50 percent of households are food insecure (Household Food Insecurity in Canada). The rates of food insecurity in Nunavut are at crisis levels according to the recent Canadian Community Health Survey. A driver of food insecurity in Nunavut is high costs for store bought foods and difficulty accessing fishing and hunting in the region (Lambden et al. 2006). Food security programs in the area have failed, evident in how insecurity increased by 13.2 percentage points since the Canadian government’s Nutrition North Canada program launched in 2011 (Fafard St.-Germain 2019).\n",
    "There is a concern that the quick change in diet may negatively affect the Inuit people's health and nutrition, increasing the risk of diabetes, cancer, and cardiovascular disease. Twenty-eight percent of people in Nunavut, an Inuit self-governing region in northern Canada, are obese, while twenty percent are overweight. Approximately 60% of adult Nunavut residents stated they did not engage in any physical activity (Sharma). Inuit towns in the Canadian Arctic are remote, and they rely mostly on hunting, fishing, and one or two grocery stores for their nourishment. Because they control food prices and availability, grocery shops are consequently a crucial focal point for nutritional interventions. Programs offered by grocery stores may influence consumers' decisions about the foods they buy for their homes at the moment of sale. (Sharma) \n",
    "The average Inuit in Nunavut consumes a mix of store bought foods with traditional foods, which includes caribou, beluga, arctic char, muktuk, hare, and wild berries (Table). According to the 2007-2008 Inuit Health Survey in Nunavut, 81 percent of households preferred eating more country foods (traditional hunted and gathered food), and also 76.1 percent viewed country food as cheaper than store-bought food. However, there are barriers to getting food from both sources.\n",
    "\n",
    "#### <span style=\"color:pink\">Scope of Diet Problem: Traditional and Non-Traditional Diet Mix</span>\n",
    "The goal of our diet problem was to understand the value of traditional foods in the Inuit diet. Identifying the value of traditional foods is a challenge, as these foods are not sold at Western grocery stores. Thus, we had to piece together the consumption and value of traditional foods through key reference papers. \n",
    "\tHopping et. al 2010’s paper, “Dietary adequacy of Inuit in the Canadian Arctic” sampled an Inuit community in Nunavut, and found that overall, traditional foods contribute substantially to protein and iron intake, while store-bought foods mainly comprise their carbohydrate, sugar, and fat intake. This paper is important because it gave the percent contribution of both traditional and non-traditional foods to the diets of Inuits in Nunavut. \n",
    "\tHopping et. al’s responses were largely women: (75 participants, 7 men and 68 women; average age 42 (SD 19) and 44 (SD 16) for men and women respectively). Due to the sample within Hopping et al. 2010, being largely middle-aged women, we decided to provide as accurate an estimate as possible for our diet problem by focusing on satisfying the minimum cost diet for 31-50 year old females in Nunavut, with the dietary recommendations from the Nordic Nutrition Recommendations, which was cited by Ostrager 2015, which described the dietary structure of Inuit communities (Ostrager 2015)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2. <span style=\"color:red\">*Deliverable 2[A]*</span> - Dietary Reference Intakes <a name=\"dietary-reference-intakes\"></a>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Importing the module we wrote for Dietary Reference Intakes from the source code. Click below to check the original file if needed.\n",
    "\n",
    "from dietary_reference_intakes import inuit_dietary_reference_intakes"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This is our implementation of the Dietary Reference Intakes deliverable, where we return a Pandas series of the recommended nutrition values for those of the Inuit background. We reference the information from the <a href=\"https://pub.norden.org/nord2023-003/introduction.html\" style=\"color:blue;\">Nordic Nutrition Webpage</a>, providing thorough information on the topic and necessary nutritional values of those from different ages/sexes from the Inuit heritage. \n",
    "\n",
    "The raw source code for our function can be found at <a href=\"https://github.com/vishalival/eep153-margaret-reid/blob/main/dietary_reference_intakes.py\" style=\"color:blue;\">this Python file</a>.\n",
    "\n",
    "<span style=\"color:purple;\"><b>Function Name:</b></span> `inuit_dietary_recommendations`<br>\n",
    "<span style=\"color:purple;\"><b>Returns:</b></span> The Inuit dietary recommendations for a given sex & age.<br>\n",
    "<span style=\"color:purple;\"><b>Arguments:</b></span><br>\n",
    "<ul>\n",
    "    <li><span style=\"color:magenta;\">sex (string)</span> - Accepts \"female\", \"f\", \"F\", \"Female\", \"male\", \"m\", \"M\", \"Male\".</li>\n",
    "    <li><span style=\"color:magenta;\">age (int or float)</span> - Age value. Interpretation depends on age_unit_type.</li>\n",
    "    <li><span style=\"color:magenta;\">age_unit_type (string)</span> - Specifies the unit of age, either \"year\" or \"month\". Defaults to \"year\".</li>\n",
    "</ul>\n",
    "\n",
    "<span style=\"color:purple;\"><b>Returns:</b></span><br>\n",
    "<ul>\n",
    "    <li><span style=\"color:magenta;\">recommendations_series (Pandas.Series)</span> - Specifying specific dietary requirements.</li>\n",
    "</ul>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here is some sample usage of how to use the code. Please feel free to change things up & play around with it to test it out."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Sample Usage. Inuit dietary reference intakes for a female of age 13.\n",
    "\n",
    "inuit_dietary_reference_intakes(\"Female\", 13)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Looking at the outcome above, you can clearly see each of the nutrition values for a specific age and sex."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3. <span style=\"color:red\">*Deliverable 3[A]*</span> - Data on Prices for Different Foods <a name=\"data-prices-foods\"></a>\n",
    "\n",
    "The Spreadsheet for this information can be found at the [following link](https://docs.google.com/spreadsheets/d/1jIjL0Pp4UtbiCsN952j8x1a-oP-LAuQ-/edit#gid=191050954)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 4. <span style=\"color:red\">*Deliverable 4[A]*</span> - Nutritional Content for Different Foods <a name=\"nutrition-content-foods\"></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The link for this information can be found at the [following link](https://docs.google.com/spreadsheets/d/1AgH0ZnYAsFC5I6hBLEJoXzPZiYZdcl2CSXoifJOSLpA/edit?usp=sharing). However, we have other nutritional food information here too! \n",
    "\n",
    "***Run the following lines of code, do not skip the imports!!***"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting fooddatacentral\n",
      "  Using cached fooddatacentral-1.0.10-py3-none-any.whl (6.8 kB)\n",
      "Installing collected packages: fooddatacentral\n",
      "Successfully installed fooddatacentral-1.0.10\n",
      "Collecting python-gnupg\n",
      "  Using cached python_gnupg-0.5.2-py2.py3-none-any.whl (20 kB)\n",
      "Installing collected packages: python-gnupg\n",
      "Successfully installed python-gnupg-0.5.2\n",
      "Requirement already satisfied: pint in /srv/conda/lib/python3.11/site-packages (0.17)\n",
      "Requirement already satisfied: packaging in /srv/conda/lib/python3.11/site-packages (from pint) (24.0)\n",
      "Requirement already satisfied: python-gnupg in /srv/conda/lib/python3.11/site-packages (0.5.2)\n",
      "Collecting cufflinks\n",
      "  Using cached cufflinks-0.17.3.tar.gz (81 kB)\n",
      "  Preparing metadata (setup.py) ... \u001b[?25ldone\n",
      "\u001b[?25hRequirement already satisfied: numpy>=1.9.2 in /srv/conda/lib/python3.11/site-packages (from cufflinks) (1.26.4)\n",
      "Requirement already satisfied: pandas>=0.19.2 in /srv/conda/lib/python3.11/site-packages (from cufflinks) (2.2.2)\n",
      "Requirement already satisfied: plotly>=4.1.1 in /srv/conda/lib/python3.11/site-packages (from cufflinks) (5.22.0)\n",
      "Requirement already satisfied: six>=1.9.0 in /srv/conda/lib/python3.11/site-packages (from cufflinks) (1.16.0)\n",
      "Collecting colorlover>=0.2.1\n",
      "  Using cached colorlover-0.3.0-py3-none-any.whl (8.9 kB)\n",
      "Requirement already satisfied: setuptools>=34.4.1 in /srv/conda/lib/python3.11/site-packages (from cufflinks) (69.5.1)\n",
      "Requirement already satisfied: ipython>=5.3.0 in /srv/conda/lib/python3.11/site-packages (from cufflinks) (8.21.0)\n",
      "Requirement already satisfied: ipywidgets>=7.0.0 in /srv/conda/lib/python3.11/site-packages (from cufflinks) (8.0.7)\n",
      "Requirement already satisfied: decorator in /srv/conda/lib/python3.11/site-packages (from ipython>=5.3.0->cufflinks) (5.0.9)\n",
      "Requirement already satisfied: jedi>=0.16 in /srv/conda/lib/python3.11/site-packages (from ipython>=5.3.0->cufflinks) (0.19.1)\n",
      "Requirement already satisfied: matplotlib-inline in /srv/conda/lib/python3.11/site-packages (from ipython>=5.3.0->cufflinks) (0.1.7)\n",
      "Requirement already satisfied: prompt-toolkit<3.1.0,>=3.0.41 in /srv/conda/lib/python3.11/site-packages (from ipython>=5.3.0->cufflinks) (3.0.42)\n",
      "Requirement already satisfied: pygments>=2.4.0 in /srv/conda/lib/python3.11/site-packages (from ipython>=5.3.0->cufflinks) (2.18.0)\n",
      "Requirement already satisfied: stack-data in /srv/conda/lib/python3.11/site-packages (from ipython>=5.3.0->cufflinks) (0.6.2)\n",
      "Requirement already satisfied: traitlets>=5 in /srv/conda/lib/python3.11/site-packages (from ipython>=5.3.0->cufflinks) (5.9.0)\n",
      "Requirement already satisfied: pexpect>4.3 in /srv/conda/lib/python3.11/site-packages (from ipython>=5.3.0->cufflinks) (4.9.0)\n",
      "Requirement already satisfied: ipykernel>=4.5.1 in /srv/conda/lib/python3.11/site-packages (from ipywidgets>=7.0.0->cufflinks) (6.19.4)\n",
      "Requirement already satisfied: widgetsnbextension~=4.0.7 in /srv/conda/lib/python3.11/site-packages (from ipywidgets>=7.0.0->cufflinks) (4.0.10)\n",
      "Requirement already satisfied: jupyterlab-widgets~=3.0.7 in /srv/conda/lib/python3.11/site-packages (from ipywidgets>=7.0.0->cufflinks) (3.0.10)\n",
      "Requirement already satisfied: python-dateutil>=2.8.2 in /srv/conda/lib/python3.11/site-packages (from pandas>=0.19.2->cufflinks) (2.9.0)\n",
      "Requirement already satisfied: pytz>=2020.1 in /srv/conda/lib/python3.11/site-packages (from pandas>=0.19.2->cufflinks) (2024.1)\n",
      "Requirement already satisfied: tzdata>=2022.7 in /srv/conda/lib/python3.11/site-packages (from pandas>=0.19.2->cufflinks) (2024.1)\n",
      "Requirement already satisfied: tenacity>=6.2.0 in /srv/conda/lib/python3.11/site-packages (from plotly>=4.1.1->cufflinks) (8.3.0)\n",
      "Requirement already satisfied: packaging in /srv/conda/lib/python3.11/site-packages (from plotly>=4.1.1->cufflinks) (24.0)\n",
      "Requirement already satisfied: comm>=0.1.1 in /srv/conda/lib/python3.11/site-packages (from ipykernel>=4.5.1->ipywidgets>=7.0.0->cufflinks) (0.2.2)\n",
      "Requirement already satisfied: debugpy>=1.0 in /srv/conda/lib/python3.11/site-packages (from ipykernel>=4.5.1->ipywidgets>=7.0.0->cufflinks) (1.8.1)\n",
      "Requirement already satisfied: jupyter-client>=6.1.12 in /srv/conda/lib/python3.11/site-packages (from ipykernel>=4.5.1->ipywidgets>=7.0.0->cufflinks) (8.6.1)\n",
      "Requirement already satisfied: nest-asyncio in /srv/conda/lib/python3.11/site-packages (from ipykernel>=4.5.1->ipywidgets>=7.0.0->cufflinks) (1.6.0)\n",
      "Requirement already satisfied: psutil in /srv/conda/lib/python3.11/site-packages (from ipykernel>=4.5.1->ipywidgets>=7.0.0->cufflinks) (5.9.8)\n",
      "Requirement already satisfied: pyzmq>=17 in /srv/conda/lib/python3.11/site-packages (from ipykernel>=4.5.1->ipywidgets>=7.0.0->cufflinks) (26.0.3)\n",
      "Requirement already satisfied: tornado>=6.1 in /srv/conda/lib/python3.11/site-packages (from ipykernel>=4.5.1->ipywidgets>=7.0.0->cufflinks) (6.4)\n",
      "Requirement already satisfied: parso<0.9.0,>=0.8.3 in /srv/conda/lib/python3.11/site-packages (from jedi>=0.16->ipython>=5.3.0->cufflinks) (0.8.4)\n",
      "Requirement already satisfied: ptyprocess>=0.5 in /srv/conda/lib/python3.11/site-packages (from pexpect>4.3->ipython>=5.3.0->cufflinks) (0.7.0)\n",
      "Requirement already satisfied: wcwidth in /srv/conda/lib/python3.11/site-packages (from prompt-toolkit<3.1.0,>=3.0.41->ipython>=5.3.0->cufflinks) (0.2.13)\n",
      "Requirement already satisfied: executing>=1.2.0 in /srv/conda/lib/python3.11/site-packages (from stack-data->ipython>=5.3.0->cufflinks) (2.0.1)\n",
      "Requirement already satisfied: asttokens>=2.1.0 in /srv/conda/lib/python3.11/site-packages (from stack-data->ipython>=5.3.0->cufflinks) (2.4.1)\n",
      "Requirement already satisfied: pure-eval in /srv/conda/lib/python3.11/site-packages (from stack-data->ipython>=5.3.0->cufflinks) (0.2.2)\n",
      "Requirement already satisfied: jupyter-core!=5.0.*,>=4.12 in /srv/conda/lib/python3.11/site-packages (from jupyter-client>=6.1.12->ipykernel>=4.5.1->ipywidgets>=7.0.0->cufflinks) (5.7.2)\n",
      "Requirement already satisfied: platformdirs>=2.5 in /srv/conda/lib/python3.11/site-packages (from jupyter-core!=5.0.*,>=4.12->jupyter-client>=6.1.12->ipykernel>=4.5.1->ipywidgets>=7.0.0->cufflinks) (4.2.0)\n",
      "Building wheels for collected packages: cufflinks\n",
      "  Building wheel for cufflinks (setup.py) ... \u001b[?25ldone\n",
      "\u001b[?25h  Created wheel for cufflinks: filename=cufflinks-0.17.3-py3-none-any.whl size=67899 sha256=48a9f1bea9b7f15f808104e1fc0688367d973b57efcd83a7b120ab4ef3e9740a\n",
      "  Stored in directory: /home/jovyan/.cache/pip/wheels/c3/bf/8f/afa0730b29e347e8c1071049f89748c1262e7a14a838820ae6\n",
      "Successfully built cufflinks\n",
      "Installing collected packages: colorlover, cufflinks\n",
      "Successfully installed colorlover-0.3.0 cufflinks-0.17.3\n",
      "All packages have been successfully installed!!\n"
     ]
    }
   ],
   "source": [
    "# Run all of these installs to get everything to work!!\n",
    "!pip install fooddatacentral\n",
    "!pip install python-gnupg\n",
    "!pip install pint\n",
    "!pip install python-gnupg\n",
    "!pip install cufflinks\n",
    "\n",
    "from  scipy.optimize import linprog as lp\n",
    "import numpy as np\n",
    "import warnings\n",
    "import pandas as pd\n",
    "import fooddatacentral as fdc\n",
    "\n",
    "apikey = \"fy5zghnpRvzFtwfecjc3MRORcD2smFbXhA4LhSjY\"\n",
    "print(\"All packages have been successfully installed!!\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This is our dataset containing the food price data for both traditional Inuit/non traditional foods. **Note: there will be a lot of NANs due to lack of data on unusual nutrients.** However, it is thorough and contains lots of information about the nutrients."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Butter</th>\n",
       "      <th>Margarine</th>\n",
       "      <th>Yogurt</th>\n",
       "      <th>Cheddar Cheese</th>\n",
       "      <th>Processed Sliced Cheese</th>\n",
       "      <th>Skim Milk Powder</th>\n",
       "      <th>Soda Crackers</th>\n",
       "      <th>Spaghetti Noodles</th>\n",
       "      <th>Macaroni and Cheese Dinner</th>\n",
       "      <th>Corn Flakes</th>\n",
       "      <th>...</th>\n",
       "      <th>Pilot Biscuits</th>\n",
       "      <th>Chocolate Bars</th>\n",
       "      <th>Potato Chips</th>\n",
       "      <th>Milk 2%</th>\n",
       "      <th>UHT Milk</th>\n",
       "      <th>Apple Juice</th>\n",
       "      <th>Orange Juice</th>\n",
       "      <th>Tomato Juice</th>\n",
       "      <th>Vegetable Juice</th>\n",
       "      <th>Soft Drinks</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Alanine</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Alcohol, ethyl</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Amino acids</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Arginine</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ash</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 45 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                Butter  Margarine  Yogurt   Cheddar Cheese   \\\n",
       "Alanine            NaN        NaN      NaN              NaN   \n",
       "Alcohol, ethyl     NaN        NaN      NaN              0.0   \n",
       "Amino acids        NaN        NaN      NaN              NaN   \n",
       "Arginine           NaN        NaN      NaN              NaN   \n",
       "Ash                NaN        NaN      NaN              NaN   \n",
       "\n",
       "                Processed Sliced Cheese   Skim Milk Powder   Soda Crackers  \\\n",
       "Alanine                              NaN                NaN            NaN   \n",
       "Alcohol, ethyl                       0.0                NaN            NaN   \n",
       "Amino acids                          NaN                NaN            NaN   \n",
       "Arginine                             NaN                NaN            NaN   \n",
       "Ash                                  NaN                NaN            NaN   \n",
       "\n",
       "                Spaghetti Noodles  Macaroni and Cheese Dinner   Corn Flakes  \\\n",
       "Alanine                       NaN                          NaN          NaN   \n",
       "Alcohol, ethyl                NaN                          NaN          NaN   \n",
       "Amino acids                   NaN                          NaN          NaN   \n",
       "Arginine                      NaN                          NaN          NaN   \n",
       "Ash                           NaN                          NaN          NaN   \n",
       "\n",
       "                ...  Pilot Biscuits   Chocolate Bars   Potato Chips   Milk 2%  \\\n",
       "Alanine         ...              NaN              NaN            NaN      NaN   \n",
       "Alcohol, ethyl  ...              0.0              NaN            NaN      NaN   \n",
       "Amino acids     ...              NaN              NaN            NaN      NaN   \n",
       "Arginine        ...              NaN              NaN            NaN      NaN   \n",
       "Ash             ...              NaN              NaN            NaN      NaN   \n",
       "\n",
       "                UHT Milk   Apple Juice  Orange Juice  Tomato Juice  \\\n",
       "Alanine               NaN          NaN           NaN           NaN   \n",
       "Alcohol, ethyl        NaN          NaN           NaN           NaN   \n",
       "Amino acids           NaN          NaN           NaN           NaN   \n",
       "Arginine              NaN          NaN           NaN           NaN   \n",
       "Ash                   NaN          NaN           NaN           NaN   \n",
       "\n",
       "                Vegetable Juice  Soft Drinks  \n",
       "Alanine                     NaN          NaN  \n",
       "Alcohol, ethyl              NaN          NaN  \n",
       "Amino acids                 NaN          NaN  \n",
       "Arginine                    NaN          NaN  \n",
       "Ash                         NaN          NaN  \n",
       "\n",
       "[5 rows x 45 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv(\"data/Final Food Price Data for Both Nontraditional and Traditional - Table A.csv\")\n",
    "\n",
    "D = {}\n",
    "count = 0\n",
    "for food in  df.Food.tolist():\n",
    "    try:\n",
    "        FDC = df.loc[df.Food==food,:].FDC[count]\n",
    "        count+=1\n",
    "        D[food] = fdc.nutrients(apikey,FDC).Quantity\n",
    "    except AttributeError: \n",
    "        warnings.warn(\"Couldn't find FDC Code %s for food %s.\" % (food,FDC))        \n",
    "\n",
    "FoodNutrients = pd.DataFrame(D,dtype=float)\n",
    "FoodNutrients.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 5. <span style=\"color:red\">*Deliverable 5[A]*</span> - Solution <a name=\"solution\"></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This section contains the solution for our work."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now that we've loaded the data in, we're transforming it so we can get the prices of each (we use the FDC info here)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/srv/conda/lib/python3.11/site-packages/pandas/core/dtypes/cast.py:1601: UnitStrippedWarning: The unit of the quantity is stripped when downcasting to ndarray.\n",
      "  result[:] = values\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Food\n",
       "Butter                          1.5991189427312775 / hectogram\n",
       "Margarine                       1.1113561190738699 / hectogram\n",
       "Yogurt                          0.8276923076923077 / hectogram\n",
       "Cheddar Cheese                   3.262962962962963 / hectogram\n",
       "Processed Sliced Cheese         1.9622222222222223 / hectogram\n",
       "Skim Milk Powder                             2.192 / hectogram\n",
       "Soda Crackers                   1.6422222222222222 / hectogram\n",
       "Spaghetti Noodles               0.8222222222222223 / hectogram\n",
       "Macaroni and Cheese Dinner                    1.54 / hectogram\n",
       "Corn Flakes                     1.2328571428571429 / hectogram\n",
       "Quick Oatmeal                    1.468888888888889 / hectogram\n",
       "Flour                                          1.0 / hectogram\n",
       "White Bread                     0.6333333333333333 / hectogram\n",
       "Whole Wheat Bread               0.6157894736842104 / hectogram\n",
       "Frozen Corn                     0.7426666666666667 / hectogram\n",
       "Carrots                         0.6900000000000001 / hectogram\n",
       "Frozen Mixed Vegetables         0.7466666666666666 / hectogram\n",
       "Apples                                         1.0 / hectogram\n",
       "Bananas                                        1.0 / hectogram\n",
       "Grapes                                         2.0 / hectogram\n",
       "Tomatoes                                       1.0 / hectogram\n",
       "Onions                                         1.0 / hectogram\n",
       "Potatoes                       0.44052863436123346 / hectogram\n",
       "Peanut Butter                                 1.16 / hectogram\n",
       "Canned Luncheon Meat             1.888235294117647 / hectogram\n",
       "Canned Pink Salmon              2.3661971830985915 / hectogram\n",
       "Ground Beef                     1.6480000000000001 / hectogram\n",
       "Pork Chops                                   1.593 / hectogram\n",
       "Chicken Legs or Drumsticks                   1.002 / hectogram\n",
       "Bacon                            2.541333333333333 / hectogram\n",
       "Wieners                                       1.32 / hectogram\n",
       "Bologna                         1.6213333333333333 / hectogram\n",
       "Frozen Pre-Cooked Dinners                    2.848 / hectogram\n",
       "Frozen Pizza                                1.7175 / hectogram\n",
       "Frozen French Fries             0.8716666666666667 / hectogram\n",
       "Pilot Biscuits                              1.7675 / hectogram\n",
       "Chocolate Bars                                5.24 / hectogram\n",
       "Potato Chips                    2.9541666666666666 / hectogram\n",
       "Milk 2%                                      0.151 / deciliter\n",
       "UHT Milk                                     0.496 / deciliter\n",
       "Apple Juice                     0.6854166666666666 / deciliter\n",
       "Orange Juice                    0.6708333333333333 / deciliter\n",
       "Tomato Juice                     1.707407407407407 / deciliter\n",
       "Vegetable Juice                 0.8772486772486771 / deciliter\n",
       "Soft Drinks                     1.9971830985915489 / deciliter\n",
       "Name: FDC Price, dtype: object"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['FDC Quantity'] = df[['Quantity','Units']].T.apply(lambda x : fdc.units(x['Quantity'],x['Units']))\n",
    "\n",
    "# Now may want to filter df by time or place--need to get a unique set of food names.\n",
    "df['FDC Price'] = df['Price']/df['FDC Quantity']\n",
    "\n",
    "df.dropna(how='any', inplace=True) # Drop food with any missing data\n",
    "\n",
    "# To use minimum price observed\n",
    "Prices = df.groupby('Food',sort=False)['FDC Price'].min()\n",
    "Prices"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now we're going to get the diet minimum values and diet maximum values for those from Inuit population."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "DRIS_min = pd.read_csv(\"data/Inuit + General Minimum Dietary Requirements  - diet_minimums.csv\")\n",
    "DRIS_max = pd.read_csv(\"data/Dietary Requirements - diet_maximums.csv\")\n",
    "\n",
    "diet_min = DRIS_min.set_index('Nutrition')\n",
    "diet_max = DRIS_max.set_index('Nutrition')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Nutrition</th>\n",
       "      <th>C 1-3</th>\n",
       "      <th>F 4-8</th>\n",
       "      <th>M 4-8</th>\n",
       "      <th>F 9-13</th>\n",
       "      <th>M 9-13</th>\n",
       "      <th>F 14-18</th>\n",
       "      <th>M 14-18</th>\n",
       "      <th>F 19-30</th>\n",
       "      <th>M 19-30</th>\n",
       "      <th>F 31-50</th>\n",
       "      <th>M 31-50</th>\n",
       "      <th>F 51+</th>\n",
       "      <th>M 51+</th>\n",
       "      <th>Source</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Vitamin A, RAE</td>\n",
       "      <td>300.0</td>\n",
       "      <td>350.0</td>\n",
       "      <td>350.0</td>\n",
       "      <td>450.0</td>\n",
       "      <td>450.0</td>\n",
       "      <td>650.0</td>\n",
       "      <td>700.0</td>\n",
       "      <td>700.0</td>\n",
       "      <td>800.0</td>\n",
       "      <td>700.0</td>\n",
       "      <td>800.0</td>\n",
       "      <td>700.0</td>\n",
       "      <td>800.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Thiamin</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Riboflavin</td>\n",
       "      <td>0.6</td>\n",
       "      <td>0.7</td>\n",
       "      <td>0.7</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>1.3</td>\n",
       "      <td>1.6</td>\n",
       "      <td>1.6</td>\n",
       "      <td>1.6</td>\n",
       "      <td>1.6</td>\n",
       "      <td>1.6</td>\n",
       "      <td>1.6</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Niacin</td>\n",
       "      <td>1.6</td>\n",
       "      <td>1.6</td>\n",
       "      <td>1.6</td>\n",
       "      <td>1.6</td>\n",
       "      <td>1.6</td>\n",
       "      <td>1.6</td>\n",
       "      <td>1.6</td>\n",
       "      <td>1.6</td>\n",
       "      <td>1.6</td>\n",
       "      <td>1.6</td>\n",
       "      <td>1.6</td>\n",
       "      <td>1.6</td>\n",
       "      <td>1.6</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Folate, DFE</td>\n",
       "      <td>150.0</td>\n",
       "      <td>200.0</td>\n",
       "      <td>200.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>400.0</td>\n",
       "      <td>400.0</td>\n",
       "      <td>400.0</td>\n",
       "      <td>400.0</td>\n",
       "      <td>330.0</td>\n",
       "      <td>400.0</td>\n",
       "      <td>400.0</td>\n",
       "      <td>400.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Vitamin C, total ascorbic acid</td>\n",
       "      <td>25.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>55.0</td>\n",
       "      <td>55.0</td>\n",
       "      <td>75.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>95.0</td>\n",
       "      <td>110.0</td>\n",
       "      <td>95.0</td>\n",
       "      <td>110.0</td>\n",
       "      <td>95.0</td>\n",
       "      <td>110.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Energy</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>1200.0</td>\n",
       "      <td>1400.0</td>\n",
       "      <td>1600.0</td>\n",
       "      <td>1800.0</td>\n",
       "      <td>1800.0</td>\n",
       "      <td>2200.0</td>\n",
       "      <td>2000.0</td>\n",
       "      <td>2400.0</td>\n",
       "      <td>1800.0</td>\n",
       "      <td>2200.0</td>\n",
       "      <td>1600.0</td>\n",
       "      <td>2000.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Protein</td>\n",
       "      <td>13.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>34.0</td>\n",
       "      <td>34.0</td>\n",
       "      <td>46.0</td>\n",
       "      <td>52.0</td>\n",
       "      <td>46.0</td>\n",
       "      <td>56.0</td>\n",
       "      <td>46.0</td>\n",
       "      <td>56.0</td>\n",
       "      <td>46.0</td>\n",
       "      <td>56.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Fiber, total dietary</td>\n",
       "      <td>14.0</td>\n",
       "      <td>16.8</td>\n",
       "      <td>19.6</td>\n",
       "      <td>22.4</td>\n",
       "      <td>25.2</td>\n",
       "      <td>25.2</td>\n",
       "      <td>30.8</td>\n",
       "      <td>28.0</td>\n",
       "      <td>33.6</td>\n",
       "      <td>25.2</td>\n",
       "      <td>30.8</td>\n",
       "      <td>22.4</td>\n",
       "      <td>28.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Calcium, Ca</td>\n",
       "      <td>700.0</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>1300.0</td>\n",
       "      <td>1300.0</td>\n",
       "      <td>1300.0</td>\n",
       "      <td>1300.0</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>1200.0</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Carbohydrate, by difference</td>\n",
       "      <td>130.0</td>\n",
       "      <td>130.0</td>\n",
       "      <td>130.0</td>\n",
       "      <td>130.0</td>\n",
       "      <td>130.0</td>\n",
       "      <td>130.0</td>\n",
       "      <td>130.0</td>\n",
       "      <td>130.0</td>\n",
       "      <td>130.0</td>\n",
       "      <td>130.0</td>\n",
       "      <td>130.0</td>\n",
       "      <td>130.0</td>\n",
       "      <td>130.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Iron, Fe</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Magnesium, Mg</td>\n",
       "      <td>80.0</td>\n",
       "      <td>130.0</td>\n",
       "      <td>130.0</td>\n",
       "      <td>240.0</td>\n",
       "      <td>240.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>410.0</td>\n",
       "      <td>310.0</td>\n",
       "      <td>400.0</td>\n",
       "      <td>320.0</td>\n",
       "      <td>420.0</td>\n",
       "      <td>320.0</td>\n",
       "      <td>420.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Phosphorus, P</td>\n",
       "      <td>460.0</td>\n",
       "      <td>500.0</td>\n",
       "      <td>500.0</td>\n",
       "      <td>1250.0</td>\n",
       "      <td>1250.0</td>\n",
       "      <td>1250.0</td>\n",
       "      <td>1250.0</td>\n",
       "      <td>700.0</td>\n",
       "      <td>700.0</td>\n",
       "      <td>700.0</td>\n",
       "      <td>700.0</td>\n",
       "      <td>700.0</td>\n",
       "      <td>700.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Potassium, K</td>\n",
       "      <td>3000.0</td>\n",
       "      <td>3800.0</td>\n",
       "      <td>3800.0</td>\n",
       "      <td>4500.0</td>\n",
       "      <td>4500.0</td>\n",
       "      <td>4700.0</td>\n",
       "      <td>4700.0</td>\n",
       "      <td>4700.0</td>\n",
       "      <td>4700.0</td>\n",
       "      <td>4700.0</td>\n",
       "      <td>4700.0</td>\n",
       "      <td>4700.0</td>\n",
       "      <td>4700.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Vitamin B-12</td>\n",
       "      <td>0.9</td>\n",
       "      <td>1.2</td>\n",
       "      <td>1.2</td>\n",
       "      <td>1.8</td>\n",
       "      <td>1.8</td>\n",
       "      <td>2.4</td>\n",
       "      <td>2.4</td>\n",
       "      <td>2.4</td>\n",
       "      <td>2.4</td>\n",
       "      <td>2.4</td>\n",
       "      <td>2.4</td>\n",
       "      <td>2.4</td>\n",
       "      <td>2.4</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Vitamin B-6</td>\n",
       "      <td>0.6</td>\n",
       "      <td>0.7</td>\n",
       "      <td>0.7</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.3</td>\n",
       "      <td>1.5</td>\n",
       "      <td>1.6</td>\n",
       "      <td>1.8</td>\n",
       "      <td>1.6</td>\n",
       "      <td>1.8</td>\n",
       "      <td>1.6</td>\n",
       "      <td>1.8</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Vitamin E (alpha-tocopherol)</td>\n",
       "      <td>6.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Vitamin K (phylloquinone)</td>\n",
       "      <td>30.0</td>\n",
       "      <td>55.0</td>\n",
       "      <td>55.0</td>\n",
       "      <td>60.0</td>\n",
       "      <td>60.0</td>\n",
       "      <td>75.0</td>\n",
       "      <td>75.0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Zinc, Zn</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                         Nutrition   C 1-3   F 4-8   M 4-8  F 9-13  M 9-13  \\\n",
       "0                   Vitamin A, RAE   300.0   350.0   350.0   450.0   450.0   \n",
       "1                          Thiamin     0.1     0.1     0.1     0.1     0.1   \n",
       "2                       Riboflavin     0.6     0.7     0.7     1.0     1.0   \n",
       "3                           Niacin     1.6     1.6     1.6     1.6     1.6   \n",
       "4                      Folate, DFE   150.0   200.0   200.0   300.0   300.0   \n",
       "5   Vitamin C, total ascorbic acid    25.0    35.0    35.0    55.0    55.0   \n",
       "6                           Energy  1000.0  1200.0  1400.0  1600.0  1800.0   \n",
       "7                          Protein    13.0    19.0    19.0    34.0    34.0   \n",
       "8             Fiber, total dietary    14.0    16.8    19.6    22.4    25.2   \n",
       "9                      Calcium, Ca   700.0  1000.0  1000.0  1300.0  1300.0   \n",
       "10     Carbohydrate, by difference   130.0   130.0   130.0   130.0   130.0   \n",
       "11                        Iron, Fe     7.0    10.0    10.0     8.0     8.0   \n",
       "12                   Magnesium, Mg    80.0   130.0   130.0   240.0   240.0   \n",
       "13                   Phosphorus, P   460.0   500.0   500.0  1250.0  1250.0   \n",
       "14                    Potassium, K  3000.0  3800.0  3800.0  4500.0  4500.0   \n",
       "15                    Vitamin B-12     0.9     1.2     1.2     1.8     1.8   \n",
       "16                     Vitamin B-6     0.6     0.7     0.7     1.0     1.0   \n",
       "17    Vitamin E (alpha-tocopherol)     6.0     7.0     7.0    11.0    11.0   \n",
       "18       Vitamin K (phylloquinone)    30.0    55.0    55.0    60.0    60.0   \n",
       "19                        Zinc, Zn     3.0     5.0     5.0     8.0     8.0   \n",
       "\n",
       "    F 14-18  M 14-18  F 19-30  M 19-30  F 31-50  M 31-50   F 51+   M 51+  \\\n",
       "0     650.0    700.0    700.0    800.0    700.0    800.0   700.0   800.0   \n",
       "1       0.1      0.1      0.1      0.1      0.1      0.1     0.1     0.1   \n",
       "2       1.4      1.3      1.6      1.6      1.6      1.6     1.6     1.6   \n",
       "3       1.6      1.6      1.6      1.6      1.6      1.6     1.6     1.6   \n",
       "4     400.0    400.0    400.0    400.0    330.0    400.0   400.0   400.0   \n",
       "5      75.0     80.0     95.0    110.0     95.0    110.0    95.0   110.0   \n",
       "6    1800.0   2200.0   2000.0   2400.0   1800.0   2200.0  1600.0  2000.0   \n",
       "7      46.0     52.0     46.0     56.0     46.0     56.0    46.0    56.0   \n",
       "8      25.2     30.8     28.0     33.6     25.2     30.8    22.4    28.0   \n",
       "9    1300.0   1300.0   1000.0   1000.0   1000.0   1000.0  1200.0  1000.0   \n",
       "10    130.0    130.0    130.0    130.0    130.0    130.0   130.0   130.0   \n",
       "11     15.0     11.0     18.0      8.0     18.0      8.0     8.0     8.0   \n",
       "12    360.0    410.0    310.0    400.0    320.0    420.0   320.0   420.0   \n",
       "13   1250.0   1250.0    700.0    700.0    700.0    700.0   700.0   700.0   \n",
       "14   4700.0   4700.0   4700.0   4700.0   4700.0   4700.0  4700.0  4700.0   \n",
       "15      2.4      2.4      2.4      2.4      2.4      2.4     2.4     2.4   \n",
       "16      1.3      1.5      1.6      1.8      1.6      1.8     1.6     1.8   \n",
       "17     15.0     15.0     15.0     15.0     15.0     15.0    15.0    15.0   \n",
       "18     75.0     75.0     90.0    120.0     90.0    120.0    90.0   120.0   \n",
       "19      9.0     11.0      8.0     11.0      8.0     11.0     8.0    11.0   \n",
       "\n",
       "    Source  \n",
       "0      NaN  \n",
       "1      NaN  \n",
       "2      NaN  \n",
       "3      NaN  \n",
       "4      NaN  \n",
       "5      NaN  \n",
       "6      NaN  \n",
       "7      NaN  \n",
       "8      NaN  \n",
       "9      NaN  \n",
       "10     NaN  \n",
       "11     NaN  \n",
       "12     NaN  \n",
       "13     NaN  \n",
       "14     NaN  \n",
       "15     NaN  \n",
       "16     NaN  \n",
       "17     NaN  \n",
       "18     NaN  \n",
       "19     NaN  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DRIS_min"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We now load in the `solve_subsistence_problem` function from the lecture."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "def solve_subsistence_problem(FoodNutrients, Prices, dietmin, dietmax, max_weight=None, tol=1e-6):\n",
    "    \"\"\"Solve Stigler's Subsistence Cost Problem.\n",
    "\n",
    "    Inputs:\n",
    "       - FoodNutrients : A pd.DataFrame with rows corresponding to foods, columns to nutrients.\n",
    "       - Prices : A pd.Series of prices for different foods\n",
    "       - diet_min : A pd.Series of DRIs, with index corresponding to columns of FoodNutrients,\n",
    "                    describing minimum intakes.\n",
    "       - diet_max : A pd.Series of DRIs, with index corresponding to columns of FoodNutrients,\n",
    "                    describing maximum intakes.\n",
    "       - max_weight : Maximum weight (in hectograms) allowed for diet.\n",
    "       - tol : Solution values smaller than this in absolute value treated as zeros.\n",
    "       \n",
    "    \"\"\"\n",
    "    try: \n",
    "        p = Prices.apply(lambda x:x.magnitude)\n",
    "    except AttributeError:  # Maybe not passing in prices with units?\n",
    "        warnings.warn(\"Prices have no units.  BE CAREFUL!  We're assuming prices are per hectogram or deciliter!\")\n",
    "        p = Prices\n",
    "\n",
    "    p = p.dropna()\n",
    "\n",
    "    # Compile list that we have both prices and nutritional info for; drop if either missing\n",
    "    use = p.index.intersection(FoodNutrients.columns)\n",
    "    p = p[use]\n",
    "\n",
    "    # Drop nutritional information for foods we don't know the price of,\n",
    "    # and replace missing nutrients with zeros.\n",
    "    Aall = FoodNutrients[p.index].fillna(0)\n",
    "\n",
    "    # Drop rows of A that we don't have constraints for.\n",
    "    Amin = Aall.loc[Aall.index.intersection(dietmin.index)]\n",
    "    Amin = Amin.reindex(dietmin.index,axis=0)\n",
    "    idx = Amin.index.to_frame()\n",
    "    idx['type'] = 'min'\n",
    "    #Amin.index = pd.MultiIndex.from_frame(idx)\n",
    "    #dietmin.index = Amin.index\n",
    "    \n",
    "    Amax = Aall.loc[Aall.index.intersection(dietmax.index)]\n",
    "    Amax = Amax.reindex(dietmax.index,axis=0)\n",
    "    idx = Amax.index.to_frame()\n",
    "    idx['type'] = 'max'\n",
    "    #Amax.index = pd.MultiIndex.from_frame(idx)\n",
    "    #dietmax.index = Amax.index\n",
    "\n",
    "    # Minimum requirements involve multiplying constraint by -1 to make <=.\n",
    "    A = pd.concat([Amin,\n",
    "                   -Amax])\n",
    "\n",
    "    b = pd.concat([dietmin,\n",
    "                   -dietmax]) # Note sign change for max constraints\n",
    "\n",
    "    # Make sure order of p, A, b are consistent\n",
    "    A = A.reindex(p.index,axis=1)\n",
    "    A = A.reindex(b.index,axis=0)\n",
    "\n",
    "    if max_weight is not None:\n",
    "        # Add up weights of foods consumed\n",
    "        A.loc['Hectograms'] = -1\n",
    "        b.loc['Hectograms'] = -max_weight\n",
    "        \n",
    "    # Now solve problem!  (Note that the linear program solver we'll use assumes\n",
    "    # \"less-than-or-equal\" constraints.  We can switch back and forth by\n",
    "    # multiplying $A$ and $b$ by $-1$.)\n",
    "\n",
    "    result = lp(p, -A, -b, method='highs')\n",
    "\n",
    "    result.A = A\n",
    "    result.b = b\n",
    "    \n",
    "    if result.success:\n",
    "        result.diet = pd.Series(result.x,index=p.index)\n",
    "    else: # No feasible solution?\n",
    "        warnings.warn(result.message)\n",
    "        result.diet = pd.Series(result.x,index=p.index)*np.nan  \n",
    "\n",
    "    return result"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Finally, we select our group of interest. We are interested in solving the problem for a **Female between the ages 35-50**. We define the group clearly here in the first line. Now, run the following code to finally solve the problem!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Grocery Store Cost of Diet & Nutritional Outcomes - Solution Part 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Grocery Store: Cost of diet for F 31-50 is $18.31 per day.\n",
      "\n",
      "\n",
      "Diet (in 100s of grams or milliliters):\n",
      "Cheddar Cheese          0.463585\n",
      "Corn Flakes             0.272290\n",
      "Flour                   0.873253\n",
      "Frozen Corn             2.501381\n",
      "Carrots                18.886755\n",
      "Canned Pink Salmon      0.143536\n",
      "Frozen French Fries     0.409035\n",
      "Milk 2%                 0.048178\n",
      "dtype: float64\n",
      "\n",
      "\n",
      "With the following nutritional outcomes of interest:\n",
      "                                     Outcome  Recommendation\n",
      "Nutrition                                                   \n",
      "Vitamin A, RAE                  15944.387431           700.0\n",
      "Thiamin                             1.656368             0.1\n",
      "Riboflavin                          2.147023             1.6\n",
      "Niacin                             32.098569             1.6\n",
      "Folate, DFE                       464.373366           330.0\n",
      "Vitamin C, total ascorbic acid    135.945615            95.0\n",
      "Energy                           1800.000000          1800.0\n",
      "Protein                            46.081739            46.0\n",
      "Fiber, total dietary               60.216454            25.2\n",
      "Calcium, Ca                      1000.000000          1000.0\n",
      "Carbohydrate, by difference       323.529554           130.0\n",
      "Iron, Fe                           18.000000            18.0\n",
      "Magnesium, Mg                     320.000000           320.0\n",
      "Phosphorus, P                    1144.148822           700.0\n",
      "Potassium, K                     6918.910387          4700.0\n",
      "Vitamin B-12                        2.400000             2.4\n",
      "Vitamin B-6                         3.443812             1.6\n",
      "Vitamin E (alpha-tocopherol)       15.000000            15.0\n",
      "Vitamin K (phylloquinone)         266.075261            90.0\n",
      "Zinc, Zn                            8.000000             8.0\n",
      "Sodium, Na                       2300.000000          2300.0\n",
      "Energy                           1800.000000          3100.0\n",
      "\n",
      "\n",
      "Constraining nutrients are:\n",
      "['Energy', 'Calcium, Ca', 'Iron, Fe', 'Magnesium, Mg', 'Vitamin B-12', 'Vitamin E (alpha-tocopherol)', 'Zinc, Zn', 'Sodium, Na']\n"
     ]
    }
   ],
   "source": [
    "group = 'F 31-50'\n",
    "tol = 1e-6\n",
    "\n",
    "result = solve_subsistence_problem(FoodNutrients, Prices,diet_min[group], diet_max[group], tol=tol)\n",
    "\n",
    "print(\"Grocery Store: Cost of diet for %s is $%4.2f per day.\\n\" % (group, result.fun))\n",
    "\n",
    "diet = result.diet\n",
    "\n",
    "print(\"\\nDiet (in 100s of grams or milliliters):\")\n",
    "print(diet[diet >= tol]) \n",
    "print()\n",
    "\n",
    "tab = pd.DataFrame({\"Outcome\":np.abs(result.A).dot(diet),\"Recommendation\":np.abs(result.b)})\n",
    "print(\"\\nWith the following nutritional outcomes of interest:\")\n",
    "print(tab)\n",
    "print()\n",
    "\n",
    "print(\"\\nConstraining nutrients are:\")\n",
    "excess = tab.diff(axis=1).iloc[:,1]\n",
    "print(excess.loc[np.abs(excess) < tol*100].index.tolist())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Traditional + Grocery Store Cost of Diet & Nutritional Outcomes - Solution Part 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/srv/conda/lib/python3.11/site-packages/pandas/core/dtypes/cast.py:1601: UnitStrippedWarning: The unit of the quantity is stripped when downcasting to ndarray.\n",
      "  result[:] = values\n"
     ]
    }
   ],
   "source": [
    "df_b = pd.read_csv(\"data/Final Food Price Data for Both Nontraditional and Traditional - Table B - NonTraditional AND Traditional Foods.csv\")\n",
    "\n",
    "D_2 = {}\n",
    "count = 0\n",
    "for food in df_b.Food.tolist():\n",
    "    try:\n",
    "        FDC = df_b.loc[df_b.Food==food,:].FDC[count]\n",
    "        count+=1\n",
    "        D_2[food] = fdc.nutrients(apikey,FDC).Quantity\n",
    "    except AttributeError: \n",
    "        warnings.warn(\"Couldn't find FDC Code %s for food %s.\" % (food, FDC))        \n",
    "\n",
    "FoodNutrients_2 = pd.DataFrame(D_2,dtype=float)\n",
    "\n",
    "df_b['FDC Quantity'] = df_b[['Quantity','Units']].T.apply(lambda x : fdc.units(x['Quantity'],x['Units']))\n",
    "\n",
    "df_b['FDC Price'] = df_b['Price']/df_b['FDC Quantity']\n",
    "\n",
    "df_b.dropna(how= 'any', inplace=True) \n",
    "\n",
    "Prices_2 = df_b.groupby('Food',sort=False)['FDC Price'].min()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Cost of diet for F 31-50 is $14.49 per day.\n",
      "\n",
      "\n",
      "Diet (in 100s of grams or milliliters):\n",
      "caribou                0.582304\n",
      "seal                   2.802460\n",
      "Frozen Corn            2.275290\n",
      "Carrots                9.616823\n",
      "Frozen French Fries    3.951274\n",
      "Orange Juice           4.051505\n",
      "dtype: float64\n",
      "\n",
      "\n",
      "With the following nutritional outcomes of interest:\n",
      "                                    Outcome  Recommendation\n",
      "Nutrition                                                  \n",
      "Vitamin A, RAE                  8052.800175           700.0\n",
      "Thiamin                            1.871847             0.1\n",
      "Riboflavin                         2.057517             1.6\n",
      "Niacin                            40.364404             1.6\n",
      "Folate, DFE                      345.967784           330.0\n",
      "Vitamin C, total ascorbic acid   198.329706            95.0\n",
      "Energy                          3100.000000          1800.0\n",
      "Protein                          119.808197            46.0\n",
      "Fiber, total dietary              39.272565            25.2\n",
      "Calcium, Ca                     1000.000000          1000.0\n",
      "Carbohydrate, by difference      270.224443           130.0\n",
      "Iron, Fe                          45.741289            18.0\n",
      "Magnesium, Mg                    320.000000           320.0\n",
      "Phosphorus, P                   1511.060823           700.0\n",
      "Potassium, K                    6251.435654          4700.0\n",
      "Vitamin B-12                       3.837384             2.4\n",
      "Vitamin B-6                        2.800291             1.6\n",
      "Vitamin E (alpha-tocopherol)      15.000000            15.0\n",
      "Vitamin K (phylloquinone)        201.707079            90.0\n",
      "Zinc, Zn                           8.000000             8.0\n",
      "Sodium, Na                      2300.000000          2300.0\n",
      "Energy                          3100.000000          3100.0\n",
      "\n",
      "\n",
      "Constraining nutrients are:\n",
      "['Calcium, Ca', 'Magnesium, Mg', 'Vitamin E (alpha-tocopherol)', 'Zinc, Zn', 'Sodium, Na', 'Energy']\n"
     ]
    }
   ],
   "source": [
    "group = 'F 31-50'\n",
    "tol = 1e-6\n",
    "\n",
    "result = solve_subsistence_problem(FoodNutrients_2, Prices_2, diet_min[group], diet_max[group], tol=tol)\n",
    "\n",
    "print(\"Cost of diet for %s is $%4.2f per day.\\n\" % (group, result.fun))\n",
    "\n",
    "# Put back into nice series\n",
    "diet = result.diet\n",
    "\n",
    "print(\"\\nDiet (in 100s of grams or milliliters):\")\n",
    "print(diet[diet >= tol])  # Drop items with quantities less than precision of calculation.\n",
    "print()\n",
    "\n",
    "tab = pd.DataFrame({\"Outcome\":np.abs(result.A).dot(diet),\"Recommendation\":np.abs(result.b)})\n",
    "print(\"\\nWith the following nutritional outcomes of interest:\")\n",
    "print(tab)\n",
    "print()\n",
    "\n",
    "print(\"\\nConstraining nutrients are:\")\n",
    "excess = tab.diff(axis=1).iloc[:,1]\n",
    "print(excess.loc[np.abs(excess) < tol*100].index.tolist())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 6. <span style=\"color:red\">*Deliverable 6[C]*</span> - Sensitivity of Solution <a name=\"solution-sensitivity\"></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now that we have our solution, how does it change when prices change - **how sensitive is our solution?** Here, we display multiple different graphs showing the sensitivity."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Graphs for Only Grocery Store Sensitivity"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "import cufflinks as cf \n",
    "import pint\n",
    "import plotly.graph_objs as go"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "        <script type=\"text/javascript\">\n",
       "        window.PlotlyConfig = {MathJaxConfig: 'local'};\n",
       "        if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\n",
       "        if (typeof require !== 'undefined') {\n",
       "        require.undef(\"plotly\");\n",
       "        requirejs.config({\n",
       "            paths: {\n",
       "                'plotly': ['https://cdn.plot.ly/plotly-2.32.0.min']\n",
       "            }\n",
       "        });\n",
       "        require(['plotly'], function(Plotly) {\n",
       "            window._Plotly = Plotly;\n",
       "        });\n",
       "        }\n",
       "        </script>\n",
       "        "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "plotlyServerURL": "https://plot.ly"
       },
       "data": [
        {
         "mode": "lines",
         "name": "caribou",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "arctic char",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "seal",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "muktuk",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Butter",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Margarine",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Yogurt ",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Cheddar Cheese ",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Processed Sliced Cheese ",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Skim Milk Powder ",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          -0.01513721791444907,
          -0.009303338807733432,
          -0.003850656869292886,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Soda Crackers",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Spaghetti Noodles",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Macaroni and Cheese Dinner ",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Corn Flakes",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Quick Oatmeal",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Flour",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "White Bread ",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Whole Wheat Bread",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Frozen Corn",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          -0.0875284231088598,
          -0.06644684916273472,
          -0.046107470203294504,
          -0.02636145756728282,
          -0.011732307256401711,
          0,
          0.011596254888533412,
          0.02061076721191149,
          0.02704035991244313,
          0.02704035991244313,
          0.02704035991244313
         ]
        },
        {
         "mode": "lines",
         "name": "Carrots",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          -0.6003009913685747,
          -0.4294716756119877,
          -0.2836113593174855,
          -0.15722589054704356,
          -0.05545192082195516,
          0,
          0.044784436122162354,
          0.08764890410487158,
          0.12875128184680162,
          0.16823074052377832,
          0.20621058801579584
         ]
        },
        {
         "mode": "lines",
         "name": "Frozen Mixed Vegetables",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Apples ",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Bananas",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          -0.05839200574295651,
          -0.037948374828756806,
          -0.018120527232374353,
          -0.0025312648890574918,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Grapes",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Tomatoes",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Onions",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Potatoes",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Peanut Butter ",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Canned Luncheon Meat",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Canned Pink Salmon",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Ground Beef",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Pork Chops",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Chicken Legs or Drumsticks",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Bacon",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Wieners",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Bologna",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Frozen Pre-Cooked Dinners",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Frozen Pizza",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Frozen French Fries",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          -0.12943400862777651,
          -0.1009992222957893,
          -0.07399193703349091,
          -0.04871473980975257,
          -0.02406075849780345,
          0,
          0.023495414374248423,
          0.03630858224336777,
          0.047768973153743524,
          0.05392601085120248,
          0.05392601085120248
         ]
        },
        {
         "mode": "lines",
         "name": "Pilot Biscuits ",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Chocolate Bars ",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Potato Chips ",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Milk 2%",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          -0.006165205749810513,
          -0.0027086205148839585,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "UHT Milk ",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Apple Juice",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Orange Juice",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          -0.09849658979446167,
          -0.07800583829243649,
          -0.057926540792901555,
          -0.03824249806153847,
          -0.01893844908739863,
          0,
          0.012928850873200465,
          0.012986089411662306,
          0.012986089411662306,
          0.012986089411662306,
          0.012986089411662306
         ]
        },
        {
         "mode": "lines",
         "name": "Tomato Juice",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Vegetable Juice",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "mode": "lines",
         "name": "Soft Drinks",
         "type": "scatter",
         "x": [
          -0.6931471805599453,
          -0.5108256237659907,
          -0.35667494393873245,
          -0.2231435513142097,
          -0.10536051565782628,
          0,
          0.09531017980432495,
          0.1823215567939546,
          0.26236426446749106,
          0.33647223662121284,
          0.4054651081081644
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        }
       ],
       "layout": {
        "annotations": [
         {
          "align": "center",
          "font": {
           "size": 12
          },
          "showarrow": false,
          "text": "If you reduce the cost of carrots by 50%, the total cost of the diet is reduced by 33%. This graph visualizes these changes.",
          "x": 0.5,
          "xref": "paper",
          "y": 1.09,
          "yref": "paper"
         }
        ],
        "autosize": true,
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "fillpattern": {
             "fillmode": "overlay",
             "size": 10,
             "solidity": 0.2
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "text": "Effects of Carrot Price Changes on Total Cost of Diet"
        },
        "xaxis": {
         "autorange": true,
         "range": [
          -0.6931471805599453,
          0.4054651081081644
         ],
         "title": {
          "text": "Change in Log Price"
         },
         "type": "linear"
        },
        "yaxis": {
         "autorange": true,
         "range": [
          -0.645107190223262,
          0.2510167868704831
         ],
         "title": {
          "text": "Change in Log Cost"
         },
         "type": "linear"
        }
       }
      },
      "image/png": "",
      "text/html": [
       "<div>                            <div id=\"a161a171-bb65-426f-830b-71e6a40b1e9f\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"a161a171-bb65-426f-830b-71e6a40b1e9f\")) {                    Plotly.newPlot(                        \"a161a171-bb65-426f-830b-71e6a40b1e9f\",                        [{\"mode\":\"lines\",\"name\":\"caribou\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"arctic char\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"seal\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"muktuk\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Butter\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Margarine\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Yogurt \",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Cheddar Cheese \",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Processed Sliced Cheese \",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Skim Milk Powder \",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[-0.01513721791444907,-0.009303338807733432,-0.003850656869292886,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Soda Crackers\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Spaghetti Noodles\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Macaroni and Cheese Dinner \",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Corn Flakes\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Quick Oatmeal\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Flour\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"White Bread \",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Whole Wheat Bread\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Frozen Corn\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[-0.0875284231088598,-0.06644684916273472,-0.046107470203294504,-0.02636145756728282,-0.011732307256401711,0.0,0.011596254888533412,0.02061076721191149,0.02704035991244313,0.02704035991244313,0.02704035991244313],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Carrots\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[-0.6003009913685747,-0.4294716756119877,-0.2836113593174855,-0.15722589054704356,-0.05545192082195516,0.0,0.044784436122162354,0.08764890410487158,0.12875128184680162,0.16823074052377832,0.20621058801579584],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Frozen Mixed Vegetables\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Apples \",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Bananas\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[-0.05839200574295651,-0.037948374828756806,-0.018120527232374353,-0.0025312648890574918,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Grapes\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Tomatoes\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Onions\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Potatoes\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Peanut Butter \",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Canned Luncheon Meat\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Canned Pink Salmon\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Ground Beef\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Pork Chops\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Chicken Legs or Drumsticks\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Bacon\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Wieners\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Bologna\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Frozen Pre-Cooked Dinners\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Frozen Pizza\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Frozen French Fries\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[-0.12943400862777651,-0.1009992222957893,-0.07399193703349091,-0.04871473980975257,-0.02406075849780345,0.0,0.023495414374248423,0.03630858224336777,0.047768973153743524,0.05392601085120248,0.05392601085120248],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Pilot Biscuits \",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Chocolate Bars \",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Potato Chips \",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Milk 2%\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[-0.006165205749810513,-0.0027086205148839585,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"UHT Milk \",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Apple Juice\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Orange Juice\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[-0.09849658979446167,-0.07800583829243649,-0.057926540792901555,-0.03824249806153847,-0.01893844908739863,0.0,0.012928850873200465,0.012986089411662306,0.012986089411662306,0.012986089411662306,0.012986089411662306],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Tomato Juice\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Vegetable Juice\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Soft Drinks\",\"x\":[-0.6931471805599453,-0.5108256237659907,-0.35667494393873245,-0.2231435513142097,-0.10536051565782628,0.0,0.09531017980432495,0.1823215567939546,0.26236426446749106,0.33647223662121284,0.4054651081081644],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"title\":{\"text\":\"Effects of Carrot Price Changes on Total Cost of Diet\"},\"xaxis\":{\"title\":{\"text\":\"Change in Log Price\"}},\"yaxis\":{\"title\":{\"text\":\"Change in Log Cost\"}},\"annotations\":[{\"align\":\"center\",\"font\":{\"size\":12},\"showarrow\":false,\"text\":\"If you reduce the cost of carrots by 50%, the total cost of the diet is reduced by 33%. This graph visualizes these changes.\",\"x\":0.5,\"xref\":\"paper\",\"y\":1.09,\"yref\":\"paper\"}]},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('a161a171-bb65-426f-830b-71e6a40b1e9f');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Assuming cf.go_offline() is part of the Plotly setup in your environment\n",
    "cf.go_offline()\n",
    "\n",
    "# Define the scale of price changes you're interested in analyzing\n",
    "scale = [.5, .6, .7, .8, .9, 1., 1.1, 1.2, 1.3, 1.4, 1.5]\n",
    "\n",
    "# Calculate the baseline cost of the diet\n",
    "cost0 = solve_subsistence_problem(FoodNutrients_2, Prices_2, diet_min[group], diet_max[group], tol=tol).fun\n",
    "\n",
    "# Extract the magnitude of prices from Prices_2 for manipulation\n",
    "prices_magnitude = Prices_2.apply(lambda x: x.magnitude)\n",
    "\n",
    "# Initialize the dictionary to hold your price response data\n",
    "Price_response = {}\n",
    "\n",
    "# Iterate over each scale factor\n",
    "for s in scale:\n",
    "    cost = {}\n",
    "    for food_item in Prices_2.index:\n",
    "        # Scale the magnitude of the price\n",
    "        new_price = prices_magnitude[food_item] * s\n",
    "        \n",
    "        # Make a copy of the magnitudes to adjust a single price\n",
    "        my_p = prices_magnitude.copy()\n",
    "        my_p[food_item] = new_price\n",
    "\n",
    "        # Convert back to quantities assuming the unit is per hectogram\n",
    "        my_p_quantities = my_p.apply(lambda x: x * pint.Unit(\"hectogram\"))\n",
    "\n",
    "        # Solve the problem with adjusted prices\n",
    "        result = solve_subsistence_problem(FoodNutrients_2, my_p_quantities, diet_min[group], diet_max[group], tol=tol)\n",
    "        \n",
    "        # Log the change in cost relative to the baseline, directly using food_item as the key\n",
    "        cost[food_item] = np.log(result.fun / cost0)\n",
    "        \n",
    "    Price_response[np.log(s)] = cost\n",
    "\n",
    "\n",
    "# Convert the Price_response dictionary to a DataFrame for plotting\n",
    "Price_response_df = pd.DataFrame(Price_response).T\n",
    "\n",
    "# Plot using Plotly\n",
    "fig = go.Figure()\n",
    "\n",
    "# Add traces for each food item\n",
    "for food_item in Price_response_df.columns:\n",
    "    fig.add_trace(go.Scatter(x=Price_response_df.index, y=Price_response_df[food_item], mode='lines', name=food_item))\n",
    "\n",
    "# Update layout with titles and axis labels\n",
    "fig.update_layout(title='Effects of Carrot Price Changes on Total Cost of Diet',\n",
    "                  xaxis_title='Change in Log Price',\n",
    "                  yaxis_title='Change in Log Cost',\n",
    "                  annotations=[{\n",
    "                      'text': 'If you reduce the cost of carrots by 50%, the total cost of the diet is reduced by 33%. This graph visualizes these changes.',\n",
    "                      'showarrow': False,\n",
    "                      'align': 'center',\n",
    "                      'x': 0.5,\n",
    "                      'y': 1.09,\n",
    "                      'yref': 'paper',\n",
    "                      'xref': 'paper',\n",
    "                      'font': {'size': 12}\n",
    "                  }])\n",
    "\n",
    "# Show the plot\n",
    "fig.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "        <script type=\"text/javascript\">\n",
       "        window.PlotlyConfig = {MathJaxConfig: 'local'};\n",
       "        if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\n",
       "        if (typeof require !== 'undefined') {\n",
       "        require.undef(\"plotly\");\n",
       "        requirejs.config({\n",
       "            paths: {\n",
       "                'plotly': ['https://cdn.plot.ly/plotly-2.32.0.min']\n",
       "            }\n",
       "        });\n",
       "        require(['plotly'], function(Plotly) {\n",
       "            window._Plotly = Plotly;\n",
       "        });\n",
       "        }\n",
       "        </script>\n",
       "        "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/srv/conda/lib/python3.11/site-packages/pandas/core/dtypes/cast.py:1601: UnitStrippedWarning:\n",
      "\n",
      "The unit of the quantity is stripped when downcasting to ndarray.\n",
      "\n"
     ]
    },
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "linkText": "Export to plot.ly",
        "plotlyServerURL": "https://plot.ly",
        "showLink": true
       },
       "data": [
        {
         "line": {
          "color": "rgba(255, 153, 51, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Cheddar Cheese ",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0.45425803022834943,
          0.4635852383250739,
          0.4635852383250739,
          0.4635852383250739,
          0.4636798002956153,
          0.4636798002956153,
          0.46591817074500436,
          0.46591817074500436,
          0.46677804090116026,
          0,
          0
         ]
        },
        {
         "line": {
          "color": "rgba(55, 128, 191, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Skim Milk Powder ",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0,
          0,
          0,
          0,
          0.004971654452727307,
          0.004971654452727307,
          0.0013261676895452486,
          0.0013261676895452486,
          0,
          0,
          0
         ]
        },
        {
         "line": {
          "color": "rgba(50, 171, 96, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Corn Flakes",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0.29549466719353246,
          0.272290252933748,
          0.272290252933748,
          0.272290252933748,
          0.2722566142189322,
          0.2722566142189322,
          0.2726210570801422,
          0.2726210570801422,
          0.2722716120360926,
          0,
          0
         ]
        },
        {
         "line": {
          "color": "rgba(128, 0, 128, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Flour",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0.593774098076513,
          0.8732530655162973,
          0.8732530655162973,
          0.8732530655162973,
          0.8736966345595847,
          0.8736966345595847,
          0.8723434806298653,
          0.8723434806298653,
          0.8756896040871776,
          2.7806371704038293,
          2.8343471321651803
         ]
        },
        {
         "line": {
          "color": "rgba(219, 64, 82, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Frozen Corn",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          2.268635610012755,
          2.5013808786754104,
          2.5013808786754104,
          2.5013808786754104,
          2.5038122539961485,
          2.5038122539961485,
          2.4932053897597815,
          2.4932053897597815,
          2.489799212469519,
          6.767165502247927,
          6.546722661748803
         ]
        },
        {
         "line": {
          "color": "rgba(0, 128, 128, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Carrots",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          20.23753296543084,
          18.886755180288095,
          18.886755180288095,
          18.886755180288095,
          18.873885051176302,
          18.873885051176302,
          18.85891307199347,
          18.85891307199347,
          18.84765900469924,
          12.294749210235624,
          11.51816134864665
         ]
        },
        {
         "line": {
          "color": "rgba(255, 255, 51, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Apples ",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0.24361128188384357,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "line": {
          "color": "rgba(128, 128, 0, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Bananas",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1.473153318897977
         ]
        },
        {
         "line": {
          "color": "rgba(251, 128, 114, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Peanut Butter ",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0.12805251539256746,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "line": {
          "color": "rgba(128, 177, 211, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Canned Pink Salmon",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0.12104920427733595,
          0.14353599116275984,
          0.14353599116275984,
          0.14353599116275984,
          0.14354906613633078,
          0.14354906613633078,
          0.14262135938736997,
          0.14262135938736997,
          0.14278668549897625,
          0.5454545454545454,
          0.5454545454545454
         ]
        },
        {
         "line": {
          "color": "rgba(128, 177, 211, 0.8999999999999999)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Frozen French Fries",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0,
          0.4090351337566819,
          0.4090351337566819,
          0.4090351337566819,
          0.412937360723493,
          0.412937360723493,
          0.4209176724985478,
          0.4209176724985478,
          0.42559696306029865,
          1.583574308208625,
          1.8496577096528282
         ]
        },
        {
         "line": {
          "color": "rgba(255, 153, 51, 0.8999999999999999)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Milk 2%",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0,
          0.04817754604191061,
          0.04817754604191061,
          0.04817754604191061,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "line": {
          "color": "rgba(55, 128, 191, 0.8999999999999999)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Orange Juice",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0.02578774258599594,
          0.02578774258599594,
          0.03537723503050071,
          3.0087653074825926,
          3.1183272523014787
         ]
        }
       ],
       "layout": {
        "annotations": [
         {
          "align": "center",
          "font": {
           "size": 12
          },
          "showarrow": false,
          "text": "As you increase the price of carrots, you consume less and therefore substitute with other foods such as frozen corn.",
          "x": 0.5,
          "xref": "paper",
          "y": 1.09,
          "yref": "paper"
         }
        ],
        "autosize": true,
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "fillpattern": {
             "fillmode": "overlay",
             "size": 10,
             "solidity": 0.2
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "text": "Diet Changes as Carrot Price Increases"
        },
        "xaxis": {
         "autorange": true,
         "range": [
          0.34500000000000003,
          2.7600000000000002
         ],
         "title": {
          "text": "Carrots Price"
         },
         "type": "linear"
        },
        "yaxis": {
         "autorange": true,
         "range": [
          -1.12430738696838,
          21.36184035239922
         ],
         "title": {
          "text": "Hectograms"
         },
         "type": "linear"
        }
       }
      },
      "image/png": "",
      "text/html": [
       "<div>                            <div id=\"4f683e1a-eb35-4dab-b497-05ebe789cb76\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};\n",
       "                    window.PLOTLYENV.BASE_URL='https://plot.ly';                                    if (document.getElementById(\"4f683e1a-eb35-4dab-b497-05ebe789cb76\")) {                    Plotly.newPlot(                        \"4f683e1a-eb35-4dab-b497-05ebe789cb76\",                        [{\"line\":{\"color\":\"rgba(255, 153, 51, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Cheddar Cheese \",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.45425803022834943,0.4635852383250739,0.4635852383250739,0.4635852383250739,0.4636798002956153,0.4636798002956153,0.46591817074500436,0.46591817074500436,0.46677804090116026,0.0,0.0],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(55, 128, 191, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Skim Milk Powder \",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.0,0.0,0.0,0.0,0.004971654452727307,0.004971654452727307,0.0013261676895452486,0.0013261676895452486,0.0,0.0,0.0],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(50, 171, 96, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Corn Flakes\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.29549466719353246,0.272290252933748,0.272290252933748,0.272290252933748,0.2722566142189322,0.2722566142189322,0.2726210570801422,0.2726210570801422,0.2722716120360926,0.0,0.0],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(128, 0, 128, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Flour\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.593774098076513,0.8732530655162973,0.8732530655162973,0.8732530655162973,0.8736966345595847,0.8736966345595847,0.8723434806298653,0.8723434806298653,0.8756896040871776,2.7806371704038293,2.8343471321651803],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(219, 64, 82, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Frozen Corn\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[2.268635610012755,2.5013808786754104,2.5013808786754104,2.5013808786754104,2.5038122539961485,2.5038122539961485,2.4932053897597815,2.4932053897597815,2.489799212469519,6.767165502247927,6.546722661748803],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(0, 128, 128, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Carrots\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[20.23753296543084,18.886755180288095,18.886755180288095,18.886755180288095,18.873885051176302,18.873885051176302,18.85891307199347,18.85891307199347,18.84765900469924,12.294749210235624,11.51816134864665],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(255, 255, 51, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Apples \",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.24361128188384357,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(128, 128, 0, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Bananas\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.473153318897977],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(251, 128, 114, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Peanut Butter \",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.12805251539256746,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(128, 177, 211, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Canned Pink Salmon\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.12104920427733595,0.14353599116275984,0.14353599116275984,0.14353599116275984,0.14354906613633078,0.14354906613633078,0.14262135938736997,0.14262135938736997,0.14278668549897625,0.5454545454545454,0.5454545454545454],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(128, 177, 211, 0.8999999999999999)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Frozen French Fries\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.0,0.4090351337566819,0.4090351337566819,0.4090351337566819,0.412937360723493,0.412937360723493,0.4209176724985478,0.4209176724985478,0.42559696306029865,1.583574308208625,1.8496577096528282],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(255, 153, 51, 0.8999999999999999)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Milk 2%\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.0,0.04817754604191061,0.04817754604191061,0.04817754604191061,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(55, 128, 191, 0.8999999999999999)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Orange Juice\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.02578774258599594,0.02578774258599594,0.03537723503050071,3.0087653074825926,3.1183272523014787],\"type\":\"scatter\"}],                        {\"annotations\":[{\"align\":\"center\",\"font\":{\"size\":12},\"showarrow\":false,\"text\":\"As you increase the price of carrots, you consume less and therefore substitute with other foods such as frozen corn.\",\"x\":0.5,\"xref\":\"paper\",\"y\":1.09,\"yref\":\"paper\"}],\"template\":{\"data\":{\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"title\":{\"text\":\"Diet Changes as Carrot Price Increases\"},\"xaxis\":{\"title\":{\"text\":\"Carrots Price\"}},\"yaxis\":{\"title\":{\"text\":\"Hectograms\"}}},                        {\"showLink\": true, \"linkText\": \"Export to plot.ly\", \"plotlyServerURL\": \"https://plot.ly\", \"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('4f683e1a-eb35-4dab-b497-05ebe789cb76');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "cf.go_offline()\n",
    "\n",
    "ReferenceGood = 'Carrots'\n",
    "\n",
    "scale = [0.5,0.75,0.9,1.,1.1,1.2,1.3,1.4,1.5,2,4]\n",
    "\n",
    "cost0 = solve_subsistence_problem(FoodNutrients,Prices,diet_min[group],diet_max[group],tol=tol).fun\n",
    "\n",
    "my_p = Prices.copy()\n",
    "\n",
    "diet = {}\n",
    "for s in scale:\n",
    "\n",
    "    my_p[ReferenceGood] = Prices[ReferenceGood]*s\n",
    "    result = solve_subsistence_problem(FoodNutrients,my_p,diet_min[group],diet_max[group],tol=tol)\n",
    "    diet[my_p[ReferenceGood]] = result.diet\n",
    "\n",
    "Diet_response = pd.DataFrame(diet).T\n",
    "Diet_response.index.name = '%s Price' % ReferenceGood\n",
    "\n",
    "Diet_response.reset_index(inplace=True)\n",
    "\n",
    "# Get rid of units for index (cufflinks chokes)\n",
    "Diet_response['%s Price' % ReferenceGood] = Diet_response['%s Price' % ReferenceGood].apply(lambda x: x.magnitude)\n",
    "\n",
    "Diet_response = Diet_response.set_index('%s Price' % ReferenceGood)\n",
    "\n",
    "# Just look at goods consumed in quantities greater than error tolerance\n",
    "\n",
    "Diet_response.loc[:, (Diet_response > tol).sum() > 0].iplot(layout={\n",
    "    'title': 'Diet Changes as Carrot Price Increases',  \n",
    "    'xaxis': {\n",
    "        'title': '%s Price' % ReferenceGood  \n",
    "    },\n",
    "    'yaxis': {\n",
    "        'title': 'Hectograms' \n",
    "    },\n",
    "    'annotations': [\n",
    "        {\n",
    "            'text': 'As you increase the price of carrots, you consume less and therefore substitute with other foods such as frozen corn.', \n",
    "            'showarrow': False,\n",
    "            'align': 'center',\n",
    "            'x': 0.5,\n",
    "            'y': 1.09,\n",
    "            'yref': 'paper',\n",
    "            'xref': 'paper',\n",
    "            'font': {\n",
    "                'size': 12\n",
    "            }\n",
    "        }\n",
    "    ]\n",
    "})\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "linkText": "Export to plot.ly",
        "plotlyServerURL": "https://plot.ly",
        "showLink": true
       },
       "data": [
        {
         "line": {
          "color": "rgba(255, 153, 51, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Carbohydrate, by difference",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          330.86728211603764,
          323.529553794795,
          323.529553794795,
          323.529553794795,
          323.59516610653503,
          323.59516610653503,
          323.4629642513415,
          323.4629642513415,
          323.63778029563736,
          508.2981464848381,
          541.2961220916549
         ]
        },
        {
         "line": {
          "color": "rgba(55, 128, 191, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Energy",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          1800,
          1800,
          1800,
          1800,
          1799.9999999999998,
          1799.9999999999998,
          1799.9999999999998,
          1799.9999999999998,
          1801.5907608621446,
          2929.296696591308,
          3100.0000000000005
         ]
        },
        {
         "line": {
          "color": "rgba(50, 171, 96, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Protein",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          45.99999999999999,
          46.08173919035694,
          46.08173919035694,
          46.08173919035694,
          46.09312336951417,
          46.09312336951417,
          46.00000000000001,
          46.00000000000001,
          46,
          63.886621912942616,
          64.82442520437493
         ]
        },
        {
         "line": {
          "color": "rgba(128, 0, 128, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Total lipid (fat)",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          34.960153821874485,
          35.75752712527635,
          35.75752712527635,
          35.75752712527635,
          35.71923476891837,
          35.71923476891837,
          35.862003414640554,
          35.862003414640554,
          35.94324576211418,
          52.013484180087396,
          55.20878989918885
         ]
        }
       ],
       "layout": {
        "annotations": [
         {
          "align": "center",
          "font": {
           "size": 12
          },
          "showarrow": false,
          "text": "When the price of carrots increases, therefore decreasing the consumption, other food items such as frozen corn and orange juice increase, which increases energy levels & carbohydrates.",
          "x": 0.5,
          "xref": "paper",
          "y": 1.09,
          "yref": "paper"
         }
        ],
        "autosize": true,
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "fillpattern": {
             "fillmode": "overlay",
             "size": 10,
             "solidity": 0.2
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "text": "Nutrient Changes in Diet as Carrot Price Increases."
        },
        "xaxis": {
         "autorange": true,
         "range": [
          0.34500000000000003,
          2.7600000000000002
         ],
         "title": {
          "text": "Price of Carrots ($)"
         },
         "type": "linear"
        },
        "yaxis": {
         "autorange": true,
         "range": [
          -135.31983763246586,
          3270.2799914543407
         ],
         "title": {
          "text": "Nutrients"
         },
         "type": "linear"
        }
       }
      },
      "image/png": "",
      "text/html": [
       "<div>                            <div id=\"6d715fd2-2c03-4dca-93c9-ac16cdc74bd0\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};\n",
       "                    window.PLOTLYENV.BASE_URL='https://plot.ly';                                    if (document.getElementById(\"6d715fd2-2c03-4dca-93c9-ac16cdc74bd0\")) {                    Plotly.newPlot(                        \"6d715fd2-2c03-4dca-93c9-ac16cdc74bd0\",                        [{\"line\":{\"color\":\"rgba(255, 153, 51, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Carbohydrate, by difference\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[330.86728211603764,323.529553794795,323.529553794795,323.529553794795,323.59516610653503,323.59516610653503,323.4629642513415,323.4629642513415,323.63778029563736,508.2981464848381,541.2961220916549],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(55, 128, 191, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Energy\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[1800.0,1800.0,1800.0,1800.0,1799.9999999999998,1799.9999999999998,1799.9999999999998,1799.9999999999998,1801.5907608621446,2929.296696591308,3100.0000000000005],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(50, 171, 96, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Protein\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[45.99999999999999,46.08173919035694,46.08173919035694,46.08173919035694,46.09312336951417,46.09312336951417,46.00000000000001,46.00000000000001,46.0,63.886621912942616,64.82442520437493],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(128, 0, 128, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Total lipid (fat)\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[34.960153821874485,35.75752712527635,35.75752712527635,35.75752712527635,35.71923476891837,35.71923476891837,35.862003414640554,35.862003414640554,35.94324576211418,52.013484180087396,55.20878989918885],\"type\":\"scatter\"}],                        {\"annotations\":[{\"align\":\"center\",\"font\":{\"size\":12},\"showarrow\":false,\"text\":\"When the price of carrots increases, therefore decreasing the consumption, other food items such as frozen corn and orange juice increase, which increases energy levels & carbohydrates.\",\"x\":0.5,\"xref\":\"paper\",\"y\":1.09,\"yref\":\"paper\"}],\"template\":{\"data\":{\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"title\":{\"text\":\"Nutrient Changes in Diet as Carrot Price Increases.\"},\"xaxis\":{\"title\":{\"text\":\"Price of Carrots ($)\"}},\"yaxis\":{\"title\":{\"text\":\"Nutrients\"}}},                        {\"showLink\": true, \"linkText\": \"Export to plot.ly\", \"plotlyServerURL\": \"https://plot.ly\", \"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('6d715fd2-2c03-4dca-93c9-ac16cdc74bd0');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Matrix product maps quantities of food into quantities of nutrients\n",
    "NutrientResponse = Diet_response@FoodNutrients.T\n",
    "\n",
    "# Drop columns of missing nutrients\n",
    "NutrientResponse = NutrientResponse.loc[:,NutrientResponse.count()>0]\n",
    "NutrientResponse.iplot(layout={\n",
    "    'title': 'Nutrient Changes in Diet as Carrot Price Increases.', \n",
    "    'xaxis': {\n",
    "        'title': 'Price of Carrots ($)'\n",
    "    },\n",
    "    'yaxis': {\n",
    "        'title': 'Nutrients'\n",
    "    },\n",
    "    'annotations': [{\n",
    "        'text': 'When the price of carrots increases, therefore decreasing the consumption, other food items such as frozen corn and orange juice increase, which increases energy levels & carbohydrates.',  \n",
    "        'showarrow': False,\n",
    "        'align': 'center',\n",
    "        'x': 0.5,\n",
    "        'y': 1.09,  # Adjust this value as needed to position your subtitle\n",
    "        'yref': 'paper',\n",
    "        'xref': 'paper',\n",
    "        'font': {\n",
    "            'size': 12  # Adjust font size as needed\n",
    "        }\n",
    "    }]\n",
    "})\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "        <script type=\"text/javascript\">\n",
       "        window.PlotlyConfig = {MathJaxConfig: 'local'};\n",
       "        if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\n",
       "        if (typeof require !== 'undefined') {\n",
       "        require.undef(\"plotly\");\n",
       "        requirejs.config({\n",
       "            paths: {\n",
       "                'plotly': ['https://cdn.plot.ly/plotly-2.32.0.min']\n",
       "            }\n",
       "        });\n",
       "        require(['plotly'], function(Plotly) {\n",
       "            window._Plotly = Plotly;\n",
       "        });\n",
       "        }\n",
       "        </script>\n",
       "        "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/srv/conda/lib/python3.11/site-packages/pandas/core/dtypes/cast.py:1601: UnitStrippedWarning:\n",
      "\n",
      "The unit of the quantity is stripped when downcasting to ndarray.\n",
      "\n"
     ]
    },
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "linkText": "Export to plot.ly",
        "plotlyServerURL": "https://plot.ly",
        "showLink": true
       },
       "data": [
        {
         "line": {
          "color": "rgba(255, 153, 51, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Cheddar Cheese ",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0.45425803022834943,
          0.4635852383250739,
          0.4635852383250739,
          0.4635852383250739,
          0.4636798002956153,
          0.4636798002956153,
          0.46591817074500436,
          0.46591817074500436,
          0.46677804090116026,
          0,
          0
         ]
        },
        {
         "line": {
          "color": "rgba(55, 128, 191, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Skim Milk Powder ",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0,
          0,
          0,
          0,
          0.004971654452727307,
          0.004971654452727307,
          0.0013261676895452486,
          0.0013261676895452486,
          0,
          0,
          0
         ]
        },
        {
         "line": {
          "color": "rgba(50, 171, 96, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Corn Flakes",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0.29549466719353246,
          0.272290252933748,
          0.272290252933748,
          0.272290252933748,
          0.2722566142189322,
          0.2722566142189322,
          0.2726210570801422,
          0.2726210570801422,
          0.2722716120360926,
          0,
          0
         ]
        },
        {
         "line": {
          "color": "rgba(128, 0, 128, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Flour",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0.593774098076513,
          0.8732530655162973,
          0.8732530655162973,
          0.8732530655162973,
          0.8736966345595847,
          0.8736966345595847,
          0.8723434806298653,
          0.8723434806298653,
          0.8756896040871776,
          2.7806371704038293,
          2.8343471321651803
         ]
        },
        {
         "line": {
          "color": "rgba(219, 64, 82, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Frozen Corn",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          2.268635610012755,
          2.5013808786754104,
          2.5013808786754104,
          2.5013808786754104,
          2.5038122539961485,
          2.5038122539961485,
          2.4932053897597815,
          2.4932053897597815,
          2.489799212469519,
          6.767165502247927,
          6.546722661748803
         ]
        },
        {
         "line": {
          "color": "rgba(0, 128, 128, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Carrots",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          20.23753296543084,
          18.886755180288095,
          18.886755180288095,
          18.886755180288095,
          18.873885051176302,
          18.873885051176302,
          18.85891307199347,
          18.85891307199347,
          18.84765900469924,
          12.294749210235624,
          11.51816134864665
         ]
        },
        {
         "line": {
          "color": "rgba(255, 255, 51, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Apples ",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0.24361128188384357,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "line": {
          "color": "rgba(128, 128, 0, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Bananas",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1.473153318897977
         ]
        },
        {
         "line": {
          "color": "rgba(251, 128, 114, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Peanut Butter ",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0.12805251539256746,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "line": {
          "color": "rgba(128, 177, 211, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Canned Pink Salmon",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0.12104920427733595,
          0.14353599116275984,
          0.14353599116275984,
          0.14353599116275984,
          0.14354906613633078,
          0.14354906613633078,
          0.14262135938736997,
          0.14262135938736997,
          0.14278668549897625,
          0.5454545454545454,
          0.5454545454545454
         ]
        },
        {
         "line": {
          "color": "rgba(128, 177, 211, 0.8999999999999999)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Frozen French Fries",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0,
          0.4090351337566819,
          0.4090351337566819,
          0.4090351337566819,
          0.412937360723493,
          0.412937360723493,
          0.4209176724985478,
          0.4209176724985478,
          0.42559696306029865,
          1.583574308208625,
          1.8496577096528282
         ]
        },
        {
         "line": {
          "color": "rgba(255, 153, 51, 0.8999999999999999)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Milk 2%",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0,
          0.04817754604191061,
          0.04817754604191061,
          0.04817754604191061,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "line": {
          "color": "rgba(55, 128, 191, 0.8999999999999999)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Orange Juice",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0.02578774258599594,
          0.02578774258599594,
          0.03537723503050071,
          3.0087653074825926,
          3.1183272523014787
         ]
        }
       ],
       "layout": {
        "annotations": [
         {
          "align": "center",
          "font": {
           "size": 12
          },
          "showarrow": false,
          "text": "There were not any changes given this constraint, meaning the food weight was less than 120 Hectograms.",
          "x": 0.5,
          "xref": "paper",
          "y": 1.1,
          "yref": "paper"
         }
        ],
        "autosize": true,
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "fillpattern": {
             "fillmode": "overlay",
             "size": 10,
             "solidity": 0.2
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "text": "Changes in Diet Given the Maximum Constraint of 120 Hectograms of Food Per Day"
        },
        "xaxis": {
         "autorange": true,
         "range": [
          0.34500000000000003,
          2.7600000000000002
         ],
         "title": {
          "text": "Carrot Price ($)"
         },
         "type": "linear"
        },
        "yaxis": {
         "autorange": true,
         "range": [
          -1.12430738696838,
          21.36184035239922
         ],
         "title": {
          "text": "Hectograms"
         },
         "type": "linear"
        }
       }
      },
      "image/png": "iVBORw0KGgoAAAANSUhEUgAABF4AAAFoCAYAAABuXz/oAAAAAXNSR0IArs4c6QAAIABJREFUeF7snQW4VUX3xhfdDZcQQaRTGgHp7ka6u7tRkG6kRKRBQUAQQRAQJZQQJKRFRBAFLt154f9/B+d8++57Yp97ghvvPM/3fHLP3rNnfjN79sw7a62J8vLly5fCRAIkQAIkQAIkQAIkQAIkQAIkQAIkQAIk4HUCUSi8eJ0pMyQBEiABEiABEiABEiABEiABEiABEiABRYDCCzsCCZAACZAACZAACZAACZAACZAACZAACfiIAIUXH4FltiRAAiRAAiRAAiRAAiRAAiRAAiRAAiRA4YV9gARIgARIgARIgARIgARIgARIgARIgAR8RIDCi4/AMlsSIAESIAESIAESIAESIAESIAESIAESoPDCPkACJEACJEACJEACJEACJEACJEACJEACPiJA4cVHYJktCZAACZAACZAACZAACZAACZAACZAACVB4YR8gARIgARIgARIgARIgARIgARIgARIgAR8RoPDiI7DMlgRIgARIgARIgARIgARIgARIgARIgAQovLAPkAAJkAAJkAAJkAAJkAAJkAAJkAAJkICPCFB48RFYZksCJEACJEACJEACJEACJEACJEACJEACFF7YB0iABEiABEiABEiABEiABEiABEiABEjARwQovPgILLMlARIgARIgARIgARIgARIgARIgARIgAQov7AMkQAIkQAIkQAIkQAIkQAIkQAIkQAIk4CMCFF58BJbZkgAJkAAJkAAJkAAJkAAJkAAJkAAJkACFF/YBEiABEiABEiABEiABEiABEiABEiABEvARAQovPgLLbEmABEiABEiABEiABEiABEiABEiABEiAwgv7AAmQAAmQAAmQAAmQAAmQAAmQAAmQAAn4iACFFx+BZbYkQAIkQAIkQAIkQAIkQAIkQAIkQAIkQOGFfYAESIAESIAESIAESIAESIAESIAESIAEfESAwouPwDJbEiABEiABEiABEiABEiABEiABEiABEqDwwj5AAiRAAiRAAiRAAiRAAiRAAiRAAiRAAj4iQOHFR2CZLQmQAAmQAAmQAAmQAAmQAAmQAAmQAAlQeGEfIAESIAESIAESIAESIAESIAESIAESIAEfEaDw4iOwzJYESIAESIAESIAESIAESIAESIAESIAEKLywD5AACZAACZAACZAACZAACZAACZAACZCAjwhQePERWGZLAiRAAiRAAiRAAiRAAiRAAiRAAiRAAhRe2AdIgARIgARIgARIgARIgARIgARIgARIwEcEKLz4CCyzJQESIAESIAESIAESIAESIAESIAESIAEKL+wDJEACJEACJEACJEACJEACJEACJEACJOAjAhRefASW2ZIACZAACZAACZAACZAACZAACZAACZAAhRf2ARIgARIgARIgARIgARIgARIgARIgARLwEQEKLz4Cy2xJgARIgARIgARIgARIgARIgARIgARIgMIL+wAJkAAJkAAJkAAJkAAJkAAJkAAJkAAJ+IgAhRcfgWW2JEACJEACJEACJEACJEACJEACJEACJBAphZeXL1/K1eu35Nmz55IiWWKJHStmsJ6wYeseuXv/oTStWz7S95AnT58pTrFjx5To0aK9Nh5oswcPH0u0aNEkTuzg7eWvQt1/8Eiu3bgtiRPFl8QJ40uUKFGCPfp5UJA8fvxUYsaILjFjxvBXsbz2nL//DZRtuw5K0QI5JXvm9F7LN6xn9PDRY3nx4qXEjxcnrBfV4/LdvnNfbt25J8mTJpIE8eN6nF94yCCsjGGOWB08ekaOnPhDML6keyNA6lYtaQkrxhskZ+Pyo8dP5dqNV9+6VAHJJF7c2E7zxhh75dpNSZs6hcQKh2OYJXC8yC0C6Gfbdx+Scxf+lRdBL6Rg3qzybv4cbuXxui5et3m3PH36TN6vVfZ1FYHPJQESIAESIAEbgUglvJz+46JMnL1C9h8+FawLYJHZoHopqV6hmJqYvt9xpPx58bIc2Dw30neV4RMXytpNu2TuhL5Sokhur/EoVKWTYMGrU9w4sSVFskTyboGcUqdKCcmdLUOwZ126fE0qNe4vubJmkC8//dCtclz856qs3rBTShV9Rwq+k9WtewOv35bpn62W3ft/k5u37wW7t3qFolK9fFEpXii3RI0aRSDYDRo7T9o3rS692td36zn+ujgo6IVM/2yNvJ0+teJsTKhjp4FT5YPeLXw+UcUkvmbLIerxA7s2lhYNKoVAMGDUXPl2+z7199+2L5Ro0aL6BFPZBr3l6rVb8sumuS4Xpj4pgI8zvXHrrkz9dJVs3Xkw2DuXNHECaVy7nOoHqVMm83EpHGf/84Hjsu/Xk9K0XnlJlSKp18vhyRjmydhhpSJzl34jMxeutV0KwWPLikkub4UQ3aDDCHXdms9Ghrj+0LHfZdS0pfL7n5eC/VahZEEZ0qOZBCRPHOzvl6/ekD4j58hvJ8/Z/l6uRH4ZN7iDpXdCv6soO+pgTlWbDZRrN+745JvqbExzCZIXOCWAfta2z8RgcyaIGPhG2EvGMdve7+OHdJAaFYv5jTr63b37D2X31zNdPtPenCRbpnRqjKxarojL+71xgbvzIm88k3mQAAmQAAn4j0CkEV5Wb9whIyYvVmSrlXtXcmd/Wx4/eSqnzl6ULTt+UX+fN6mfFC+Ui8KLof8tW7NV9hw8Id1a15GcWd/yWs/UEwxYFT17HiTXb9yWE7//pRbASAO6NpaWhsX49Zt3BAuot95MpRbq7qRfDp+W1r3Hh8jTVR4//HRIug+boS4rWjCnFMyTVVkKBF6/pSxD9KJGL9j3HTopS1ZtkYqlCoYQNVw9y1+/Y+c7b4V2UrpYXpk9tlewx/pTePnj/D9Sq/VQ9XwIAD+sniYxYkS3leffK9elQqN+tn8f3b7AZxZXQ8fPV6LatJFdQ1i/+atdfPWcY6fPS5veE5Tgkj93FiWexosbRyBC79hzWNX7dQuFc5asl9mL1ilBFcKqt5MnY1hoxw4rdYA1SsHKHSR92pQyY1QPyZThDYFFEizqHCUIlhBHIKLt2ndUWabZE16+WLddxny8TCC05M2ZSVnTbNi2RyBg58uVWZbNHGKz2MN3sML7fVVfaF6/omTN+Kbs3n9MfReL5MsuC6cNdFmdPiPmqOs3fz5RWe2YE0RzPPvEjlffYG8mZ2OaN58TGfOCNVbLnuPUnKlf50aSLElCuf/wkSRKEM8uDt0PyhbPJwntXFOvWinJnzuz31CGRnjRc5IrgTfVO4bUvU1d6dSips/L7e68yOcF4gNIgARIgAS8SiBSCC9YtJeq21OBmzW2p5Qpli8YRFi3YKemd4cGYU54wY6T2aXFUQ9w51qv9qJQZIYJRuxYMYLtRGHncufeIzax4+NR3aV8iQKWc3dU/9Asnu7cfSDl3++rFqwj+rWSBtVLhyjHzr1Hpd9Hn8iOr6Zb2hW2XBE3L3Sn3d0VXqzmbfU6XTUtvMDSCYzNO6Gw0FiwYpONhC+FFzdxB7vc3Xr781lwn2rc+SM5fua8WjR0bVVHWWbpdOfeAxk7Y7mkDkjmsYWWJxx8LbxYYe7NscPK83DN+YuXpXqLwdK5RS3p1qaOpdsgUIGXTo6EF4gzsWLFVCKKTtj5f7d6F/XP77+cYrNy+n73r9Jz+EzlWgtrGCSMxW37TpQDR07LxqXjJEO61E7LF16EF6v91Op1lhrNw4t8XRZn+X/17S75YNJCmT+5v9p8cJVc9QN791utX2iuc1d4Mc9JIFw36vTKomz/t5+EcEe1WiZX3PTvvpgXWX02ryMBEiABEvA9gUghvIyd8bl8vnabtG1cVfp0bGiXKhaksLyIGyeWzeJl5dwPZPair5WbCVLlMoVlQJdGwWIjTJqzUrAr9O/V62rHEGbWFUoVlNbvV1G7QzpNmL1CWXN0bV3bZZ64B24ry7/aphZNsAjAsxGDo2jBXMEsQbB4mrVwrcBc/8Klq5Ll7bTK2qJp3QrBXDPgo71i/XY588dFVaS33kwtMCVvVKus011+lGPTD/tlSI+m8maaVzuZ7tbFHnB7Ewx93d6DJ6Rdv1fm9nD3wuIc7dNj+Ex5J0fGYDtP8D9ftnqrfPfjL4oV+Jd8N4/0aFtPtRMWIGM+Xm777e30aVS+2HXDTr+jhHZdvOo7aVKnnAzt2dzhddihxs4eFrSnzl6QGQvWSsOapZW4B5eeM+f+luG9mkuaVMmD5QH3rW27fpUurWrb3Kqwm/3x/DVy+NhZ1ZewM925ZS0lBuoEn3XsdndvU0c2bNsrsMrBTjImxUN7NHO6QILA0euDWaqvgKl2u4oTO5ZMHdFF9XO4GqGtsWhfv+VnVaeM6dNI307vK1ctY7La9+zB08JL60ZVZP13P0mSRAlk/eIxSmTE7nyZ+r2lQskCyqoIZTAKL1beucVffqfM49EXYCquExaUcMFAjKd+nd9XdUN+/1y5LtM/6qYugwVA7w9nqz7ydro0qh/AdSNPjozSrnE1KftePvn6u58Ei5LDx88qi4UuLWsLXM90gsUBeI4d3E7VTSf8Db8Z212/TxBHZi1aK3sPnlTvPGJ9dGxeQz1j3vKNapzBwgB/7962rksLIFhlob1hRYKxzJGAi3bUO9iXA2/KtE9Xyd5fT6g+WChvNvWeGPugkU+Wt9+UJatesU6ZIok0qVNe2jSqGkzgcTb2bNy2Vz77fKPqw+CL2ElIGJfQ3zSbicM7qjERDO49eCjDe7VQlnhrNu6Uf65cU2Mr3n2MD22bVAsmOJjHMKvlD+3YgfK74ohxYcSUxWp8Qrn1uNSzXT2Be4OjhDZBjB4kuOo5El4c3d950DS1i7981lA1viANHPOpoB1WzBmu2sA41gybsED6dmqo2tRZcrXgdmTxsmPPEVm6eotggYv0bv7syrIC75QxYcz6Yt33ihcs43JmeUtqVCwu7xXO5XRMQx6wLJqz+GvZ/tOv6hsJZrUqFVffSKMQiWutfHf1GIxxHfn9uOewGj9aNqis3s9Pln4jf174V/VpjLNwm23eoGKwDZ8TZ/6SWYvWSf1qpeTCP1fUczHWlXz3HenXqaGkSZVC5n+xUbbtPKhiq6Bd4N5jjL2FDSWI0z//ckxdA2ZoU7w7sOh1lWAFvGbDTtu3Ee9bz3b1bZsI6BNwgzO/mzNGdQ9mnWh8jqt+oK91p01clVPnefL3v2TGgq+UtRa4w7oP/20WUxxxcTQn6TNitmzZccD2zriac5i/IQ1rlpG13+6SY6f/VHOSkf1aO2wad+dFyAjfaVfjILjAuntoz2YhXAFx7/afDqm5qS8sDl31Q/5OAiRAApGJQKQQXjBBxcRk59qPlauIq4QYL1jE64SPEaxisHDFomfUgDa230rU7i6PnzyTd3JmlITx48mJM+fVRAX3fD5nmG1x5E6esxauk0+WrleTh8L5sgmCQ0KMQKpd+T0ZM6id+m/EbmjQ4cNgiw4dEwMTZUyYkTCBwuQa+RUtmEMFm/v1t7OqPltXTpY3TKKAkY8uC8zZ9aTPnbq4O8nR12PCjwnu0hlDpECeLGryDLN8iEUwy0fCblOXwdPVQgJ1w2+YhGJxAv4rPvlALZjhSoI2wWI25X8xJIoVzOlQhEPeddoMUxNhWLMgALOVpAUj7Bpj93jVNz/KyKlLBIupDs1q2LKAqFH+/T5y7/4j2bVuhgoWrE26cRFcQuLFjaUmjUhwCYJrENK0eatl/hff2vKC0IaFs154frt8vMMFOQSN5t3H2FykdHsiqOzi6YNswovOHAvp+HHjqHcHyehGYLXvOeKmhRfs9iNwM+o1d0IfKVEkjxIm4CaBPgf3MrPwYuWdQ2yeas0HqT5uXGRikQ9BzCioNes2Rokb2g0CnIpU62wrOvoWFjUoh24f9Cvz339aP9MmsqDd0f7bV08NFrdk1YYdMnLKYpkzrrdNyLL3PunxB64eOiYV+rT++8wxPQXm/M4SRAssaiEoweXEVbr4T6DUa/eBYgahBYIirLrw77GD26vFKpI9Pm+nS20rm9F6ydXYs333r0p40aK1Dvjbvmk1qVS6sBLBUWdj3dWYtnScug+LDiw2A5InkcuBN9TCHO3yzeIxNosO8xhmtfx4J0MzdljhiDr1HTEnxLj0YZ+WlhbNYJCzdCu3hBeMO6Xq9lCsv/tiok1I1/3/0NbPggXURX+v3/5Dl+IzyuJqwW1PeFm0crNMnvul6lOVShcScNPv2I9rptvi0BivgzBx++59WywaWCE4G9OwmdKs62jVhzBWZs2UTgnb+B4Yv6Uog9Xvrh6DIYYYY+JgXgBxE98uPCt92lTq3YFohGR857XIrd9JiG+IYQUhB98pvAf4bx0vB+VFnusWjla34Hv4fscRamzGOI737+z5S2psN89R7L33iHW3ZPUW9azihXPL+QuXFSOMc1/NH6W+SRirZi74KsS7CYHO6BZqzN9VP8C17rSJlXIiT23Viv/WAi7eX/BHHa3GeLEn0gwZ95kaZzAXgRjvas4BMU+PMfiGYtNIx4dzVRZnwgvqZp4X4W+6fM7GQW25ZLaug4hUpl4vNYfF94sBtV19Jfk7CZAACXhGIMILL/iwvFOurZqMWw2Wqyf72IFu16S6moRgoVm5yQD1ITcG+sREMfPbaW2LXUxuew6fIT/8fFjWLxqj/PaRrOYJgadGi8FqArR4+mDb5BOT0ipNBwSbLGLnfuX6H9SiqGbFYmrSh/JhsoxJmxaaGncZpSaIRpNxTNy+/OYHtZgy7sibu5Mz4cUKH0fd09UE48v1P8hH05ZK/86NpNX7le0KL4gpgIkegv0N6tpYnSSE9h45ZYkKCKwXp+66Guk+42qSZK6bWXiBIFKsRlc1eYZooXdXsWhv3n2s2nGFdQmeV7fNcDWJxoIx41uv+ox2RTBOuPWkHyLT4O7NJHVAUnV/h36T1QL9iznD1a6/o2TF1QhWIKMGtrXlg93i2Yu/DrbzbbXvOSqHUXhBXIliNbsq64r5U/pLxUb9lAUAzNvRl83Ci9V3DgueDv0nK0uMrxeNUTybdBmlFvGIcaFPnnIkvGDM+Kh/a2VthndLiyb4++iBbVUsH/xdC0XTRnZTf0MKjfDStXUdZZWHya8xBg7cUCCk4u+wlKjbdngwtxBHjDsNnKLEuw1Lx6mFmaukA2NOHN5JxXRAwk5+7dbD1H//uGaaMrXXiwpwwC58tfJFVd9GjCME4sROM4JxI1kZe5y5GulxE30SAatzZXsVmytViiRy6cp1SZk8STA3PwhNEJwgYGCnGcmR8GKl/O6OHXieVY5Y6KJ+aPcuLWu5ap4Qv7srvOjxyWwl48gaBRaW+OZBFJk6oqvT8ukFN5hi8WpOeuGpxU0dLB1lwXuu49pAbMfiEvG9EOcLwY2rNB2oxlCIwzoINGJAzVi4VrkoOhvTsJv/4eRFqi/ASgr9FN++zoOmKjcqPV66893VYzDq2r/z+/JugRwSK2ZM9X5ikwRjgjF4MaxbGnYcoYREWBYiaeEF/XrckA62+GlwXd38w34lsuC7Dj7YYOg7EjF0Dtg2AnRbwspuwtCONtx4FqxtnAWwPffXP1Kz1VCV96JpA20WvNq902jhBHEG4seiaYPUJpCrpPsB6gVLSmN6v1YZJQpZbROr5TR+P3WcPjwXf6/W7JX4HlrhxSjg/7x+luw/fNLSnMMo7uJb3aJ+JfVNg7uf2ZrLyMjdeRHuRd91NQ7itLLCVTu9iqe2ZrrEiP7qhEpYa3Ub8rGyrISVMBMJkAAJkIBvCUR44QUfzjL1e7m1M+joVCNtcmq2goDYcv4iTIvhbnRXfcxgXm+0VLCaJwJBjp/1hRgXP+gCOk6N3qXDM3OXba0mpLByiCL/i90wZ8nXgtMy9GQJi3ws9o07bla7lSPhxd6pT4742HuWqwmGnljq+tqzeNFm8zhJA3EqdMICEAtuvaBxd/EE6xGcdGM+QQmWQpjsm1OPNnXVIt4svOA67JjDLUVb7uBvWAhg8vnV/I+UW4H2I8fiYJjJrQmBDWGNcXjrZ+oZetL/9aLRkjlDWltRVny9XUZPX6YWSFgoOUpWhBfzqUZ6sa+tRNzpe47KYRReICxod0C4HmGHW0+g7QkvyNPKO4frYGL96bINymIIgg2sjIzWELjGkfBiXCjhOogQEIWwqMGCTye9ODRa0bgrvNh7n9AH0V7mRQMsfrAjvmn5BKevsV5Q79s4x+XR0VpsxILpmyVjg+WrhTc9fuhFhZkPFoiFq3ZWp5PpslkZe6wIL7r/26swTuT56+8raozErj/cL9CP+nV6X13uSHixUn53xw53OPpTeMF3sF674WrnHQIGRE6dMBYjmTcm9LfTSoBdveCGYIDgzeaEMQxJCy9w34OLH75zlUsXtl2OwK0Qq2H1B3F04cpNMmXuKhk3BJsLryyuzMnZmIbvAARYs7WrFgm1+7HV7y6ercdgs2uWsVwQ3SEcXLtxWzHH2GwU0B0FMtcn48F6xnisuBak9PgOkR1Bs2GZNumDzg6D3drjBYtJ1MFsCaffa6MwF1rhBQt8c8JGDTYbrLaJ1XLq75O9scvdGC8o8+iBbeThoyfyz+XryioIwo0WJqzOOTRLowjtdLD+70d350XGPF2Ng4jn9fna75XFMMQgJC3Ou7J8tlJ2XkMCJEACJOCaQIQXXvSkzB3rBUciiV5MbVs52RazA4EJ4TpgPmoY6I3uAFbz1M8wWj4gL7PwghgC5Rv2cdrC2AnDjpg2M8XF2G0pkCerlCmeT8oUy+sycK87wos9Po4K6GqCoSea2OVGjAl7woteWDp6Rv3qpZQ/tbuLJ5hC5y3fNoSJsjE4pfGZemFrT3jR1i3a/BsTukJVOgYTdTZt3y/9R33itC11n3MkvOg8dJs7yiw0wovua5qnO33PUTnMwosWL3A9JtA63os94cXqO4e8sBBu1XO8Eq+QjDuiumxWhRfE8yleq5uyBsGCUSf9bhoFGW8IL3B3g5hrXhBbXUxgYYYFmpXgqI5EJdRRx4pBrCOIS46EF1yLd/LZ8+fqlCokK2OPK+HFniiFvLGwHThmns09xdjXtMUE/mZVeLFXfnfHDnc4+kt4Qb9t0WOssqgb1K2JOrnImPRx6uYTh7RVitG909H77MrFxGxVo98PR/nBSg19SB8FDjEQ44K95GxMcyRe6ndW183qdxfPdzQG4zcILrC41CclGstrRXiBpWz3oR+HCOiu30FY2iGGG75RZev3ss07sMB/J2cmqVe1VIijws3MNFN74wLGFljL6r4QWuHF0elWKIvVNrFaTs3GXgw/q2MlymU+yllzg+sw4ubAFczqnMPZGOnsQ+/uvMidcVALVBDr8B3U7zdcVjFXZSIBEiABEvA9gQgvvAChnkzs2TDb0s6QI5FEu1foRbBeaMPkGLv2ebK/LW+kSqGC+GGHy4rwYs5T++uunPuhLegq6mAWXjCJRuwaWGU0qBHyxB3cA9PgdG+8ClKIsiImgo4Xgb/h3uWzh9nMTu11N3eEF3NdPJlg6PgUenfWnvCiJ0qOgtXh6GkEkHV38YRy67hAiMFiDJKMXWCdYOGDBb0z4QVWADDXxyQHC+gf9xxRrggf9W8j9aqVVFnpo86xcMeR1fZS1XJFlLuco0m/drvyhfCid7618OJu37NXH7PwgmsQCBaTaGM8EbPw4s47p5+r+xL+bXT/079bFV6065hZeEGw0/dqdQ9mCaMXct+vmqrcwXRyFOPFnrjgSHhB38QzXZnPI04O3KCMlneO3kndpvbiQ2hzdFiQwJLEHeHFytgTGuFFi2DIHyILYn+kTZNC7t57IA06jLC5quB3fwov7nD0h/CC70b7fpNU7A8tYpv7gHYHM7rQ4hrcgz4IV05YwTlL7gov2h0Lx/Tai7uGsQ5jnna9gVWjjndiLocz4QXfiATx49iEQH2vfpe1RYLV7y7udya86LEEFnYYL99Km0qSJkko1ZsPUvXUMVocWbwg2HDXIdNDCC8Iot592Azl4gjhBenu/Ycyb/kG2bR9n4rxpZPR5dFem2n29qwcdGyz4z8uUpsyvhBerLaJ1XKu3bRbnbxkZKPr7a7wgvtmjumhXMdTBSRV/8N/62R1zuEr4cU8L3JnHEQddP9EjKf13/2sYglaPbHK6QDAH0mABEiABCwRiBTCiz61AeIIgovZS1ggB714oT6yVoUX/RFEPANM4HTS1hqhEV70caF6d1nnaRZeEOegQKUOKrAkgodaTdgpQ7wXTB7VaSmT+gU7scScz+sQXvTODMqiTzWyJ7zoScSBzQgcHNyf3FgPLbxYOZ1D36d321o0qCQDuza2ixcnL0EIcCa84EZtVg/3lPVbf1b3GI+m1GbviPMA9yhnyVvCiz0TaEeLAbPwEtq+Z6yXPeEFbiI46ald46q2+Ctm4cWddw7P0wsZ7DZjIQmLLwTtxcJOJ18IL4hPhDhF5l1lfwov2toEbiUQMB0lWAU9exakglfbu/Z/bmxdVJwKd4UX/VxHY48WXuzFJ3I0FuuFKKzhICjopC2nvG3xYnXs0OOUFY6+Fl5gfQOrJ4i+iCUFNw97SYsmaxeMCnYalA6MjNgPcLVwltwVXrT72oIpA1SMFEdJfw+dLQ618GJvTNOikjlwsNl90up3F+V0NAZrAdbsoop74B7obeHFyAzzg43f71XuWwguCzcoRwknFcEVecnHg20n2+FanPiG48aNroK+EF6stonVcurvljmIPerkrvDi6gQkq3MOXwgv9uZF7oyD4KHfacQM+/q73eo7aIw/Z3UeyetIgARIgARCRyBSCC86SCkQ2RMaEKgPR3u2bFhZiRBWhRe9G7dg6gB5N/+rySMWMQhGB1/a0Agv+349KW37TlSTJ0w248WNrQKyYaKEBbzxJAY9gdGnwRi7AEQVWLvAWgNuKDjiWgdUw3UoH3x+nU3IcZ0/hReIXweOnJG+I2crE+rJH3SWKmWLqGrovLf8AAAgAElEQVTZE150/A57JsZoU+xqwl/99B8X1Wktro6GNvIzutPA3x67jObjeK0KL1o0w44tFkENqpdWO5o66Qk7JkFYqMPMXifEMtmx57CUfe+VT7anwgvyQFBOCBDmGCFWhRfkYbXvORqW7Akv9q41Cy/uvHNgXafNcBXsc+PS8SpeBOIGmGO0+EJ4wU4i3h1zHx45dbE6OtZ8qpEvLF4Qk6hGyyGqz2FR0rZxtWBHzMPtDUfRx4kTS2B5oFkb3TownjX4/5NtIFrpk3DcEV6sjD06ODECj0LYMSZHY7EWsLq2qq2O5tYJgUnRR7wlvIRm7LDK0ZfCC+IZIZYGxlHjKVP23jHtptiuSTXp3aGBugRjMQLQIjgzrDQgXDpL7govOvA1Ng4WTR8U7NuEmBpHT5yTogVz2oRTiCqzx/YO1n/hlqNP9nI0piE+DN57WEXCAkUnHe9Cs3Hnu+toDNbBYM2bIXDdgQBgxdXIqsULguhiXNOB2FEvCJuIjwN+ZrcxY9vhpLIug6cpN2RjYN6tOw9K7w9nBTsVyRfCi9U2sVpO7d4HVzSI6jpoug4M7kpM0WxcufngOqtzDm8KL87mRe6Mg3oeVbJOD9VHkPQJjE5fbv5IAiRAAiTgNQKRQngBLR2kD/8Nv+58OTPL02fPVXwAuDcgaVHGqvCiT97BgrpGBZwqJIL4E1ikIIVGeMF9ekGP/8YCGRM3nYzCiz4tAb/BBzlXtgwqmB+OUcTEVh8BjQkFYtzUrvKeOt0EExIEMMURgps/n+D0iG1fCi/4+EMMwW77jVt3FDcsEpHMsQjsCS+Y3OCkJywu4GqAuDXY/Tx2+k+1uNWTCjynVN1earIBq6eE8eNKtGjRFDNnCUdIwgQdCZNpiGs4VQNCCYQtTJKRXFm84BodeBj/bS8o4+drt6kAsxBf4M6BI74hGO7ce0Rx0RNpbwgvun/BrSRHlvTy75Ub6sQid4QXq33PEd/QCi9W3zmcLtK062j1fuvAxugbEFmw4DUuxHwhvODElFa9xqv2bNO4ijx69ETtSGuXAH8IL2BvPGYVO/GliuVVYu7v5/5Wx7Dj3dFWI3oxjLECllfx4sRWR7rDPRHvyvD/3E3cEV6sjD2Hjp1VRwJDcGz9fhV1MkzOLG+phbejsVjv/oJv7crFJVVAMjlw5JTtCHZvCS+hGTuscgyN8HL05DnBu4cEVzK0VeeWr4Sn9wrnlnRvBKj/1u84vk34uzm9kTq5OikLCWNrxUZ9VV8AN5zSB6u8b7fvs2xR6a7wgucilgnEEyyYIYogKO/pPy7Idz/+IvlyZ1ZBQLHoxElZ6IMI8lulXBFlmfHt9/tUwHg9Ljoa03AaIRaaSBDpMr6VRvYdOqWOesdz1y4cZXMlsfrddTQGY3xB/BJwhDtijqxvydk/L6ng6kjeFF70ghsicoE8WSR2zJiyc99RdSKSK8tJMG3SdbSyfMX9pd59R313p3+2RpXT6ILkC+HFapu4U079fcV3ulTRd9TR5DjZEMlqfD8rwovVOYcnwos78yJ3xkE9BmjhC/+26n7vdKLEH0mABEiABCwTiDTCC4hgsTxxzko14TAmTIjqVy+trBrgsuJosq9jJui4DdgN/nDSItvECnnCUgUn1WBiN2tsTylTLJ96lNU8cS12qhes3CT7D52S58+D1OIYO8EIkGg8rQPXYvI+fuYXtuChul6Y+A3s1kRZvOBDi2On9S4HroGgg+M1sbhxlrQJttEM3Z26OMrbHMgOk6OUKZJKvlyZ1I4bLFWMSQsvFUoWVKcx6AQ3mCmffqlMaI0Jk3S4IKA9kLB7hhg3OsiqOU6Ho3JC9EL+OKXKmLDgq1CygBLcYCoPaxi9a2p2E8N92DnGCQL2Tl7A75hkYsEx6ZOVwfz18Rwcw6lPaMHkGPUwxyrRMV4mDe+sYiM4S9iZxfHQOJ4USR+1rheMxqN48bt2NcKpS/hNJyt9z1E59O6wq0WCth7Q8SesvnPaJcl8VK8xiK+27DALL/roTfOpN4ipULR6lxA7xdrP3iiKot56gaYZ4F3DSVQ48thopebofdLHwpuD6yIOA6yoXMV40c/FaRfoV7q99d/xzuFda1ynnKRK8SoODUToIePmBxsrMObok7twjSM++A07+1gYIyYHktWxB0IwxigtvMIiDJZhjtggb1yPuFI6QbjBOI4xq1XDytK/SyP1k3kMc6f8oR07rHDU4iWsjXDii5WkXXTsXTtzdA+bZZxRRLB3rdkdBUdH9xg2w7ZpgHsgZk8Y1lEJ1a6Sq1gs9o6shsvioi83y8IVm0N8m8BDn2IEy0VYZsEySieMWXWqvKfEdSRHYxp+g3A9cPTcYHWDBc3oge2CbTpY/e46GoPxLIiIPYfPCBZsH4LPoi+/k7Spk9tivDgaa7WVhzEGGPLVQXd1HBNHYy/emcE9mqqjrZ2lO3cfCKzvjGMCRLrJH3YJFltOH89udktylLerfqDvs9omVsuJ62CtY4xhB0tYiN32ToazV35HsWfM11qZczgbY5y1i7vzInfGQf1c3ffM33NX7zh/JwESIAES8JxApBJeNC4s3uCK8vTpc0mRPLGlgLvOUONDDEuTZEkT2hYwnjdN8Bz0wn1Yr+bSuHa5ENljEvvv1RsSJ1ZMVSdjQDhcjIU9dprwPyy4kiVJJFGj/u8Iam+X19/5oU2xwIRrDhZgsWPFtFsEtBVYpEiW2K36455rN+4oy5yA5EmCBdz1dl2x0Ai8fkuSJEI7JXR58lRonw8hAcFIUyZPIjFiRA9tNuKq74U6Yyc3+uOd80a5YR11JfCmpEmZXBIljOeNLEOdB/owuN2+e1/1rYDkie3mhXcIAgjaFQKtq0WcqwJZHXtwHZ4bP14cVT4rCX340r+BEid2LEmfNpVb77SV/I3XuDt2eJuju+UNzfW6v8JNFZZR/khodwiJWDxj7MZR6fYSxnhYjOGrFZAiSYhvHO5xNqbhGfhOv5E6hSUxCfm5+u7aKycstrSV6ptpAiRObPvfIm+wxYbElcAbKitYfbn7LFhmQHTDfMDReOCNcjrKw2qbWC0n3lH0YQTW93TcclVvq3MOV/l443d3xsGh4+erzUJtEe2N5zMPEiABEiABawQipfBiDc3ruwo7ewnixZFMGd5Qk9Bzf/2r4rFgUbJ99VSfiTuvr8Z8MgmQAAmQAAm8PgL87r4+9nyyfwhAuIQ7nLuHMvindHwKCZAACUR8AhRewmAbdx40TcVfMCdXRwWHwaqwSCRAAiRAAiQQ5gnwuxvmm4gF9JCADg5sxSXZw0fxdhIgARIgATsEKLyEwW4BNygEiIUZLuIlpE0TIHmyv+00CG4YrAaLRAIkQAIkQALhggC/u+GimVhIDwggVt2de/elevmittOfPMiOt5IACZAACbhJgMKLm8B4OQmQAAmQAAmQAAmQAAmQAAmQAAmQAAlYJUDhxSopXkcCJEACJEACJEACJEACJEACJEACJEACbhKg8OImMF5OAiRAAiRAAiRAAiRAAiRAAiRAAiRAAlYJUHixSorXkQAJkAAJkAAJkAAJkAAJkAAJkAAJkICbBCi8uAmMl5MACZAACZAACZAACZAACZAACZAACZCAVQIUXqyS4nUkQAIkQAIkQAIkQAIkQAIkQAIkQAIk4CYBCi9uAuPlJEACJEACJEACJEACJEACJEACJEACJGCVAIUXq6R4HQmQAAmQAAmQAAmQAAmQAAmQAAmQAAm4SYDCi5vAeDkJkAAJkAAJkAAJkAAJkAAJkAAJkAAJWCVA4cUqKV5HAiRAAiRAAiRAAiRAAiRAAiRAAiRAAm4SoPDiJjBeTgIkQAIkQAIkQAIkQAIkQAIkQAIkQAJWCVB4sUqK15EACZAACZAACZAACZAACZAACZAACZCAmwQovLgJjJeTAAmQAAmQAAmQAAmQAAmQAAmQAAmQgFUCFF6skuJ1JEACJEACJEACJEACJEACJEACJEACJOAmAQovbgLj5SRAAiRAAiRAAiRAAiRAAiRAAiRAAiRglQCFF6ukeB0JkAAJkAAJkAAJkAAJkAAJkAAJkAAJuEmAwoubwHg5CZAACZAACZAACZAACZAACZAACZAACVglQOHFKileRwIkQAIkQAIkQAIkQAIkQAIkQAIkQAJuEqDw4iYwXk4CJEACJEACJEACJEACJEACJEACJEACVglQeLFKiteRAAmQAAmQAAmQAAmQAAmQAAmQAAmQgJsEKLy4CYyXkwAJkAAJkAAJkAAJkAAJkAAJkAAJkIBVAhRerJLidSRAAiRAAiRAAiRAAiRAAiRAAiRAAiTgJgEKL24C4+UkQAIkQAIkQAIkQAIkQAIkQAIkQAIkYJUAhRerpHgdCZAACZAACZAACZAACZAACZAACZAACbhJgMKLm8B4OQmQAAmQAAmQAAmQAAmQAAmQAAmQAAlYJUDhxSopXkcCJEACJEACJEACJEACJEACJEACJEACbhKg8OImMF5OAiRAAiRAAiRAAiRAAiRAAiRAAiRAAlYJUHixSorXkQAJkAAJkAAJkAAJkAAJkAAJkAAJkICbBCi8uAmMl5MACZAACZAACZAACZAACZAACZAACZCAVQIUXqyS4nUkQAIkQAIkQAIkQAIkQAIkQAIkQAIk4CYBCi9uAuPlJEACJEACJEACJEACJEACJEACJEACJGCVAIUXq6R4HQmQAAmQAAmQAAmQAAmQAAmQAAmQAAm4SYDCi5vAeHn4IPDnxcty/cYdKZwvW/goMEvpNoGDR89IkkTxJeNbb7h9b1i/4eGjJxIzZnSJHi3aay3qlh2/SOF82SVJogQhyhEU9EKePH0mcePEeq1l9PXDI0s9nz0PkqCgIIkdK6avkcqduw9kz8HjUqVsEa896+Tvf8mZc39LobzZJG3qFF7J9/rNO3Lo2FmpWKqgV/Kzl8njJ08lWtSoEiNGdJfPcPY+urz5NVywZccBKfhOVkmWJKHfn+6LPmalEs+DguyO248eP5Vbt+9KqoBkEjVqlBBZvXjxUgJv3JLkSRO99nHfSj15DQmQAAmQgPsEKLy4z4x3vGYC9+4/lHerd3FYiqE9m8vTp8/kpwPHZP7k/q+5tOHz8QPHfCrtmlSTzBnShtkKdB40TfLnziztm1YPs2UMTcEwQS9YuYPMHNNTyhbPF5osQnXPghWbJG3q5FKpdGHb/TlLt5Lls4ZKvlyZQ+S59+AJaddvkvy8fpYkThQ/VM/09U2XLl+TqZ+ukonDO4V6MeNOPXfuPSrHTv0p3drU8XXVvJ7/rIXrZPtPv8q6haO9nrd5PAGjRp0/kuM/LpIoUUIuQt0twKCx8+TnX45JgTxZpWal4l57b345fFpa9x4vJ3YsdrdIlq9v1m2M5Mn+tgzo2tjlPc7ex7DY91DepTOGSIE8WVzWzdMLfN3HrJTv4j+BUqXpANm2crKkSZXcdkv3oR/LDz8fVv9OmjiB1K5cQvp2amj7HW3X76NP5OGjx+pvH/ZtJQ1rlLb7yA1b98i0z1bLD6unBfu9UuP+0qlFTalTpYSVotq9Jjx890NdOd5IAiRAAmGAAIWXMNAILIJ7BLAzdOHSFdtN1VsMFogtRQvkeDWxSZJQ1m3aTeHFPazBrsaEedG0QWHaYiiiCi/o36f/uCBp0wRIwvhxPWhF927tMXyGZMuUXrq0rGW70dlC7/6DR3Lh0lXJmunNUIsa7pXQ/atPnb0g9dt/KEe2zbdkUWDvCe7U8/O138t3P/4iy2YOcb+wr/mOwOu35d79Bz6xIDOPJ94UXrBYLVSlkxKMsrztXaHYH8LL+YuXJU6cWJIqRVKXPcDZ+xgW+54/hRdf9jGXDSMijbuMkt9OnlOXmoUXiJoVSxeSdG8EyL5fT0rXIdNl5ScfSO7sbwuE9pJ1eiixtmnd8rJjzxHpOXymbFkxya7lFoSXiXNWyO6vZwYrVtkGvaV7m7oeCS/h4btvpS14DQmQAAmEVQIUXsJqy7Bclglg0j1+SAcpVyK/7Z7FX34nG7/fK+/kyCjfbN0j2TKlUxObIvmyq2v+vXJdxs38XPYdOiXv5MwoDaqXlkqlC6nfMIHq0Ky67N5/TLBwGz2wraRJmVw+nr9Gvv1+r3K7eL9WGalbtZTEiR3cLB9uCS17jpM+HRsqawxMqgeNmSfzJveTRAniCUzFd+37TcYMaicvX76UVd/8KEtWbxFY8dStWlIa1ymnJuCYXB058Ycq28Zte5XlSf8ujQTuNZPmrBS4UlUoWUAa1ykvubNlsMsK9ShTLK9s3XlQLZAb1SorXVrVtpX5xz2HZdqnq+XchX8lf+4sMrx3C7VwgYXAK+uHFJI4YXypU7WEutecsDu258BxuXn7nmRMn0a6tq4TjKG9Zz999kw69Jssw3o1V5NOJCz4sCM46YPOamJqTpev3pBJn3wpB46cUovn8iUKyJAezQTCS8IEceXuvYeKC57XvW1deTNNgNy+c186D54mf5z/R2WXM+tbMrh7U8ma8U1bGztiA+Fj8arNsmjlZlW3ogVzypMnz2yLaWd9B5PqafNWq/ZJkSyRmgQ7ssjZvf831ZaaP6y0xg/tIBnSpRbsgg/t2Uz1uw79J8vwPi0kV9ZX7Xztxm3pNgS8Oqm6OutDO/cdVf3O3jtg5Ix+OWzCQokdK4Z6Zua306p+j4k4LJ9+PnA8RB9CuYeM/Uy+mDNcokWLKl+s2y7Lv9oq127ckfRpU0q31nWkdLG8IdoT/f6rb3fJ52u3yaXL19W72adjA2VV46hP6vfSUZv9/W+gjJ/1hWChjDoULZBTlb9J19HqHc6eOb1y5xjSs5lcvHQ1xLtVpng++WjqErkceFOVF88Z2qu5Ymeup6P3KvD6LWnWbbTqM7qtlswYbMl1B3mWfDePbN1xQDGpU+U9qVGhmEz5dJWcOPOX1KhYTHq0qassi5yNG570+2+375Nff/tdPujdQr03sCKpXqGorFi3XTFp27iqNKxZRv23q3fE2Oj2xpOcWd5SFi8Y0+zl76yO5g7VvPtYOXTsd1sbr/jkAzn/92UZM32Z7D98So1N3drUtbkL3bn3QCbOXqHGxQTx40j96qXVeA+3Pjx36ZqtsmTVd3L12i01Hv7+5yW7Fi9nz1+SYeMXyKLpAyVunNiyaft++X73rzJ1xCtrTNQbbiVN6pRz+r1BWTJleEON/664OnofrfQ9d75Ny9ZslUVfblYMYKHRuHY56dyylrJOcvSuxYwZI8S7bhReIDA4+oY6GjetPis0fQzfDEfvPL6/VsdOXWl8x64E3lDzB7PwYgYDkQTf1A7NagisXboMniaHt34mmmHVZgOVCNO0boUQTK0IL67eH7wv0+atkdN/XFRWjs3rV5S//r5i97vvbEzG/GbMjOUCq0CM+QHJk8j7NcsoF0J7c5hUAUkd9ivNPEH8uGrOkzogqYzo10rlvXL9D8oFq1vrurZ5njvfWrsTJP6RBEiABF4DAQovrwE6H+ldAo6El0mfrJTWjarIe4Vzy+Yf9qsFzJrPRgpiGdRqNUTy5sykJhznL16R/qM+ka0rJ8sbqZKrxSYSJj1pUiVTrhefLv1GLeB6d2ygJp8jpyyWzi1qqQWRObXpPUEK5cumfoeAgUkhhCFcO2zCAmXFALNyLHRGTF4sI/u1lgzpUsknS9dLogTxZdSANgLhCOXPkyOjEhpSBySTXNkyKDNmmCiXKJJHtvx4QNZu3iXbV021a66PemDR0alFLRWHo/+ouWpRgHuxsKrVeqgSBbDgW/7VNjlw5LRsWTFZ/rlyTWq3HqbKmCNzesFkCQt8c8LCOVOGtJIscULZsfeIEhz2fDNbEiWMpxg6ejYEE0zmIT4hfbpsg2zbdVC1jTk9e/ZclRMTOiz8sDD57PONyv0F+WDy3Kt9PVWOqXNXSZH82ZXohcXVus27JX+uzGoyu3DFJiWG6Gc4Kx/uQzshn2IFc6q+g3aEu4GzvoM4BgUqdZCOzWtItXLvyl9/X5V9h04oayxzQllqtBgs79cqK7UrFVeLbfRBlA8igXHBAuEF1i9YECMtXb1F1mzcKd8sGWupD9l7B8zlwQKr78g5SviCWBQ/XhxbORy1I96nhh1HyNHtC5R7DcQi9K+306eRw8f/kOfPg9Si05wwwcaivkfbespKbc/BE5IwQTwpnDebwz6J/uuszcAoWrRo0qt9fbl774Gs+XanfNC7pWzdeUC1JVwOo0ePJlkyvqms4czvVrq0AXL2z0uqzo8eP5EPJy1SohH6gLGeWJw7KgfcXKbNWyX7D51SIiYSBE2IUq4S8sQiH++qyEvpM2KOWsz369RQ0r2RUoZOmK+ELCzOnY0bnvR79Cvsti+cNlC1J4QRuLpBbPn732sy5uNlsmfDbCVGOXtHzHWFQGEeTyAQOcvfWR3N+UPwwLszZ1xviRc3thJ0MU5C3GnZsLL8cviUzF78te3dGjBqrlpwom1v3r4r42Z+ofoNFro6r66takvJou/Itp0HZf4X39oVXhCbBe/74umDVFwZ9EEIlPo7UqJ2dxnZv40ab519b2D9kCd7RjVuuOLqad+z+m2CKIX35c00KeTvfwKl+7AZim+pou+oetp718DenIzjGL519r6hFUoVdDhuWn1WaPrY8TPnHb7z+vtrZew01hnjKEQVZ8ILNkEgrGieqzbskMVfbpZNyyfYssJGxFtvpg7mjqR/1OMn5hfGhA2cIT2aqvHb2ftz8Z+rUqXpQDWW1K1aQgku2ORpVq9CiPcUGw6O5gkY12q2HKLmTHpzAeNU28bV1Ltkbw6DPuWoX+nr8Z0vXji3Eua37z6k5l/1qpWUX387I6s37JBd62ao2GJWv7Wuxl7+TgIkQAL+JEDhxZ+0+SyfEHAkvBhjvGBnBi5JEAZO/XFB2vaZKEs+Hqwm6kiYFNaq/J5aKGKyOHdCXylRJLf6TcfcwAI6X65M6m9rN+2Sq9dvyYxRPULUCcIAdlqx2Hu/40hJniyRWnzhWvhhw/ICizosVLFLhAkPEialWATs3Thblq/ZJlt2HpDPZw2zBeKbs/hrZcUz5cNXO6pY2GLx8tX8j5TVgL1JrzE+ByxUkidJpHaZZyz4Sr79fp8yZ0a6ceuuMneeNbanlCmWTzFw5WqEHdQz5y6qRQx2+2YuXCtffvqh2u03m8Qbn613+NAW8eLFljL1eqky1axYPEQddHwNTErBypjMrkawooDFhY5RgXb77dQ5+eviZTl2+rxa1OhYDc7Khx10CBBaGDK6G+w7dNJh36lZsZgUqdZZCQrN61dQC2dHac6S9bJi3fc2c3EITHkrtLMrvECU6vXBLDn43TxlrYTJLiyjsAvtqg85egcgjpmTFVcjYzsaBYkDh0+reC94b4oWzOHU9QhlTpsmhRIjjclKn3TUn5EndkRhCRWQPLEtW3uuRpjgm98t3ABLIgRShfUAFp6wppo9tpdd4cVROULr7mHujxg3qpV/V1o0qKTqAsuoG7fvKmbO2hzCUGj7vT3hxRiDBULCRwPaqPHB2Ttir89bcQMx5u+qjsZnaBFz/7efKMEQ4gcW7N+vmqp2zZHwzkAA6dq6tnJLmjS8s1Qt9yqwLyyl9h86qcYNCBMBKZLY+qYrVyP0eVhRQpwqVqOrFC+US0oVzSsVShaUMvV7WfreGIUXV1ydjVtW+p7VbxO4nPvrHzn5+wW5dvO2sv5r17S6tGxQSfU/e++ao3ZHjJccWd5ScavsfUPHDmrvcNx091nGb5Y9dzZjH3P2zmOMcGfs1HV3Jbw8ePhYWcXFjxdXCXaYF0DYg3uiceMB8V7ix42jLD7MSQsvtSu/F+ynr7/7SVn5QXhx9v7MXfKNfPnND0rAMMdXMr+nzsZkfN/wvmz+fKLNUhX9t3KZwjbhxd4466hfmZnr91h/sxEsuVjNrkqgwiaH1W+tw48wfyABEiCB10CAwstrgM5HepeAFeEFwgAmwttXT1XuMcMnLgwRMBTuBthtMU9utWiD3XDjiR9Y4E0d0TVEZY6ePCdNuoyS776YKHXbfiBfLxotFRv1U/+u3GSAbdcYk0BMXlIk+99CEZlN/6ibMrU1BweGlQB2gLS7jH4wTMAx4Tcncz2wY/086IV82KelsjhQiw7D4hc7ddi5woLelfCCCWSngVOV6FL2vXzKIgeT+hVzhisrHWfPxqkP4IGdMVgUDRj1qez+eoZdlwyIKVgYHdg8N0T9zMIL3GWmfrpaiUmw6EFQTJgtYzcaO2SYsDoSXoxs0C692jdQu2xIxsUXBDdnfQfuNsgLCa4z2EnHqR7mBCuMZ8+fy4ShHdVPzoQXuCAVr9VdTcIhPmFRri0P3OlDxnfAXjwJK8KLkZNReHn54qWMm/WFfLn+B1Uf7FLCfcje6TJ4Xwd1a2Ljq9lY6ZNGwcNYFrTRoLGfKtcIPLNd02rKfdCR8GJ+t2DVhMUOLFSyZ06n3EvgsgQhyZ7Fi6NyWFn82hv9zO8LFjSliuVVC10kiK4oE8YGZ20OS5LQ9ntXwgt26WHqD8HC2TviqH6uFsXm/B2NjVj0G5NZeME7Cus7YwyMDycvUu6ciIEBAd4o5GKsHTl1iRpjUK+e7epL/eqlQrz79uoFSzi4QNas+J58v/ugElzQB9o0rqraDItpV2OGUXhxxdXZuGql71n9NmHMhbsRLJ7Sv5lKNm3fJ83rVVQWpI7eNUftDuEFFo7g7ugb6mjcdPdZ7vQxZ++8WQRwNXbqujsTXiCI9hw+Q64E3lQBh3VA8tBYvLiK8eJsjIC1H5L+9hjbzfzddzYmY9Nq1LRlwb7NZuHFPM4661dm5nCHQn76m41veP6K7WXtglFqDmT1W2uvX/JvJEACJPC6CFB4eV3k+VyvEXBXeDnzx99qkQXLEnvH9ZontzDfx27m6nkj1M6dqwR3lLzl20qtSsUlduxYykdKHwUAACAASURBVEVE7/JDENA7Wwj6iWvg7mRO5kkIfp8yd5X89fdlddqNleRsko4ddBznqq1DIKQUrtpJuYpg0Yx7F0wdIO/mfxWw2JwgAGGhrgUA/I57rAgvuBa7fFiQYJEMphAo7CW4PmBhsnPtx2qX1ZicCS8TZq9Qi+4FUwaoXUW94LAivKBvQEjSp04YhRd9+oSjvoPywQUBx9ouWbVFLcp2fPVxCHcTTLYRm0X3BWfCC/KEu9rx0+dVLAi0lbbGcacPuVo8KOElYzoVB0gnZ33ILEjgHuxKwsoI5c2aKV0IqxZcU6fNMCmSP4cSX4zJSp90JHggH1hgQSTdtvugIJjlxqXjlOBWr90HcmjrZxLrvxgU9t4tWERULlvEFlh44cpNykXFXeEFiwEsUlFOd5KZMywpYKFhT3hx1uae9Ht3hBdn74i9epvHE3vWCEbhxVkdzfmbhRfEpEAMJO32iOsx/kJQg3CEXXNYMun4Q+grm37Yp8QYjDXZM6W3nUrlyuIFwVQR0wPxxaqUKaLcWnHiHtxKA5IlVu5MrsYMo/Diiquz99FK37PybdLWj3A50zHROg2cIkXy5VDCi6N3DbGpzEm7GmHccvUNdTRu2nuvHT3L+M1y1cecvfPeFl7u3n8oPYbNkEePnsinE/sGOwVOW4AaA4DDMrZFg4qhjvHi7P2ZPPdL2bX3qHJVtddeRobOxuRMb70hNVsNDTYHcCa8uOpXIYWXs9K8+xiHwovVb6074zCvJQESIAFfE6Dw4mvCzN/nBNwVXuLEjiXlG/ZVJrmID4J04MgZZYGAeCrmyS1+xw40Jq04lhYCAFxsEIhSL4zMlYQosGvfUeVuhOCs2D3Ebg8Clfbu0EBdPm/5BvV3+HpDfPjnynVZs3GHmqzbWxzqHSBYqVQpV0QtcuGGUjBPVrUgtzeJcrRQ1S48EFqKFcyl4obA/WXHV9OVBY6OBdCuSXV5+PCxittiTAhs17bvRLX7BOsJ+JTDAsGq8HL95h0pVfeVgOTo9Ab8duvOPanYqL8K8gmfdviHo6wQapwJL7MXrZMf9xyRT8b3Vi5ZiPHgzNXIaD2xfsvPMnr6MuncsqakSJpYBT+GiAPRBiKco76DmBK4F4GXEasHAQFfxb2ZFeJEHX3sKHzhYZGz+YdfVOBlezFewEFbXeG/l80cqgI3u9uHXAkv6I+ImQNhD+IOdqmtCi/oT1hclC2eX6JFjaLiqsSPH9cWl8bYd9A2YDN2cHv1bhw8ckbuP3wk8eLEVu5Kjvqks7JAlISVAlzEYIWFhQdYIk4CXBywiEQcDR100rwTi4U5Agr36dBAcAQ1XA+TJI7vtvCCd7TjgKmy+fMJSmxDcOrHT56pBQTGG7S3veSO8OJs3PCk37sjvDh7R+zVzzyeIM6E+Thpo/DirI7m/M3Cix4zGtcuq9xjDh45HSxGCdo6frzY8mGfVmp86f3hbKlYqpASWiFeILDuuCEdVHDsWYvWKetDR8dJayEDZdq3cY6ysNNHB8+d0EeJZ87GDHxvjMKLK67O3gF7fc/eUd2uvk14j4tW76LcVsAFYwIEIZx2BuHF0bsGaxZ73yB9nLSjb2jFkgUdjpszFqy1+17be5a7fczZOx8a4QV9AcF1YdUKEQ/HSceIHk0ePnoijTqNFFh6ThvZTbnDIUWNGlW5wuH3QlU6ysCujaWJl041cvb+6G83NoRqVCwulwNvKCtgbACZGZ78/S+HYzLmQXBPRuD6OlVKyokz51UsNLh76hgvxnHWVb9yR3hBnDxH31oIeK17T1DWywjyy0QCJEACYYkAhZew1BosS6gI2BVeVn2nJhPzJvVTeSJ+Q+l6veSH1dMkZYokcvj4WRk6fr46qQUJZu36ZCR7wgtMiEdMWazEFJ0QDBHxPOwlCCqYNOpFN0QVuNcYY8fAhWTaZ2uUkKATFuHw/V5sKr/+HVYiiAODI1SR4HqCCT4CcNqb9JqFl6AXL22LYQTzxW6vuf74NyxaRkxZpE5ogeCBE6GMCUFu+4yYrYQfJJik//DzYdsRmfYWCMZn4x7EYYAVgisLHizqEbQPbYAEdxAc14sFRIE8WZSYhbRlxwFlaQEhB6fTYAEEwQQJ8XpwSpUzixddPlhJzJj/lTphB0F9s7z9phJttLuTo76TJ8fb6kQr3aewOIBrAwJS2kva6gWn7ZQunle1xYal4+TtdKmV4IE6oq46YTfxxq078u2y8TbffHf6kPkdMJcJ4g7aFC4tcJNC33HWjpiUN+jwKrguxBME4NT9Eq5vI/q2UosPc4LJ/ejpSwUxCXTfmzCso+pDzvqks7LoxS7yw/vdpE55W78AV+SLBCH0zJ9/Bxsb8HfEExg05lPV3zEWwJQdi2gId8Z66uC6jt4rLK66DZmu+hoS4vIcPfGHEimxw4xAxfaSS+FlyXr54/wl5drorM096fcYs378+fCr4Lqnz6vFojHGC4QR9GcsZly9I+Y6mscTuFE5y99ZHe31W7ix/LJpri1ml7Yy0f2xU4uaquxI6Oc4rhenVSHB8gVjP9obgnD7fpPUO4CEfoy+4Uh4wTXoe0h6HNMxOLQQg9+cfW9wPwIC44QbV1ydvQP2+p751D2Uxcq3SQeFx/XosygXXFBbvV/ZJizZe9fMbWMcxxx9Q5Gvo3HT2XvtaR9z9s6bv7+uxk6UBfMQ3d/wbwjXcHfT7kfm8urf8Xd8O3U/wr9x6h+42EuOTjWClQz6OQReV+8P6gdrFp30+2Hvu+9sTEZMLMSBQVwsWHv99MsxadOoqhLL7M1hnPUr8/XI22jxgjrl+8/VCOwc9RkdC8YZQ7tg+UcSIAES8AMBCi9+gMxHhF0C2I2EmweCtdnbHTSXHLsp+LAnS5rQaQBRd2qMCfONm3fVyS72JsrmvLBrD7NdHK2ME0Y8SagPFhs4ucjsdgUTb+wIO2ODe7GzjyO23Ul690tbBFm5F3VGjB17p2c4uh9HPydOlECd6mQ1od5Ro0ax9QfErsER4BBCjMlR30HdgoKCXDJBu2vmepKpA+haLau+zt0+5Cx/cEZfxG6tO0n3SwgXVnhjIn0b71KShMFcsZz1SWflwX04WtwYXFdfD7EHR5k7e1/AEEeX4whgd+tuLhf6RswYMdT7jIUJ3MS0COwOU2fXOmvz0PR7d8pl9R0x5mllPDGXwZN+jedduXZTkiZOaHdchQVYrFgxQvQJ9GPE4UiSOIGlo8Dd4ebqexMars76njtlM18LqzeMZTpAsfF3Z++aq2c6+oY6GjfdeZa7fcyb77yrerv6XfdXuKjh2+6N5Oz9wfMw1idOGM92jDWeaY+hozHZ+A1DDKWyDfooN77C+bI5LL6zfuVuna1+a93Nl9eTAAmQgK8IUHjxFVnmSwIk4JAA3He+WPu9OhEBIkdYStidxtHKcB169OSpwOLGHYHIal2wQ4pTsmD1o3Y829RVO5ZMEYsA3J6cWT6Fx9r66x0Jj2w8KTO5ekKP9/qbAKxOIbhA7D5w5LSK6zVvYr8w9033Nxc+jwRIgAQcEaDwwr5BAiTgdwK79/+mdppxAlJYSzAXhxn6tRt3BL7k+XJnljfsuMx4Wm4849K/gRI9enR1HDh85ZkiHgHE80H/gWVYREn+ekciCi+r9SBXq6R4XVgggHhacMV8+uy5vJkmQAXjj0jjXFhgzDKQAAlELAIUXiJWe7I2JEACJEACJEACJEACJEACJEACJEACYYgAhRcPG+PfG488zCHs3Z4kQUx5/CRIHj0NCnuFY4lIwAGB1EnjyJWbj+QlCZFAOCEQM3pUSRgvhly/8ySclJjFJAGRhHFjyIuXL+X+o+fEQQLhhkBA4thy894TeR7EWYKvGy1NslendzGRAAkEJ0DhxcMeQeHFQ4C8nQS8RIDCi5dAMhu/EaDw4jfUfJAXCVB48SJMZuU3AhRe/IZaKLz4jzWfFL4IUHjxsL0ovHgIkLeTgJcIUHjxEkhm4zcCFF78hpoP8iIBCi9ehMms/EaAwovfUFN48R9qPimcEaDw4mGDUXjxECBvJwEvEaDw4iWQzMZvBCi8+A01H+RFAhRevAiTWfmNAIUXv6Gm8OI/1HxSOCNA4cXDBqPw4iFA3k4CXiJA4cVLIJmN3whQePEbaj7IiwQovHgRJrPyGwEKL35DTeHFf6j5pHBGgMLLfw12594DefLkmQQkT2y3Ce/dfyjPg4IkSaIEwX6n8BLOejyLG2EJUHiJsE0bYStG4SXCNm2ErhiFlwjdvBG2chRe/Ne0jPHiP9Z8UvgiEOmFl+s370iLHmPlwqWrquUypk8j7ZtWlxoVi6l/P3z0WAaO/lR++Pmw+neeHBll5ugekjxpIvVvCi/hq8OztBGXAIWXiNu2EbVmFF4iastG7HpReInY7RtRa0fhxX8tS+HFf6z5pPBFINILL4HXb8vX3+2WmpWKS7w4sWXZmq2y6MvvZNe6GRIndkyZ/8W3snrDDlk2c6j6d+dB0yRDutQyakAbCi/hq6+ztBGcAIWXCN7AEbB6FF4iYKNGgipReIkEjRwBq0jhxX+NSuHFf6z5pPBFINILL+bmunT5mlRq3F+WzRwi+XNnkfrtP5RKpQspKxikLTt+kT4j5sjxHxdJlChRpPYXqyRz0mSSPVkKyZEiQNIleGUJE55TkgQx5fGTIHn0NCg8V4Nlj2QEKLxEsgaPANWl8BIBGjESVoHCSyRs9AhQZQov/mtECi/+Y80nhS8CFF5M7bVu824ZNmGB7P56piRNnEAKVekkowe2VeIL0snf/5IGHUbIng2zJVGCeJJ15iz5/eYNWy5xo8eQ3AGpJHuy5JIzRUrJljS55E+VJlz1Cgov4aq5WNj/CFB4YVcIbwQovIS3FmN5QYDCC/tBeCRA4cV/rRbZhJeXL18KQlfEiR1L4seLYwN98OgZSZIovmR86w2P4e87dFJSJk+ivC7MCc8+dOysVCxV0OPnmDNAfNMbN+9K4kTxJVbMGOrnO3cfyJ6Dx6VK2SJef15Ez5DCi6GFz56/JE26jJaWDSpJtzZ1BC9SrjKtZc643lKq6DvqynN//SM1Ww2V77+cIqlTJpMHj5/Lk6AgOXX9mpwIDJRjgVfl+LVAOR4YKNcfPVT3RI0SRTIlTSq5UwRInpSpJFdAgBJn0sSPHyb7V6wYUSUo6KU8f/EyTJYvLBUqSlgqTCQvS5xY0eXRk+eRnAKrH54IRI0aRWJEjypPvGBdGPTipUSLyhEpPLV/eC0r+ixmB8+fvwivVWC5IyGB2DGjyZNnQfIyAk5tw1qV4sWOHil62P0Hj+Tj+Wvki3XbbfVNnzaldGlZW6pXKKrCU+TPndnmNeEJlObdx0rlMoWlad3yIbL55fBpad17vJzYsdiTRwS79+I/V2XsjOWye/8x29+L5MsuvTs2FLxEjTp/ZPP+8NpDI0FGFF7+a+R/rlyX5t3HSKG82WTsoPYSLVpU9QssXsYMamdTEc0WL7fvP3XYTQIfPJAT1wPlhBJirsqJ69eUdczToFcuPEljx5ZcASklZ/IAyQ1BJnkKyZY8hcSI+urZryvFjR1dnj1/of7H5JxAWPvYReb2Shwvptx58FQtCJhIIDwQiB41isSJFU3uPfJcMMRGAdxfmUjA1wTixIymNqYeP+Mcwdesmb/3CMBSC5ulEKkjWgprI3/i+DEjGmK79WnXb5L8e+W6WifmzPKWXLt5RzZt3ycnzvwl0z/qFm6FF5z0W75hX3k3f3bp36WRpEqRVC78c1UWrNgk2TOnl/y5MlN4CWUPp/AiIn+c/0cphWXfyy/De7eQ6NGi2XAixgsUxnZNqqm/mWO8uHuq0fMXL+TcrZty8sY1OXn9qrKUOXXjmlx5cF/lHz1qVMmUOKmKF5MzeUrJkTxA8qRIKYljxw5lE7t/G12N3GfGO14/Aboavf42YAncI0BXI/d48eqwQYCuRmGjHVgK9wjQ1cg9Xp5cHRlcjX4+cFw69J8saxeMkqwZ3wyG6/GTpxI71qsDWRImiCt37z0UuB2VKZZXuretK2+mCVDX42+T5qyUPy9elgolC0jjOuUld7YM6reL/wTK6OlLBc+BFc21G3ekV/v6yuIFwvfSNVtlyarv5Oq1W5Ll7bTy+5+XlMXL7Tv3pfPgaWpti5Qz61syuHtTWxkbdxklHZpVV5Ysp85eUOE0cKKvMc1Y8JU6WGbryinqYBljQt3O/nlJCS8QZVb8Z+3TtnFVaVizjLr00eOnyhLo2+/3SpJECeT9WmWkbtVSKi+UfdU3P8qS1Vvk3v2HUrdqSWlcp5wSd5D3lLlfync//iKPnzyTd3JmlKE9min3Kghc42Z+LvsOnVJ/b1C9tC0MiCd91d/3Rnrh5cy5v6Vu2+FSrdy76mWI+p+1Sdw4sVRn+ezzjbJm4051qhH+1mngVJ+canTv6VM5fu2qnLoRKCevBSphBtYxj54/U30iRdx4kvO/AL45kr+yksmYJKlE88EOJ4UXf7+GfJ43CFB48QZF5uFPAhRe/Embz/IWAQov3iLJfPxJgMKL/2j7RHh5el/k+mn/VUI/KWZ8keTZQjwXp96u3bRLNi2f4LBMEF4grvRqX08yZUgrU+eukiL5s0ufjg2VsFKl6QDp26mhlCiSR7b8eEDWbt4l21dNlaAXL6RmyyGSNHFC5aYUM0Z0GTphvrRtXE0JL5u275f+oz6Rrq1qS8mi78i2nQfVKbwQXmCtgnilsEqJGTOGLFyxSQk7az4b+UqIKd1K/X/TuhUkTapkUql0YUkdkDRYHSAovfVmahnSo6nduh079acSXsoWz6fElr//vSZjPl5mi386YvJiJer07thAWeKOnLJYOreoJTUqFpNvt+8T/D6yX2vJkC6VfLJ0vSRKEF+dFow6QEyaNbaX8jz58efD8m7+HJI3V2ap1WqI5M2ZSZrXryjnL15R9d+6crK8kSq5//uEB0+M9MLL5h/2S7+PPgmBEJ1j/JAO8uDhY/X7rn1H1TW5smaQmWN6SkDyxOrf7lq8uNNWMIY8f/umsoiBGIP/h4XM3/fuKHeKmFGjSdZkySVHshSSMyCl5EgWILlSpJQEMT0z8aPw4k4r8dqwQoDCS1hpCZbDKgEKL1ZJ8bqwRIDCS1hqDZbFKgEKL1ZJeX6dT4SXq7+JrG/jeeHczSEgt0jtRSHuGjVtqfz9b6DMm9TPqfBijPHy1be7ZPlXW2XdwtEyZ/HXsvH7vTLlwy7q/ufPg5SY8dX8j9Tas0WPsbJx6ThbMF1jjJc2vSdIQIokap2KZI7xAouT306dk78uXpZjp88rIUbHf4HwMndCXylRJLfDcuN0XwgqsGKxl7Twok/4xTUlaneXjwa0kXfz55SClTvI0J7NJV+uTOp2CFRXr9+SGaN6SLNuY5QFT7N6FdRvEGjGzfxC9m6cLXOXfCMbtu2RGaN7KCse7T6NwMJt+0yUJR8PlnhxX3mAQLypVfk9aVKnnLst+lqvj/TCi1X6UBCfPXsuyZMGPy7al8KLo7I9fP5MTl4PVCKM/v/TN68JrGaQ0sRPoFyU/ifIpJAMiZOKVR9QCi9WewWvC0sEKLyEpdZgWawQoPBihRKvCWsEKLyEtRZheawQoPBihZJ3rvGJ8BJOLV6MwgvCVUz9dLVsWTFJBo2dJ9t3HwrhptS5ZS25ceuOjJq2TA5snmtrEKPwApGjZ7v6Ur96KfW7UXjR4TMSxI+r4pY+efpMNmzdE0x4WT5rqOTLldlhY8PiBeIIxBN7yZ7wUrXZQOnWuq5kz5xOqrcYrGLBwN1KJxgsTB3RVQk0cePElhTJXhkw6ISYOM+eB8nQcZ/J/sOn1DWNa5eVTi1qyXc/7pfhExeGKHOZ4vkcikPe6cnez4XCi4dMX4fw4qjIsITRMWNeWcgEyl93bkvQy5cSJ3oMyQbrmOSIHRPwXwyZAMHx1+ZE4cXDTsHbXwsBCi+vBTsf6gEBCi8ewOOtr40AhZfXhp4P9oAAhRcP4Ll5q0+EFzfL4OvLd+//TYWfgAsPRAZjevjoiQpPYT7VyCi8TJm7Sv76+7LyojCn42fOy/sdRyrhBQIEklF46TpkumTPlF6dwItkFF4mzF6hrEgWTBmg3HWOnjwnTbqMckt4mTZvtbJSgUCkn6/LiLrhhF/zqUZaeCleOJcUq9FVVs8bITmyvBWiboidWqtSceUy5ChdvnpDfjlyWkZPXyaDuzeRZEkSKe8TWMUY47D6uo19kT+FFw+phiXhxV5Vnr54ddS1dleCZQz+ffPxI2UB82bCxJIjeQrJmQKuSimUIPNOmhTy+EmQPPLCEace4uXtJGCZAIUXy6h4YRghQOEljDQEi+EWAQovbuHixWGEAIUX/zVEZBBeECS2RY9xEnj9lowa0FZyZ39brt24pQLDQjiBW40z4eXQsd+VmAJ3oSrlisiduw9k266DUjBPVnkrXSopWr2riufSpE55gYUJLGR0cF0cX41YKOOGdJAUyRLJrEXrZOO2vUpcmb1onfy454h8Mr63cl+avfjrEK5Grixebt6+J3A3gqvQwG5NJE3K5ILjpRd9udnhqUZaeKlarojAFQrWKxOHd1KeImfOXZRff/tdWjaoJPOWb5Bla7bKnHG9lTCDU4XXbNyh4t58vnabyj9PjozK3apOm2HSv3MjKVYolzplqU6VEipeDtKBI2fk2fPnUr5EAf91bC88icKLhxDDuvDiqHqBDx+oAL6v3JVena509tYNwalLCWLFkpw42jrp/wSZ7MlTSKxo0T2kxdtJwHcEKLz4ji1z9g0BCi++4cpcfUuAwotv+TJ33xCg8OIbrvZyjQzCC+qNE4SmfLpKWYfoBBedLi1rS/UKRZXwUiBPFsPJuAdk6qerlCUJEu5DfJOHjx6rf+PeuRP6SLo3UgrEFQSsRUK8E4S8aNekuoppcv3mHWnfb5I6yQipeKFc6vQjCC+XA29K96EfK6sXJMRywQlGxhgvroQX3Hf2/CUZ8/FyOXDkfwGN8+fOIgO7NZaXL0UadRopxhgvEF66t6krVcoWUSctjZiy2BYfFfl1bF5DerStJ0+fPpNpn62Rpau32JjBJWrx9EGycOUmgSUQEixtKpYqKCP7t1ZWLoePn5Wh4+fLhUtXbb9DtCpXIr//OrYXnkThxUOI4VV4cVTt49cD5Z+Ht+Tov1flSOAVJchApEF6O3FSCYgbz0NivrldB2CKosIOv0r/+5v9fwe7Rt9mOCVKx8RxlI+638WzjLUNkY8h6o6jfOzXIyTD0NTVfM9/0F79n6leVusaoh4ec/2v7eyUx9zOCWLHkAePn6keEOW/GjjjGi1aNCmX/m15JyCVbzolcyUBFwQovLCLhEcCFF7CY6uxzBRe/NcHIovwookGBb2QazdvS+yYMSVxovhugYblzI1bdyVGjOiSKEHwNRYEmXv3H0nKFElC5In7rgTelCSJEwSLpaIvxPHLiRMlUC5PniQIJRB6UC+z25GrfHE8NCx5kiVNGMJF6HlQkNy4eVcSJogX7Mhq/Xd79+B5OuZqsiQJbes8V+UIS79TePGwNSKa8AIc5hgvd588kWPXrsqJ61fl3pMnHhLz7u1YZGPwQfqf5BLyby//+9XeNbpE9vN59au+z8qzlBSMewzRjM336X87y9veNba8/yt0sGv+e547zzK2xn/FdquuoecavM2s8NB1N7I11jVm9Gjy5NlzW5VCttkrQPqee0+fyInrgVIw1RvSLm8BqZEp5HGB3u2tzI0EghOg8MIeER4JUHgJj63GMlN48V8fiGzCi//I8knhnQCFFw9bMDIILx4i4u0k4BcCoXE1Ohp4RT47ckA2/HFGWXO1zlNAmufK6/GR7H6pMB8S7glQeAn3TRgpK0DhJVI2e7ivNIUX/zUhhRf/seaTwhcBCi8etheFFw8B8nYS8BKB0Agv+tFXH9yXRb8dkuUnjsjj50HSIFtO6ZivkLyVKKR5p5eKy2xIQCi8sBOERwIUXsJjq7HMFF781wcovPiPNZ8UvghQePGwvSi8eAiQt5OAlwh4IrzoIjwOei5rz5xUVjBnb96Q0ukySPu8haRUupBH4nmp2MwmEhOg8BKJGz8cV53CSzhuvEhcdAov/mt8Ci/+Y80nhS8CFF48bC8KLx4C5O0k4CUC3hBejEXZ9fcFJcD8eOFPyZw0mbR7p6DUy5ZTYvN0Ly+1GLOh8MI+EB4JUHgJj63GMlN48V8foPDiP9Z8UvgiQOHFw/ai8OIhQN5OAl4i4G3hRRfrrzu35NPDB2TN6RMSK3o0aZrzHWmTp4CkjOde5HovVZPZRCACFF4iUGNGoqpQeIlEjR2BqkrhxX+NSeHFf6z5pPBFgMKLh+1F4cVDgLydBLxEwFfCiy7evadPZdnxI7Lot1/VEevVM2aVDvkK8ThqL7VfZMyGwktkbPXwX2cKL+G/DSNjDSi8+K/VKbz4jzWfFL4IUHjxsL0ovHgIkLeTgJcI+Fp40cUMevlSNp07I58dOSi/XvlXCqRKI+3zFpSqGbNKtCiGM8S9VC9mE3EJUHiJuG0bkWtG4SUit27ErRuFF/+1LYUX/7Hmk8IXAQovHrYXhRcPAfJ2EvASAX8JL8bi4jjqeYcPyMZzPI7aS80YqbKh8BKpmjvCVJbCS4RpykhVEQov/mvuyCa83Lv/UJ4HBUmiBPElatT/bcB9v/tXeSdHRkmRLHEI+A8fPZGYMaNL9GjR/NYwz54HSVBQkMSOFVPu3Hsgew4cl8plCkuUKFHEWVn9VkAHDzp7/pKAcf7cWV53UTx+PoUXDxFSePEQIG8nAS8ReB3Ciy46jqNe+Nuv8vmJo/LkeZDU53HUXmrViJ0NhZeI3b4RtXYUXiJqy0bselF48V/7RhbhZcPWPbJu827Zf/iUDW6l0oVl6ogu6t+FqnSS6R91k+KFcgWD/+jxUylYuYPMCyjymgAAIABJREFUHNNTyhbP53HDDJ+4UNZu2iVzJ/SVEkVy2/LrPvRj+eHnw7Js5lDJnzuzzFq4Trb/9KusWzhaTpz5Sxp2HCFHty9Q4o+jstornH6e/q3ku+/IgC6NJEO61B7XxV4Gc5asl9N/XJAZo3r4JH9/ZkrhxUPaFF48BMjbScBLBF6n8KKrgOOovzp9QuYfPcjjqL3UrhE5GwovEbl1I27dKLxE3LaNyDWj8OK/1o0Mwsvh42elWbcx0r9zI6lZqbi8ePFCiRmffb5Rls8a6lR4efHipRIS0qYJkITx43rcMFoIgUXIsplDVH5/XrwsNVoMVv+thZfA67fl3v0HkvGtNzwWXh48fCT9Or0vN27dlY8XfCV/XvhXvv9yajCLH48r9l8GFF68RTIC5EPhJQI0IqsQIQiEBeHFCHLnxb/UcdQ7Lp7ncdQRood5vxIUXrzPlDn6ngCFF98z5hO8T4DCi/eZOsoxMggvX327Sz6YtFCOfL9AYkS37y5ktCKBQDF47DwpViiXtGpYWYk2Q3s2k+yZ0wssZ3buOyoJ4seVjdv2SuqApDKiXyvZe/CErFz/gyRPmki6ta4r5Urkt4scwsvLly+V9Q1En3y5MsvIqUskRvTo8vnabTbh5dvt++TX336XD3q3cCq8mMtqfqh+3uiBbdVPx8+cl/c7jpQtKyapOkycvUK27jwoCeLHkfrVS0uHZtUlikSRlj3HSZ+ODZX1zfmLl2XQmHkyb3I/SZQgnmzZ8Yvs2vebjBnUTh4+eiwTZ68UlDd2rBgSN05syZrpTZvFy8GjZ2TSnJVKXKpQsoA0rlNecmfLoMrSuMso9bzd+4/JqbMXBGXMmD6N/zq/iyfR4sXDpqDw4iFA3k4CXiIQ1oQXXS19HPXq0yckNo+j9lJrR4xsKLxEjHaMbLWg8BLZWjxi1JfCi//a0RfCy4MnQXL68j3/VeK/J8WLFV2ypY4f4rmXA29K+YZ9pHSxvFKvWinJlvFNSZMqebDrtPCSK1sGadVznHLFmTi8k3LtyVm6lSydMUQK5Mkii7/8TiZ9slLaNq4qxQvnVmLJ9t2HBG5L9aqVlF9/OyOrN+yQXetmqHgs9oSQxAnjC346d+FfGdG3lZSu10s2fz5BqjQdaBNelq7eIjv2HJGF0wY6FF7sldWV8ALRpM+IObJv4xwZNW2pnP7johJYbt6+K+NmfiG92teXpnXLS5veE6RQvmzSuUUtWbBik0z9dJWMH9JBalQsJsMmLFDWPwO6Nlai0c69R6RrqzqSKcMbMnfpNxIjRjQlvFz8J1CqNB0gfTs1lBJF8siWHw/I2s27ZPuqqYoNuCI1rVtB0qRKphhCyAoricKLhy1B4cVDgLydBLxEIKwKL7p6PI7aSw0dgbKh8BKBGjMSVYXCSyRq7AhUVQov/mtMXwgvxy7dlfYLDvmvEv89KVfahDK/rX1LE8R2QdyUQ8d+V1enT5tSBnRprMQYJAgvsOCA4JE0SQKZ8mFXm3WMWXj56cAxmT+5v7rv5wPHpUP/yXJix2L17zt3H0ixml1l0/IJ6hmOhJem9cpLuQZ9BDFXUiZPIoN7NJX8FdtbFl4cldXe834/97dUK/+uXLp8XQlFsOLp2rq2qvOk4Z2larki6rbxs76Q/YdOqrgycMMCM9QTFjLJkyWSaNGiKkGlUuP+Mrh7UxUPJ2+FdjJqQBupW7WkysPoajRn8dey8fu9MuXDV3F0nj8PkkadP5Kv5n8k2TKlU8KLOdaN3zuNkwdSePGwNSi8eAiQt5OAlwiEdeFFV9PecdQd8hWSKm9n4XHUXuoL4SUbCi/hpaVYTiMBCi/sD+GRAIUX/7WaL4SXsGbxYqR5/8Ej+f3Pv2Xp6q2ybddB2btxjrLegAiBBNcZWJ+ke+N/ookz4QVCTvPuY23Cy5Onz5SAsnbBKMma8U2HwgusQHS8l41LxykLHHeEF0dltSe8/HzgmOTNmVlSpkgiBfNkVW5QcB+q3mJwMIEIrlOwYDmwea4cPXlOmnQZJd99MVHqtv1Avl40Wio26qf+XbnJANmzYbbcvfdA/feGpePk7f+C9RqFl0Fj5ylrIDOHzi1rKdEGXLW7lf96vPUnUXixzsrulRRePATI20nASwTCi/BirK7xOOqU8f6PvfOAj6J4///nanoCofcmvSPIV/yhiAULithBBAREQEFQEQX5glIUEVAQBSliQ0TsioIiKl9R6U2kSIsU6QnpyZX/f2Z37/ZKkktub7N7++xLXrnbnZnnmc8zFzPve2YmEQ+1uRz9WrZFkt2ukCrUjJYVIPCi5eiQb0UpQOCFxoYeFSDwol7UIgFe1PM+NEvsOOj4uBifwv+cPMOhwbJXn0Gnds04eGHLaE6dPo9jx//F8vkTUSFFWLZUPHg5iAdHTisTeEk7cRr/27QHfXtfBwnYSJvrlrTUqChfg4EXtqeMtMeL9FzKzJk/fbQn64dlBK3+8XcOY9hx1u2uH4xePa5CbGwM32uG7XVTu2YV/H3kBFYtet5ThmXFXNmxJW9aDl5mLViJo/+c4idCBbsIvIQ2fnVbisCLbkNHjkeZAnoEL1IIpOOo3/9zJwocTtzTvBWGtuuI+ikVoyxK1B25AgReaDzoUQECL3qMGvlM4EW9MWAE8MJgAIMFA+7tgcvq18Lpcxex9MPVWPPTZvzw0SykJCd4jmhmm90OfvJlHoAls57mwCZS4EUe5dKCF3b0dTBfQwUvrBwDKYkJsZj0xEBczMjEmEnzceM1nfieLOwa/swc/PL7Tr7ciIGV91at5cuRhvS9FWOG3sPLjJo4F06nC+Me7cOXWbGMGbZfC1uSJGUDsb1hbr6uM3/OsoxY1g3bD4bAi3qf83KxROClXGQno6RAgAJ6Bi9SZ/yPo762XkM83K4Trq5TjyIehQoQeInCoBqgSwReDBDkKOwigRf1gmoE8MJOHHp10Sp+oo90NWlYG/99YgCHF+xiGS9zp4zkgCE9Iwt9H52CurWqYv70MWhz3SB+9DM7AnrZyu+wcfMevDXzKV5v227fjJeCgkK0L2GpUcWURL6hbXHghUGO9b9u55vr7j1wFPcMnYyd65bwzX6L85XtwyK//E81kj9jy40enziPb/LLLrbfDYMk7LQjdjEf5i75FBu/fB02mxUn/j3HlxvJ92VhR3UPHTuLL9FiJxoxoFKlUornVKNPV//CN+1lz9nF9r1ZMOMJvpSLwIt6n/NysUTgpVxkJ6OkQFSCF3mn/I+jZgDmzqYtEGuxUvSjRAECL1ESSIN1g8CLwQIeJd0l8KJeII0AXiQ1WVbJhfRMJCXEITEhTj2RNW7pzLl0xMTY+FHRZbnYsqQz5y6iepVUvgGv/8WWOrFjrxm8KauNsvgVbh3a4yVMBQm8hCkgVScFFFIgGjJegklxKP0iFu/YDOk46n4t2+GhNh3A9oShS98KEHjRd/yM6j2BF6NGXt/9JvCiXvyMBF7UU5UsRYMCBF7CjCKBlzAFpOqkgEIKRCt4keTxP476tsua8mVIbatWV0hBakZtBQi8qK042VNCAQIvSqhIbaitAIEX9RQn8KKe1mRJXwoQeAkzXgRewhSQqpMCCikQ7eBFkokdR/3Nof1YtGMLtv17Eh2r18LD7TvScdQKjSM1myHwoqbaZEspBQi8KKUktaOmAgRe1FObwIt6WpMlfSlA4CXMeBF4CVNAqk4KKKSAUcCLXC52HPXC7Zs5iKHjqBUaSCo2Q+BFRbHJlGIKEHhRTEpqSEUFCLyoJzaBF/W0Jkv6UoDAS5jxIvASpoBUnRRQSAEjghdJOnYc9ZJdW/EBHUet0GhSpxkCL+roTFaUVYDAi7J6UmvqKEDgRR2dmRUCL+ppTZb0pQCBlzDjReAlTAGpOimgkAJGBi+ShOw46lX7/uSb8f598QLoOGqFBleEmiHwEiFhqdmIKkDgJaLyUuMRUoDAS4SEDdIsgRf1tCZL+lKAwIssXg6nE2aTGWazKeQoEngJWSoqSApEVAECL77y/vTPUSzavhk/px1B49RKfCNeOo46okOw1I0TeCm1ZFRBAwoQeNFAEMiFUitA4KXUkpW5AoGXMktHFaNcAQIvYoBz8wpw3yOTMbTfbeh5w5WesK/bsA2jJs4NGAbb1i5CjN0GAi9R/gmh7ulGAQIvwUPFjqNetGMzz4SJtVpAx1FrZ0gTeNFOLMiT0BUg8BK6VlRSOwoQeFEvFgRe1NOaLOlLAQIvAF5Z8BHeXvEtj9yMCY/4gJcfNmzFs9MXYdWi530iW7dWVZhMJgIv+hrv5G0UK0DgpfjgZuTn8z1glu7airM52aDjqMv/w0DgpfxjQB6UXgECL6XXjGqUvwIEXtSLgdHAi9vtxrkLGYiLjUFiQpx6QhdjaeuuA0hJSsBlDWoV609mVg7+t2k3brimI6wWiyZ8j2YnNAde/j17AfsOpqFj26Z88B47fhrfrPsd8XExuO/27oiLtSsej/SMLOQVFKDviCl4Yui9AeDl+VnLsOHzeUHtUsaL4uGgBkmBMilA4CU02RwuF1YfPkDHUYcmV0RLEXiJqLzUeIQUIPASIWGp2YgqQOAlovL6NG4U8JKVnYvXFq/C8s/Wefpfr3Y1jBhwh89cMlLKf7V2I56Z/lZA8wtmPIkVX6xDm+aN8MiDtxVr/u8jJ9DroQnY/O1CPtemK7IKaA68THvtPfzy+y58/d5LcDqduOG+J3EhPZOrcOctV2PK04MipkiPPmMxctCdAeDl8Ynz0KvHVYiJsXMg1KNbJw8VJPASsXBQw6RAqRQg8FIquXhhOo669JopWYPAi5JqUltqKUDgRS2lyY6SChB4UVLN4tsyCngZ8tRMnPz3HKY9MwQtm9TH2QsZWL3ud/y5/yhefeGxiAvOwMvLb3yId+eO97FVrUoqxk55k8BLxCNQegOaAy/3PfI8ul3VDsP798K3P/6Bp154ky/zYfBl9H9fx29fz49YKlQw8LJ73xGs+WkTT9c6efo8Vn65Hn17X4cJjz/I1c7Oc5RedY3XiLGZ4XC64XS5Ne4puUcKeBWIj7EiJz/6Po9qxPhUVhbe3LoZb+/YjnynAw+0aoORnTqjYcWKapg3rA2zyQS7zYy8AmfYGrDf15ZSbAwftkFqwLAKMGDIUusLnfQ3gmEHgQ47Hme3IK/QCTcN24hHLyHWGnEb5W3g1817MHTsK/h0yRQ0bVTHx528/ALExtiRkZmNl+d/iLU/b0FSYhzu7tkNQ/v15PNYBk12/Pk32rZshK+//w2NG9RGs8vq4uffd/I555drN/L3jw3qjc7tmwftrgRegq3KeHT8qx7wsmXnfrww+x2cOnOBt3Ntl3aYMPpBbsc/42Xn3kOY/tr7eHLYfbiifTOwujPfWIHDaadww9WXo0/v69G6WQPeDsv0ef+TtTh7PgMs0+exh3qjW5d25R0aTdvXHHhh8INtcHvXrVdjxvwPOfT48eM5yMnNR6ebH+EQpnnjehERNRh48Tf06epfMPHlpdi5bgn/4KRnFUTEl/JsND7WCofDhQKHqzzdINukQKkUSEmw41J2AehvqlLJ5vvHgsOBFXv34M2tm3Dwwnlc36ARRnS8At3q1i97o1SzSAWsFhNi7RZk5YYPDNlEmO07RhcpEGkF2Jhlv2fzFQCGkfaV2icFJAWS4m3IyXPQl4oqDIkKicpvC5HlyMW+i8dU8N7XRIItDs0rBM47Fy//BmxOuPr9GUX69PSUBdj3dxqeeOReXEi/hBfnLcfoh+/GA3dej2UffYeZb65AmxaNcH3Xy1GjaiWcOXeR33vo/pvxf1e05gkILHvGf59RySADLy/MeRejBt/p8aFurWq45sq2kIOXPfuP4ODh43z+nJuXj0kz3+aAhPklBy9pJ07jwZHTeXsP3n0j0k6cwc0PPI0nh92Lrp3bYM36zfj021+wbuVsDo36PTYNsyePQMN6NbF9z99wOJw8OYGuohXQHHhhA8XlcuOp4fdh4OMvoluX9nx5ESNtt/V/Fl+/+yIa1K0RkZiGAl42/LEbw8bNwtY1b3GaSUuNIhIKapQUKLUCtNSo1JIVWyHYcdR3N2sJu5k2X1NKaVpqpJSS1I6aCtBSIzXVJltKKUBLjZRSsuR2IrHUaNf5v/HQ+mklG1e4ROvURljW/bmAVqfMeRf/nDyDt2Y+FdRiTm4eOt08DDMnDsct13XmZV56fTn+2LYXny2dysHLmp8344PXn4NZzFZl9/63eTcWvzKWlz+Sdgo9+z+LjV/OR0pyQoAdaY8XeZZJ+1aNMaTvrT7ghVU8ez4d23Yf5HCHZeAkJ8Vj/vTRHvDy0cJJeGj0DDw68A4MvO8mbuuNZZ/j6x9+w6xJI/h7BlbuH/4CPln8Ai6mZ4IttWL7yVzZsUXEVqMoHM5yb05z4GXzjn0YOPoljzASaJm9cCU+/PxH/PrFPNjtNkWFczidcLvcfHAP6387el5/JWw2IU2OpVGxFLIWTeojIzMLY19YAJvVgqVzxvHnBF4UDQU1RgqUWQECL2WWrtiKdBx1ZHRlrRJ4iZy21HLkFCDwEjltqeXIKUDgJXLa+rccCfCit4wXCZqwjBi2DIddbEnR87PfweZvF3DwIocs7Ln/vTPn0nHt3aOx7uPZqF4lNSCAoS41krbu6NC6CZo3rosDh48jNsbGoYmU8RIfF4vUCkn46p3pnnk227h33YZtAUuphg/ohSvaNcOLry/HR1/8yP3q0e0KPPHIPahdo4p6A02HljQHXpiGB48cx559R3B5myZgKVPs+uDT71GlUkXceE1HxWV+YvIbfEmT/JIDnyUfrvY8YilhMycO8wwsAi+Kh4MaJAXKpACBlzLJFnIlOo46ZKlCLkjgJWSpqKCGFCDwoqFgkCshK0DgJWSpwi4YCfAStlMKN7Dhj10YNm520C0w2PYYhYUOdLn9UZ5VImWkvL70M6z+8Xe+PElN8HL7gPG4qXtnjBjQi6uwdMVqbNr+lw94GT/qAbD5bsc2TfHi+KGwWMyYtWAljv5zCvOmPV6kehmXsrHrr0NgCRJNL6uLl8YPVVjp6GpOk+BFaxKzTZJYilZSQjwqpCT6uEfgRWvRIn+MqgCBF3Uiz46j/ubQfn4c9fbTp9Cxei083L4jbm7YBBbaY6RUQSDwUiq5qLBGFCDwopFAkBulUoDAS6nkCquwEcAL21et/6gX+dKdKU8PRuvmDXH2/EV8t34T2J4qc6eM4nugJCbEYtITA3ExIxNjJs3Hjdd04numqAlemB+NG9bGE0PvwfFTZzH5lWWoWCHRB7yw46RPn72Aex95Hr1v7goGYrbtPsD3fGEw5ebrOoNBlu9/2cLhzKkz53EpKwfdr+rAN/Z/bsYSJCbG479j+oc1dqK9sibBC9vc5/ete/ng8L+GD7gDcbHKb9pU1kATeCmrclSPFFBWAQIvyuoZSmvb/j3JAczqwwdQLSERD7W5HP1atkWSXTu/o0PpR3mVIfBSXsqT3XAUIPASjnpUt7wUIPCinvJGAC9MzfSMLMxauJJvsitdbFnRiAF3oOcNV/I9Wh6fOA+Hjp3kj1nmC4MYSYnxWLbyO2zcvMdnjxj/e+xL/253jeaHzFSrEnjKZHFLjUZOeI3DIHZgDTuB6ZlpC/kJwWxJEdtCg/nw5ktjcOjoCdw+cAK2fPcWn1/v/usw38dlzP+HNGyvGNY3tikw27OGXax/C2Y8gZP/nsfI5+Z67l/VqRUmPzkQNatXVm+g6dCS5sCLdGoQ05INMpvV90gytrMzGyxauQi8aCUS5IfRFSDwUn4j4HR2Fhbv3ILle3ehwOHEPc1bYWi7jqifQsdRFxcVAi/lN2bJctkVIPBSdu2oZvkpQOBFPe2NAl4kRZ1OF85eSEes3R6wMoKVYXu1xMTY+PHN5XWx/UxPnT6P6lUr8b1KS3Ox7J7zFy/x/U/lfZDuM5gTHxdTmiYNW1Zz4IWdLMSOpZo7ZaRng1stR4fAi5ajQ74ZSQECL+Uf7TynAx//tYdDmEMXL+Daeg3xcLtOuLpO4FGM5e9t+XtA4KX8Y0AelF4BAi+l14xqlL8CBF7Ui4HRwIt6ypIlvSugOfDSe9BzuO7/Lsdjg3rrQlsCL7oIEzlpAAUIvGgryD+lHcGi7Zvx8z9H0Ti1EgcwdBy1b4wIvGhrzJI3oSlA4CU0naiUthQg8KJePAi8qKc1WdKXApoDL2zH53X/24qPFz2vizPBCbzoa8CTt9GrAIEXbcaWHUf91vZN+GT/XsRaLejXsh0eatOB7wlj9IvAi9FHgD77T+BFn3EzutcEXtQbAQRe1NOaLOlLAc2Bl9y8AlzdexQ6tm2KyqkpAWqOH9WPNteN8BirmGRHXr4TuQXOCFui5kkB5RQg8KKclpFoiR1H/f6eHXh79zaczcnGbZc15VkwbatWj4Q5XbRJ4EUXYSIn/RQg8EJDQo8KEHhRL2oEXtTTmizpSwHNgRd2hjg7C5xt1MN2TraYzT6KLpn9NBIT4jSjMmW8aCYU5IjBFSDwoo8BQMdRe+NE4EUfY5a89FWAwAuNCD0qQOBFvagReFFPa7KkLwU0B15uHzAelzWohVmTRsBkMmleTQIvmg8ROWgQBQi86C/QRj+OmsCL/sYseQwQeKFRoEcFCLyoFzUCL+ppTZb0pYDmwMt9jzyPq65ohVGD79KFkgRedBEmctIAChB40W+QT2VlYumurfjgz50odLpwb/NWeNgAx1ETeNHvmDWy5wRejBx9/fadwIt6sSPwop7WZElfCmgOvLz78Rqs+OJHfL50Kux2m+bVJPCi+RCRgwZRgMCL/gPtfxx1d/E46q5Rehw1gRf9j1kj9oDAixGjrv8+E3hRL4YEXtTTmizpSwHNgZc33vkC89/+DO1bNUZqxaQANV8aP5Tv/6KVi8CLViJBfhhdAQIv0TUC/I+jHtquE+5q1hJ2syVqOkrgJWpCaaiOEHgxVLijprMEXtQLpdHBS0ZmNjZu3oObrr1CF9tmqDcyyJLmwMub736BXXsPFxmZWZOGE3iJ8LilU40iLDA1HxEFCLxERNZyb1Q6jnrVvj8Rb7OhX8u2GNT2clSJTyh338J1gMBLuApS/fJQgMBLeahONsNVgMBLuAqGXt8I4OX4qbPo0WdsgCgPP9ATN1zdEfc+Mhk71y2B1RI9XxaFPgKoZFEKaA686C1UlPGit4iRv9GqAIGXaI2s0C/pOGq2F8y53JyoOI6awEt0j9lo7R2Bl2iNbHT3i8CLevE1EnhZ/MpYVK+a6hE3JTkRp06fJ/Ci3nDTlSXNgpes7Fzk5uUHiFk5NUVTaVsEXnQ13snZKFaAwEsUB1fWNek46rd2bMGO06fQqXotPNy+I25q2AQWHZyEJ48SgRdjjNlo6yWBl2iLqDH6Q+BFvTgbCbx8t/xl1KlZ1UfcP/cf9QEvh46dxLRX38Mf2/9Co3o18digO3HjNR15ncmvLEPnDs1xc/fO/P36jdvx3fpNmDHhEfx95AQmvLQYz4zsi/dWrcWZc+l4//UJ6gWSLCmugObAy+mzFzHqubnYs/9I0M5u/Go+UpK0k2JO4EXxMUkNkgJlUoDAS5lk03Wlrf+exKIdW/Dt4QOolpCIQW0uxwMt2yLJbtdFvwi86CJM5KSfAgReaEjoUQECL+pFLRLgJf9SPk5tO6VeJ0RLMckxqNGhRoBdaakRW1pUqWIyf263WXFfr+6Qgxen04WbH3gaLZvUx4B7b8Km7X9h/rLPsWrR82jeuB4eHDmdQ5e+va/jbXz27Qawg2Y+WzoVu/86jPuHv4BqVSrirluuRmxsDAb3uUV1DcigcgpoDrw8P/sd/PDLFrCBPGP+h5g6bjAqpiRh9sKVPJVr/otjYLNqZ70cgRflBiO1RAqEowCBl3DU03ddvR5HTeBF3+POqN4TeDFq5PXdbwIv6sUvEuDl+G/HsaTLEvU6IVqqfWVtDN44uEjw0qldMyTEC4e+JMTF4uWJw3zAyx/b/sLQsa/gh5WzUUNcknT7gPHo2rkNxo64PyTwsmn1Ao8N1QUgg4oqoDnw0nvQc+h5Qxc8eNcNaH/jw/jynek8Levn33ZixLNzoLXBR+BF0fFIjZECZVaAwEuZpYuairmOQny870+eBXM2JwstK1dTrG9mE2Axm2ExsX8m4TX7B+m1SbjPnvNy4n1PeeGZzWyGyWyG1WyG3WJGfIwV+QUuXt5sEu7z16yMyQwzb8ckey2UMYt2rWZWT2ib3xftyuv6+in65vETiLPaFNOJGop+BQi8RH+Mo7GHBF7Ui2okwItWM15KWmr05ZpfMeetj7Hh83meAEx65W1kZuVg9uRHQwIve9a/raltNtQbSdFnSXPghe0QPbjvrbj3tm7odPMwvDzxEVzbpT2klK7lb0xE2xaNNBMJAi+aCQU5YnAFCLwYfAD4dX/76VPIKiiAE244XS7+z+V2w+GWXgNsvxinW7wvlYFbuO9ye8s7nXCKdV28jlDX5XaJbbjB7rO2mQ1W1/taKOMS/XCI7Qp2XYAJyC90+tTl/sr8ZrZZeX7fDTDAFOkr1mIFhzoiCOIgJ+C1AjDKB175giwGkZhdDpREWMUAE78v+Qb22t83AYL5+MyhlACd5HU9AM0HmgXplxygmc1g+hj1IvBi1Mjru98EXtSLXyTAi3reh2ZJmpeWBF42/LELj41/DRu/nI+UZGGrjH6PTUPzxnUx4fEHMWjMDFz9n7YYeN9N/FmwpUYEXkKLiR5KaQ689BkxBe1bXoanH+2DJybPR3pGFmZNHoGv1m7kS49+/HgOX+umlYvAi1YiQX4YXQECL0YfAfrrvxJLjdyACGQYlBGgT0ngxgtxxLIM6hRRNxKwikMsBqN8ABODS3LA5AubBOgk+SlCKA+cClLXB6oJ/WTwi9lV8jLBH9KImU6eTKjADKNis6L8QJTbsEriAAAgAElEQVQEnxggYllXQkaUBJ+E7CqW/cTvi9lPDDhZLBY/+CTU9cInEVYVl7Hlk70lZnOZTEiJt/NvX/PzXWLmV9HZXhIkk/uppP7UFikQqgIEXkJVKvxyBF68m+uyzJYb7x+LPnd0x5AHemLLjn0Y+dxcvPHiGFxzZVu88c4XfN+X16aMxIlTZ/HivOXIys7x2eOFwEv4Y1IrLWgOvMxd8gn2H/oH86ePxs69h9B3xBSPVj26deJpWVq6CLxoKRrki5EVIPBi5Ojrs+9KgBd99rx8vRaykuRZRWWDPjzLiYEuN8uOCsx+4vfF7CfhtVgG0mshq4oBJSHLSvgnz5wKgGghwKZQAZyUpeXxTQRbnn6JfrLnSl7ScrjQlukVnVUlZEEJ0CfYMj1hyZ4IpSAu3xPBllRXvkxPyn4KbZleCEsL/bO5/LKqpOWE8qWFntesX6LPejutTcmxomRbBF6UVLP4towOXvYeOIp7hk7GznVLYLVY+HYZT73wJnJy87hww/rfjpGD7uSvj6Sd4okGBw4fR3xcLC5v0xjnLlzim+/u3ncE9w97HgRe1Bu7kbakOfDCTjXKLyhA3VrC2vyDR47j96170bRRXXRq11Rza9wIvER6iFL7pEBoChB4CU0nKqUdBQi8aCcW5EnxCsjhTEKcFYVOJzJyCgXoVAJQkkCXz1I8WQaS7zJA7xI/YVmfmB0lQiG+VE+EZhxWicsAhSyuojOfQoVRUmYVz/TyWX7omzVV0tJFVl/JyxfOwLMHlBfUBF+mJ2RKifBJtkzPN1NKLMMznIQ9o0JZpsezrMTMKiGLK3wYJe2j5fHZk9ElZJL5ZoAJfgbLBmPl/C8CL0qOSAIvpVWTnW7079kLSK2QjLjYwJMX2bPKqSkc1NAVvQpoDrww6nchPRPLXn1GF6oTeNFFmMhJAyhA4MUAQY6yLhJ4ibKAGqQ7tMdLaIGW9nby3zMqFKDkKcP2ghKBEgdXIozyXXoXwvJC2VI9B4dV0t5WpQNK8iWCEgTj+2YVAeCKygbz7IUl2/9KSVQlLQGUL8OTNh/3WW4XZN+nwD2jxMwqWdaU74bmQlaWN1OqmA3QfUAVWzZY+n2yfDOlRPgkbcjul9FV4qbtsqWKoY3q0EoZIeMlNCWoFCngq4DmwMvL8z/Eph37eIqVHi4CL3qIEvloBAUIvBghytHVRwIv0RVPo/SGwItRIl0+/cxzOvgSPl/4JGY/eeCT/95Wvvs+sYSjQgk2ibAqMc6KjJx8FDil7Kii94yS723Fl//57Rklz7ryfS1kXckhmbQRe8hZV56N1IPvwcX0ifQVb7WVOvtJ2nzdbrFi45CHIu0itU8K6FIBzYGXvw4ew90PT8JX776IhnVraF5UAi+aDxE5aBAFCLwYJNBR1E0CL1EUTAN1hcCLgYIdRV2N5qVG7KQ7duJdiZuQF3FinrC0zh/0yDc092ZVeZYW+uxtBZ+T/WbedF0UjRzqCimgnAKaAy+LPvgary5ahdo1qqDpZXUCevrS+KF88yGtXARetBIJ8sPoChB4MfoI0F//CbzoL2bkMUDghUaBHhWIZvCitXjQUiOtRYT80YoCmgMvb777BXbtPVykPrMmDSfwEuHRUzHJjrx8J3ILnBG2RM2TAsopQOBFOS2pJXUUIPCijs5kRVkFCLwoqye1po4CBF7U0ZlZIfCintZkSV8KaA686Es+gDJe9BYx8jdaFSDwEq2Rjd5+EXiJ3thGc88IvERzdKO3bwRe1IstgRf1tCZL+lKAwEuY8SLwEqaAVJ0UUEgBAi8KCUnNqKYAgRfVpCZDCipA4EVBMakp1RQg8KKa1JTxop7UZElnCmgOvEyZ8y7+t2l3UBlj7DZ069IOt15/JZo2Ctz/pTy0J/BSHqqTTVIgUAECLzQq9KYAgRe9RYz8ZQoQeKFxoEcFCLyoFzXKeFFPa7KkLwU0B14mvfI2NvyxC7ded6VHybz8fCz/bB26X9UeufkF+G3Ln5g9+VH06NZJUbUdTifMJjPMZlNAu5lZOWDPK6Yk+Twj8KJoCKgxUqDMChB4KbN0VLGcFCDwUk7Ck9mwFCDwEpZ8VLmcFCDwop7wBF7U07qslnLzCsDmtqkVk2C1WMraDNUrpQKaAy/9HpuGq65oheH9e/l05YnJb8But4KdavTcjCU4+s+/eP/1CaXsbtHF2QC875HJGNrvNvS8wQt9cnLzMG7qQvz463ZeuU2LRpg3dRQqp6bw9wReFAsBNUQKhKUAgZew5KPK5aAAgZdyEJ1Mhq0AgZewJaQGykEBAi/qiW4E8HL81Fn06DM2QNSHH+iJ0Q/frZ7YpbT0+9a9mD73fRw6dtJT87Ybu2Ds8PtRqWJyKVuj4qVVQHPgpesdI/HAnTdgWP/bffryzsdrsPiDr7Hh83n4cu2vmDLnPWz+dkFp+xu0/CsLPsLbK77lz2ZMeMQHvCxe/g0+/uonvDdvAuJi7Rj+zBw0qFsDU54eROBFEfWpEVJAGQUIvCijI7WingIEXtTTmiwppwCBF+W0pJbUU4DAi3paGwm8LH5lLKpXTfWIm5KciNQKvqsj1FO+eEvbdh/AgyOnY8SAXujT+3rExtiw98AxzHxjBSY+0R+tmjbQiqtR64fmwMuwcbPw5/6jWLdyNux2m0d4lglz9nw61nw4Ex98+gNeXbRKMfCSnpGFvIIC9B0xBU8MvdcHvNz98CS+pIkRTHat+WkTWPbNnvVvw2QyUcZL1H40qGN6U4DAi94iRv4SeKExoEcFCLzoMWrkM4EX9caAkcDLd8tfRp2aVX3E/fvICUx4aTGeGdkX761aizPn0vkqjfUbt2POwo95tkmH1k0wcUx/NGlYG2t/3oIly7/xaaNxw9qYOm4w2IqM1xavwjc//Ma3u7iv17W485ZreDLAV2s34uffdyIlKQFfrt2IZpfVxWODeqNz++ZBg91nxBTUqFoJsyeP8HnudLrgcrlgs1mL9JFVYPWH9uuJDX/sxl8Hj3H/2CqUa7u04304dvw07u/VHSMG3sH9oytQAc2Bl517D3EAEh8Xi+7/1x6pFZKxecc+HuCZE4fjlus646kX3sS/Zy4outSIScNSxkYOutMHvHS6eRgfWNJ+MnsPHMU9Qydj41fz+UCnpUb0sSIFtKEAgRdtxIG8CF0BAi+ha0UltaMAgRftxII8CV0BAi+haxVuyUiAF1d2DvIPHg7XtVLXN8fHI6ZJw4B60lIj9sW8tETHbrPivl7dsfuvw7h/+AuoVqUi7rrlasTGxuCa/7RFr4cm8C/yr/5PG7z/yfd8frvmw1eQlZ2Lf06e4TbOXUjnX/Cz5Uqs7ORXlvE58JhH7uFf+D8/axnfjoMtD1r20XeY+eYKPHT/zfi/K1rj2x//4MkLqxY9H+Av26e07XWD8eoLj+GGqzsG1YEBo6J8jI+LQctuA3k9tjKlZvVK6NHtClx/7xNoVK8mhvXvBVZm7JQFHOx07dym1FoboYLmwAsTffe+I3hj2efYsnM/2B4rjAbee/u1uO/27nzj2yNpp3g2TK3qlRWNkT94cbvdaHXtQ3jjxTG45sq23Nahoydw+8AJ+OGjWahRrRKych2K+qCFxmLtZjicbv6PLlJALwokxFqRk+cAjVq9RIz8tJhNsNvMyM13hi0GG/eB28KH3Sw1QAoEKMDGLPv7qNBBv21peOhHgfgYC/IKnXC59OOzXj1NjLMq7nren/tx/LHxirdbUoOxLZqg9vwXA4pJ4KVTu2ZIiI/lzxPiYvHyxGEe8LJp9QLPs7lLPsE3P/zOV26w6/zFS7i69yi8Pv1xXNulPb/H4MiwcbPBTvGdN/Vx5BcUouNNQzHh8QfRvtVlvMynq3/B6XMXMXfKKA5e/rd5N9hyJ3ax+XHP/s9i45fzkZKc4OMzy7q59u7RWP7GRLRt0Shot0vykYGXBTOeRNfOrT312T2WzdO+VWN+b9y0hahcMQVjR9xfkrSGfK5J8FJekSgq42XaM0Nw4zUCHfTPeLmUU1he7kbMblyMFQ6HC4VO+r9TxESmhhVXgH0LG42fR8WFogY1o4DFbAYD3dl54QN8txswEXnRTGyj2ZFYm4UD7vzC8IFhNOtEfdOWAolxNv7ljIv9sqQrogqwv8eUvrSa8RJsqZGU8SJtS8G0eGb6W1wSdkiMdHW/ZwzPaulzx3X8lgQ+Vr41ma+qkEBK88b1EBvjXbpTtXIFfrqvP3iR4Mq6j2ejehXvvjOsbSnjhWWjsEyVYFdJPvpDFtaG/71pr70Hh9OFSU8MUHoIREV7mgQvjPCtXvc79h/6B7l5+ahdowpuuvaKgDV0SkcgGHhhe7ww20P63srN0R4vSqtO7ZECyihAS42U0ZFaUU8BWmqkntZkSTkFaKmRclpSS+opQEuN1NM6EkuN1PM+NEtSxkuo4IVtYLtxyx58tnQqN5Cdk4crbhnGl+UwEPLTxh14dPyrfJkQAy3sysjMRpfbHsXHb01Giyb1AxwrDXhhle975HlUq1qRZ8vILwZlXE4XXlv8SbE+EngJbWwUV0pz4OXchQw88OhUsAHNLrbXC1tuxC5G96S9VsLvurcFNuDcLjdPz2KnKfW8/kq+wRC7Fn3wNVZ9/TM/1YitXWMpYHSqkZLqU1ukgDIKEHhRRkdqRT0FCLyopzVZUk4BAi/KaUktqacAgRf1tCbwIuzxIs94+W3Lnxjy1EwOWrp0bIV3P16DN975Aj998irfQPfmB57G04/2Qe+bu/JAsYxYtoRp0JgZKHQ4+RKmyqkp2H8oDVt3HcCAe3qUKuOFtcmOkh785MsYdP8t6H/PjTyL5q+DaZi14CN+qlFmZk6RPlapVCEgu4W1SRkvpftcaQ68THx5Kb5bvwlvvDgabVo04uvcDqed4oOC0cAt372l+E7JbBMjlskiv75+90UOWBiRZJv5/vL7Tv6YHbU1b9rjYGle7KLNdUs34Kg0KRApBQi8REpZajdSChB4iZSy1G4kFSDwEkl1qe1IKUDgJVLKBrZrePCy7wjuH/a8D3hhKr357hd4felnXDCWWMCWHV3XtQMWvPsl5i391EdItjHvjx/PwemzFzF51jLPPJQVeuTB2zBq8F1YtvI7bNy8B2/NfIrXZaf/drtrNK/H6ge72MlKL81b7klwYGVu7t4Z40f148dgF+UjKxdqxovT5cZ/x/RXb8DpyJLmwAtb78YyTp545F4fGff9nYa7hvwXHy2cVC7njLN0r8JCB6eN8ovAi45GO7ka1QoQeInq8EZl5wi8RGVYo75TBF6iPsRR2UECL+qF1Qjgpaxq5uUXgK3uqF41FVaLJeRmWL2MS9molJpcqnpFGWCJBZcys/m8VlrlIZUtq48hd8bABTUHXnoPeg5tW1yGyU8JR1ZJ16bt+/DQmJfKDbwUNUYIvBj400Nd15QCBF40FQ5yJgQFCLyEIBIV0ZwCBF40FxJyKAQFCLyEIJJCRQi8KCQkNRN1CmgOvMxeuBJLPlzNwcsV7ZqjQkoiX8u28N0vcfL0Ofy46lXYrKETwkhHjMBLpBWm9kmB0BQg8BKaTlRKOwoQeNFOLMiT0BUg8BK6VlRSOwoQeFEvFgRe1NOaLOlLAc2BF7bB0OMT5+LXzXt8lGTrzl6bMgodWgvnhGvlIvCilUiQH0ZXgMCL0UeA/vpP4EV/MSOPAQIvNAr0qACBF/WiRuBFPa3Jkr4U0Bx4keTbvucgDh4+jpzcfNSuWQVdOrbkGxFp7SLworWIkD9GVYDAi1Ejr99+E3jRb+yM7DmBFyNHX799J/CiXuwIvKinNVnSlwKaAy/LP1uHGtVScW2X9j5KHjt+GouXf8N3XY6LtWtGZQIvmgkFOWJwBQi8GHwA6LD7BF50GDRymTJeaAzoUgECL+qFjcCLelqTJX0poDnwMnLCa2jRtD6G9+/lo6R0RNZnS6eiScPamlGZwItmQkGOGFwBAi8GHwA67D6BFx0GjVwm8EJjQJcKEHhRL2wEXtTTmizpSwFdgBeH04nV637Hs9MX4edPXws40rk8JSfwUp7qk21SwKsAgRcaDXpTgMCL3iJG/jIFaKkRjQM9KkDgRb2oEXhRT2uypC8FNANeut4xEhfSM4tVr0e3Tpg9+VFNKUzgRVPhIGcMrACBFwMHX6ddJ/Ci08AZ3G0CLwYfADrtPoEX9QJH4EU9rcmSvhTQDHj57NsNYCcarfh8HapXTUU32R4vNpsFHVo3QaN6NTWnLoEXzYWEHDKoAgReDBp4HXebwIuOg2dg1wm8GDj4Ou46gRf1gmc08OJ2u3HuQgbiYmOQmBCnntBkSXcKaAa8SMrt+PNvWMxmNG9SD1aLxSNoZlYOrFarpjbWZc4ReNHdmCeHo1QBAi9RGtgo7haBlygObhR3jcBLFAc3irtG4EW94BoFvGRl5+K1xavADoaRrnq1q2HEgDvQ84YrVRF83LSFGNL3VjRuoJ39T1XpuE6NaA68LFv5HWa+sQJrPpyJ2jWqeGQd/swcsA12Vy16XlNSE3jRVDjIGQMrQODFwMHXadcJvOg0cAZ3m8CLwQeATrtP4EW9wBkFvAx5aiZO/nsO054ZgpZN6uPshQy+J+mf+4/i1RceU0Xwlt0G4u05z+CK9s1UsUdGwlNAc+Bl0JgZqFenOiY9McCnZzv3HkLfEVOw7uPZqF4lNbxeK1ibwIuCYlJTpEAYChB4CUM8qlouChB4KRfZyWiYChB4CVNAql4uChB4UU92I4CXXzfvwdCxr+DTJVPQtFEdH3Hz8gsQG2PHe6vW4u2PvsXpsxeRWiEJfe64DsMH9ILJZMJLry9H3VrVkJGZhY2b/+TPnE4n2MqPti0b4evvf+NZLE88ci+WrliNDz9fh8ysXFzXtQOefewBpCQnYPbClVjy4WqeqFAhORG9b+mKqzq14m1v2r4PsTE2XHl5S0wdNxh2u029AUCWilRAc+Dlln7jcO9t12LgfTf5OH3mXDquvXs0Vi6cjJZN62smpAReNBMKcsTgChB4MfgA0GH3CbzoMGjkMp1qRGNAlwoQeFEvbJEAL5fy87Ht1Cn1OiFaSo6JQYcaNQLsLl7+DT5d/QtWvz+jSJ/W/rwFVqsFdWpWwT8nzmDkc3PxxotjcM2VbcFWcvzy+0706HYFBy2tmzXErr2HMPPNFWjTohGu73o5alSthOzcXLw8fwXGjrgfNaqm4rXFn6Bm9UqYO2UUDh45jjseeg5PP9oHLRrX43ukTpnzLiwWC0Y/fDcuZWZj1Tc/479jBiAhPlZ17chgoAKaAy+Pjn+Vp219tnSqj7fSEqRfPpuLShWTNRNLAi+aCQU5YnAFCLwYfADosPsEXnQYNHKZwAuNAV0qQOBFvbBFArz8dvw4uixZol4nREtX1q6NjYMHB9hlgOOfk2fw1synivXp0NET2HvgGM5eSMfbK77FkAd6YsA9PTh4YZkyDJBI17KPvsOanzfjg9efg9ls4rf7jJiCZpfV9awE+WHDVjw+cR42fjmfZ734LzXq99g0VE5NwfhR/VC1cgXV9SKDxSugOfCyfuN2PDb+NXTt3Brdr+rABw9L5/py7UZ0bNsUb740RlMxJfCiqXCQMwZWgMCLgYOv064TeNFp4AzuNi01MvgA0Gn3CbyoF7hIgBc9ZrywJT9suVH3q9rzbTTY/i8P3nUjHrr/Zg5eOrRujIcf6OkDXv63eTcWvzLWc6/rHSP5cqPeN3fl906dPo/r73vSs8TJH7ywJUbPTF/IlzexJUhDHrgV9/Tspl7wyVKxCmgOvDBvV365HjPf/Ag5uXke59mgnfTkQA5itHQReNFSNMgXIytA4MXI0ddn3wm86DNuRveawIvRR4A++0/gRb24RQK8qOd9aJY2/LELw8bN5oe+NG9cz6dSTm4+cvPycXXvUVg6Zxw6t2/Onw8bNwud27coFXjpPeg5XHVFazw17D7exm9b/gTb1Hf9qld5RgsDL0tmP43/dGjh8cHpdOFI2il8v2ELXl/6Gb5+90U0qBu4XCq0nlIpJRXQJHhhHcwvKOTr4Rh8qVOrKiqmJCnZb8XaIvCimJTUECkQlgIEXsKSjyqXgwIEXspBdDIZtgIEXsKWkBooBwUIvKgnuhHAi9vtRv9RL+LMuYuY8vRgtG7eEGfPX8R36zdhz/4jmDpuCK7sOYJvbHvjNZ2wZed+PPXCmxgxoFepwAsDJ59++wteff4xVKuSiqmvvotTZy7g47cm80162aE0ndo3w5C+PZGTkwe298zdPa9B3VpVse/vNNz98KSgcEi90UCW5ApoErywwXz0n3/x75kLaFivJqpVqYi0E6cRHxdLGS8qjN+KSXbk5TuRW+BUwRqZIAWUUYDAizI6UivqKUDgRT2tyZJyChB4UU5Lakk9BQi8qKe1EcALUzM9IwuzFq7km+xKV73a1TBiwB3oecOV/MQhdvIQuxrVq8mTCtjpRewAGbbU6PI2TTCk762eumw/042b9/jsG8MSEMa/uBjf/7KFl2Ptz5s6Co3q1+Lv123Yhsmz3saF9EwM798L+w+l4cdft/NnbP7ct/f1PjbUGwVkKZgCmgMv2Tl5PHVr2+4D3N+Xxg/FbTd2waiJc3E07V98+c50TUWSMl40FQ5yxsAKEHgxcPB12nUCLzoNnMHdJvBi8AGg0+4TeFEvcEYBL5KibGkP2zw31m5HhZREH6HZvPZSVg4/kSicKyMzG3l5BRym+F/M/sWMTH74DMuCYcdZX8rMoc11wxE8QnU1B15WfvUT5i35BE+P6IP3P/ke/e66gYMXtlnQQ2Ne8qxpi5AepW6WwEupJaMKpEBEFCDwEhFZqdEIKkDgJYLiUtMRU4DAS8SkpYYjqACBlwiK69e00cCLesqSJb0roDnwwjYRYmeaD+t/O4aOfQW33dCFgxeWQsV2dl6xYBJaN2ugGd0JvGgmFOSIwRUg8GLwASB233X0GFzbdsH55164CwsBk3AkI9gP9lp8z74VYjfd/LF4Xyxj4oWl8sJPNy8jvPZ9Lt5nd00Q2xPryurwem6vD8yuxWyGzWZBXqFLdCvQLmuQleX+evoi+csb5M+EfsjsevwXvZXqm82yvgk+Cx2TdPDtr2BX1rbnvcwfuV2ZzkLTQjm3n+9Ck0Xp7A7eX6G3Ynt+/ZViI8ZVihW3K+ru7YtoVzyuU3DDG1+PzrJx4WNXsiEbI9J48rbFxow4XgI0DO67rx6CP5JdQcNAzYTo+vrutStJLBvfrAmbPaxfFgRewpKPKpeTAgRe1BOewIt6WpMlfSmgOfBy+4DxuOPm/8Og+2/xAS/sHPTbB07A2hWvoFb1yppRmcCLZkJBjhhcAQIvxhwA7pxcuHbthmP7Tji37mCLrmGqUR2mihU0Lwib91ssJhQ6+FRZncvFbLkFGOEWX/OXog/sp5sjKeG5+N7teS/WYxSJlXO7vXVZD8TyAnUQ6rNbrBwnT5Jd0Z6vXcEHXlZu19/fALsMrnjrcCMMutEVMQVMdhvcnAjKgaYAzDjs8geaImQTQJII9/xhXABYZEPIC+0E3iUHTdJ7AUx67Aqk0uubB9jJQKAcpEp25QCWQ1kRD3rslg7gCpjM15dQAS7/9AT0V2jLH+B6wbEEUkVAJ9cgRIAbYJc3JdplryVwWyTA9QXdUn9DArg+cfCzWxLA9QPsgl1fgJuSEIOsfAecLvZUBnCD2PUBqdLYCgZwfaCqpLsv5JeDfaMAXAIvEfvVSw3rXAHNgZcpc97F/zbtxjtzn8V/X17KM16u63o5xk55E7v2HsJPn7wGi0X8xk4D4hN40UAQyAVSAACBF+MMAymrxbFtO1z7DgA2G8wtm8N6eTtYLm8HU9WquhCDlhppPEyFBb6ASmQ7DPLw6aUfrGKFBUDlhVp8kixCIZ9nUl0ugR808sArCYaJYMzfrmSLWfWpI7Qn2fb3yaO6P6ySOJwE5Hgzom98Hiv4E283w+UC8goc3ucy0OZj1wPjZHBRgnVuNg2V9V20KzQlie2169VR9lxmV5DSDyzKdfb0Rw4WRf25hr52eSdlvvj7JcWN80SPXRkElIQW+ysAkyD99bHrjZtkmwOYgFgJ5YTuBQJN4a7Xlr/OASCV5fRJbQWAWLF9+ZjXIcBloNvF/JaNEV9wTABXqd/Il63/RKmmqB1SIKoU0Bx4YZsD3TXkvzh99iIXunaNKnyZEdvV+fXpj+PaLu01FQACL5oKBzljYAUIvERx8HNy4dy5C85tO3lmC89qqV4Nlg4CaLG0ba3LzhN40WXYDO80LTUy/BDQpQDlttTIgAC39tUddDlGyGlSINIKaA68sA7n5hVg5Vfr8ee+I8jMzkWDOtXR+5auaNygdqT1KHX7BF5KLRlVIAUiogCBl4jIWm6NerNadsB18CBgtsLcspnuslqKE5DAS7kNLzIchgIEXsIQj6qWmwLlBl7KrcflZ5iWGpWf9mRZ2wpoErxoWzJf7wi86Cla5Gs0K0DgRefRZVktu3bDuWU7HDt2iVkt1WFu3wa2y9vB3Ko5YLXpvJO+7hN4iapwGqYzBF4ME+qo6iiBF/XCSeBFPa3Jkr4U0AR4YWeTs/1bQrmu7NgSVosllKKqlCHwoorMZIQUKFEBAi8lSqS5AkGzWlo1h7VDW13t1VJWYQm8lFU5qleeChB4KU/1yXZZFSDwUlblSl+PwEvpNaMaxlBAE+Bl2+6DeHDktJAU3/jVfKQkJYRUVo1CBF7UUJlskAIlK0DgpWSNyr2EtFfL1h0+WS0WEbRYWjaLuqyW4jQn8FLuI5IcKIMCBF7KIBpVKXcFCLyoFwICL+FrveanzejYtikqVUwOvzFqQTMKaAK8sD1d0k6c9oiy98BRPDdjCZbOGYcKyYk+Yl1WvxadahTh4VMxyY68fCdyC5wRtkTNkwLKKUDgRTktlWzJ5wSig38Le7UYKKuFwIuSoyXRqf4AACAASURBVIna0oICBF60EAXyobQKEHgprWJlL28k8HIk7RR69n+WHwaz5sOZZRfNr2bLbgPx7tzxuLxNE8XapIbKXwFNgBd/GbbuOoD+o6bjl8/map70UcZL+Q9i8oAUYAoQeNHIOAiW1VKjOiztheVDRstqIfCikXFJbiimAIEXxaSkhlRUgMCLemIbCby88c4X+OK7/+H4qbNYsWASWjdroIjQBF4UkVFzjRB4KSEk6zZsw6iJcwNKbVu7CDF2Gwi8aG5Mk0MGVYDAS/kF3nXkGFzbd8KxbQdcB/4GrOwEoubCCUQd2sJUtWr5Oadhy7TUSMPBIdeKVIDACw0OPSpA4EW9qBkFvLjdbtzU92kM6387vljzK5o3rodxj/bxCN1nxBRc1bEV1v1vKw4cPo7bbuyC/44ZgPi4GHy1diPWb9yBhPhYfLd+E1IrJOG50Q+ia+c2vL4cvLCVIa8tXoVvfvgNFVOScF+va3HnLdcgLtaOf06ewUuvL8em7fsQG2PDlZe3xNRxg2G3R9dhBOqN3shaIvBSgr4/bNiKZ6cvwqpFz/uUrFurKkwmE4GXyI5Pap0UCFkBAi8hSxV+QTGrhYEW53bxBCLKaim1rgReSi0ZVdCAAgReNBAEcqHUChB4KbVkZa4QGfCSBWBfmX0qe0W25UWzoNV37j2EviOmYOOX88HmiwyA/Pb1fM8hMAyetGraAIP73oqz59Px6qJVGD/qAfS+uSuWffQdZr65gkObNs0bYeVX6/lBMxs+nxcAXia/sgx/HTyGMY/cw+eez89ahuH9e3GQM3TsK7BYLBj98N24lJmNVd/8zOEOAzp0aU8BAi8hgBc2wKUPgn9xynjR3qAmj4ypAIGXyMY9aFYL36uFslrKqjyBl7IqR/XKUwECL+WpPtkuqwIEXsqqXOnrRQa87AIwqPTOhF2jNYC3g7Yyfe4H+PfsecydMgrpGVm4qtdjeGvmU7iqUysPPHn/9Qlo36oxfz/ttfeQmZ2Ll8YP5eDlf5t3Y/ErY/mzM+fSce3do7H6/RmoV7uaJ+OlRZP66HjTUEx4/EG0b3UZL/vp6l9w+txFbrffY9NQOTUF40f1Q9XKFcLuLTUQWQU0AV7+3H8UI597zdPTwkIHLqRnolqVigG9/+LtaUhKjI+sKrLWGcF8fOI89OpxFWJi7HyH6R7dOnloJoEX1UJBhkiBYhUg8KLwAGFZLTt2wrF9p29WCwMtbL+WVsY6gUhhdXlzBF4ioSq1GWkFCLxEWmFqPxIKEHiJhKrB24wMeNFWxgubq3a5/TE0rFsDLZrW50J8/f1vuK5rBw5W2MUyXuTgZcUXP+LtFd/yTXj9wQsr3+nmYZg6bhB6dLvCA17YEiS2eS9bxhQbY/cIziDL7MmP8iVGz0xfiNNnL/INfoc8cCvu6dlNvWCTpVIpoAnwwk40evuj70Jy/OkRffiaNrWu3fuOYM1Pm/gR1idPn8fKL9ejb+/rOHlkV2ZuoVquqGYn1m6B0+FGoculmk0yRAqEq0BirA3ZeYVwh9uQges7Dh1FwZYdyNu8HYX7DgI2K+xtWiC2UwfEXNEB5qqVDayO8l23mE2IsVmQk+8Iu3G32wSTiUZ/2EJSAyUqEGO1wA03Chz0N0KJYlEBzSiQEGPlp3W63PR7MtJBSYqL/v1Ffv5tJ0Y8OwePDrzDI2fayTN875bN3y5AfFxsAHiZ+PJSvifLslefCQAvJ/49hxvvf4o/69SumQe8XNagFrrc9ig+fmsyWPZLsMvpdIGdrvT9hi14feln+PrdF9Ggbo1Ih5naL4MCmgAvZfC73Kqw9C72wdm5bgnPesnMCf8P5nLrTBGG42IsKHS64HDQ/5y0Fhvyp2gFkuKtUfl5jGTM3Tk5KNi6E3lbtvOfrovpsNSqgZiO7RHTsR1srVvCZLNG0gVDt22xMPBiRk6eM2wdXHDDDFPY7VADpEBJCsTYzWBz14JCAi8laUXPtaNAQpwVufkO0HeKkY8J+3ss2q+npyyA2WL2ZLew/ubk5vGslZkTh+OW6zpzeDL5qYG49br/YMMfu/HcjCV4cti9uL9Xdw5evljzPyx8+SnkFxRg/rLP8eum3Vi7YhZPMJBvrjtozAwUOpx4eeIwvqxo/6E0sBOAB9zTA7MWrMTdPa8B23t0399puPvhSXxfUpYhQ5f2FCDwUsqYsA/OsHGzsHXNWzzli5YalVJAKk4KREgBWmoUmrCuw0fhYkuIGGg5KJ5AxPdqac+PezZVoayW0JQMvxQtNQpfQ2pBfQVoqZH6mpPF8BWgpUbhaxhqC5FZahSq9ciXkwDLGy+OwTVXtvUxyIAM28flzZfGcHjClgqx7TPYxVZMjHusL//iXtpcV6rMlgnNnDgMbVo04rdY3ffmjUeH1k34MqLJs5bhl993emw98uBtGDX4Loyc8Bp+/HU7v8+26Ojb+3oM6Xtr5EUgC2VSgMBLCbIt/2wdmjaqw9O7MjKzMPaFBbBZLVg6ZxyvSeClTOOOKpECiitA4KUISbOy4dy1mx/17NyxG0jPgKlmdVjai3u1tGzOlxTRpb4CBF7U15wshq8AgZfwNaQW1FeAwIt6mkc7eAlVSWmPl4Z1ayImxuazR4u0x8ubL47hoIYBmpKuvPwCZFzKRqXUZM9eo6wOu38pM4c21y1JQA08J/BSQhBmL1yJJR+u9pRiJJIRSUYmCbxoYASTC6SAqACBF1EItxv8BCL/rJbWLWBlsIWyWjTzmSHwoplQkCOlUIDASynEoqKaUYDAi3qhIPAiaO2/ua48AsE211UvQmSpvBQg8BKC8owksvPXkxLiUSGFnefuvSjjJQQBqQgpoIIChgYvsqwW1/ZdcGdc8ma1sFOIWjSjrBYVxmBpTRB4Ka1iVF4LChB40UIUyIfSKkDgpbSKlb08gRdBuy/W/MqPlmb7svhfBw4f50uIunZmx1XTZRQFCLyEGWkCL2EKSNVJAYUUMBR4kWe1bNkB19+HAKsVZspqUWg0qdMMgRd1dCYryipA4EVZPak1dRQg8KKOzswKgRf1tCZL+lKAwEuY8SLwEqaAVJ0UUEiBqAcvwbJaatWApV1bWCirRaFRpG4zBF7U1ZusKaMAgRdldKRW1FWAwIt6ehN4UU9rsqQvBQi8hBkvAi9hCkjVSQGFFIg68MKzWo7CuX0XnFvFrBabDWZ+AlE7DlvoBCKFBk85NUPgpZyEJ7NhKUDgJSz5qHI5KUDgRT3hCbyopzVZ0pcCBF7CjBeBlzAFpOqkgEIKRAV4oawWhUaDPpoh8KKPOJGXvgoQeKERoUcFCLyoFzUCL+ppTZb0pQCBlzDjReAlTAGpOimgkAK6BC9FZLVYWrWApYOwhIiyWhQaIBpshsCLBoNCLpWoAIGXEiWiAhpUgMCLekEh8KKe1mRJXwoQeAkzXgRewhSQqpMCCimgG/DCslp27oJj2w64duwWTiBie7W0b8eXEJmbN6UTiBQaE1pvhsCL1iNE/gVTgMALjQs9KkDgRb2oEXhRT2uypC8FCLyEGS8CL2EKSNVJAYUU0Cx48clq2Q7X34cBmw2U1aJQ4HXcDIEXHQfPwK4TeDFw8HXcdQIv6gWPwIt6WpMlfSlA4CXMeBF4CVNAqk4KKKSApsCLPKtl+y64L2VSVotCcY6mZgi8RFM0jdMXAi/GiXU09ZTAi3rRNAJ4OX7qLHr0Gesjauf2zTHpyYGoV7uaemKTJV0pQOAlzHAReAlTQKpOCiikQLmCF5bVcviIcAIRW0Ikz2q5XDyBqHIlhXpKzUSLAgReoiWSxuoHgRdjxTtaekvgRb1IGgm8vDdvPGpUrYQL6Zl4YfY7qFq5AuZNe1w9scmSrhQg8BJmuAi8hCkgVScFFFJAdfBSQlaLpUVTuK1WhXpHzUSjAgReojGqyvSpwOkKbMjtvSW9dLu9N733TLK64t0S6gLyOkJ1qW237BEzlxRnhdPtRnaeQywnlPexGsQveQm535KzUhU3ZH2S3PdtPEAbmTnPM08rPn0X3rhlnSpOS1OQuj79EK3JfZbcl1X1aimPTHAHxRLeDkttB+2j3D/RWXk5rwm5N8XEWhZFbztB4uHTD1FT2T2TvB1ZPIuLdWl1CzLKITflr1tKgh2ZeYVwutxsAASME1/dpOfywS9+LuSjL/Dj5Ym1TzHPOA7U0u+T4/OZ8m0j0Ofi+svHeZBfR8E/K4Elg30eg8co0Mjw6xsq84tQw61IGS/fLX8ZdWpW5Z5Oe+09nD53EXOnjOLvx01biI2b93Ao06heTTz6UG/06NaJP3vp9eWwWi04dPQktuzcj2u7tMPIwXfyttIzsjD82Tn4+8gJXrZl0/p4duQDaNqoDn/fZ8QUXn7tz1tw7Php3N+rO0YMvANxsXbeFgNAp85c4GVZuQmjH0RKUgLy8gswa8FH+G79JuTlF6Jty0aYMKofGtStoWGlo8s1Ai9hxpPAS5gCUnVSQCEFIg5e/LNaDh4C7HZYWrf0nkBEWS0KRbNszZxMz0Xa+VwcPZeD4xdz4eB/YHvb8k6OZJOaIJMf7x+csrriTZ8/T4PV9VQJnDj5+gKYTSaYzUChQ5hkB5s4e3wO9he0TKZgPkuTC/+Js2Ar2AQgSIP8ltCXYBNJeaSKnTjLmw46HRD1KmFCJHkR6sQ5qCmZL0EBR9mGn2FqsXHL4sA+XnQZTwG7xVx0p2WcQnpp4uNFuLz3AkGQrJgX28hvBvkwS4BHDmGkKnL4w+5ZLWY4XS4Pc5H88sVQMr98bIv+i4X92+Z98+mSUDCYX0HF89FNrCtrsDgt5Ua8fnmdCVTf65ivf8X5LGvF81JuwyMM797cB9sq/sHIz7+EU6e2Kd5uSQ3GxCSjRo0OAcUk8DJiQC9USEnCyX/PYeVXP4FlwDS7rC4v/8Gn3+OyBrVRqUIyfvptB+a89TE2fjkfKckJGP7MHA5JRj98Fy8ze8FKdO7QHE88ci8yMrPx2bcb0KFVY9jtNiz9cDUOp53CqkXP83ZbdhvIQc6w/r0QHxeDsVMWYPbkEejauQ327D+Cg4ePo3njesjNy8ekmW+jW5d2vN3Fy7/BOyu/w+vTR8NiMWP9r9vxnw4t0Klds5JkoOcKKUDgJUwhCbyEKSBVJwUUUiAi4CUzG46dO+HcthOuHbK9Wjq0h5Ud99ycsloUCl+pmzlxMQ/HLuQg7VwOBy3sH5tEx9stqFcpHvUqJyDGGvjNrvePcpnJYv6Yljsm/2PbM5EINCGbXHhre+rKylvNJsTFWJCd5wzov/xvflehlP0g+0NX8llGVYLMEzztBp2YyIlMkD+mPX0MlAowySZfolvB5kjBJlOsuDSnCBqPoPZkN0W/g07U5MXEiZpP38XoBNMjyLzJdzIVpK4HBPn5HOCbGwgWH4Fh+H+77hdn/jbI5FWWlRJ0EinwEX4FG39wS+MqcLYsn0T6T27jY61wu13IzXf6ZrnI515+UMZHD85DfQXxTiyD+Oz/6XC7IZ/MS53kbQQbiz71mfHASaRv3SAfauYxsxskM0jkUKIVadIs++zzBAtfnyUL3BU/rexmX/vBsoM8n80SgWzZ6VhxdksCmsXWlcUp2C/+SNVNTbLjUnYhnM7gmkTKLu9jMWHwyZYKKkjR/3sMx2d51k9QC8X5XMKwuvz2JqX+f3pJFY4f/w1LlnQpqZjiz2vXvhKDB28MaFcCL107t0Z8XBzyCwqwafs+/KdDc8x4bhgHIk6nC/sPpWHf32k4cy4d85Z+io8WTkKrpg04eOnQujEefqAnb/uTb37B+5+sxWdLp/L3uXkF2PXXIRxNO4Xd+45wEPPnT8v4MwZe3n99Atq3aszfs8yayhVTMHbE/fz92fPp2Lb7IM6cu8izYpKT4jF/+mi8vvQzfPX9RsydOgpNGtb2+z2quHTUYBAFCLyEOSwIvIQpIFUnBRRSQBHwEiyrJSbG9wQiympRKGKhNcPSwk9l5OPY+WwcPZuNtAt5OHY+BwUOFxIsZlSzmVC1wI0KF/MQl5YO05GLyEq7hMy0jNAMUClSgBQgBUgBUoAUUEyBSe5JirUlNaTVjBf5UiO2ROiG+5/C1HGD8X9XtMawcbM5dOn+f+35PjCLPvgaH74xEW1aNAoAL2t+2oTZCz/Gmg9n8iVGD415CUmJ8TwbJb+gEF+t3VgkeGFLnBxOFyY9MQDf/vgHnnrhTXRo3QTNG9fFgcPHERtjw4IZT/LlRxNeXIQ/tv+F+LhY9LmjuydrRvGAUYNBFSDwEubAIPASpoBUnRRQSIEyg5cgWS3m2jVhbt+OsloUik2ozTDIcvJiHo5eyMaxs7k4fCoT/4iQJcbhQqXsQiSfyUbskXRYd51G7KV8n6bjqiYgqV4KkuqkILFuMiw2i+e5ia3pkV9+X2r7foPumyNe3DPWZMC34PIEAr80B3mSCct4ifXPeAnwS+Z0KXzmfhWXElJcekwJdUvUoxi7JdUNSAspRkv/5IPSxCGgbjFxCpCqFHEoqb/F+ewfQ/nYCYivMBB9h3gYcShu7CTEWvkyo9yCwEytksZdiXoUkQJVUgx8xk0p4hPw+S1tXZljYcXHL34h6xTkl6t/3dL4FWjXN7UhnN+TxX22lYxDUZ+DSskxSM8uEPZ48fl/QWDGl/S4xDj4rvMp+vNX0ueTJcUU+7tOuThYYiK/95yRNteVgxcW5lv6jUPvm7uiYd2aGDVxLjZ+NZ/vr8IulqkSCniZMf9D/HXwGJbMepovCdq59xD6jpgSEni5fcB43NS9M9gSKHYtXbEam7b/xcGLdJ06fR6bduzD1Fffw7Mj++LOW64O9c80KhemAgRewhRQs+AlPx8ocMBdmA8UFgL5hXAXFgAFBXAXOPhP8PfsfqHwnpUpyIcdTjhyC+DIy+N13QXic1ZGq4u6g+Zwi8H1/CEXmD7s/Z+q8Mz3DxQpb1qeP81nJJ5R403fLroMS07ml08udZDJmvAXq1g22B8CvinMPr56fCraD6ltTwp5EFveNoP54Z9CXYyvUttig0H/oPCPmc8kQWrbNwVf/keQp02xXmKsHdl5hb4ZvX59lI8At8sJ15/74Drwt7BXS5tWsLRvA0uHdjBVqRzmbwaqXpICLN37SFoGDhy6gMMnM5F2KQ9nHC4UutyIyS5A/IksJJ/MQtLpLCQy2JKZj9hKcUism4LkuhWQVDcZSfXYzxQkie/Ndi9oKcm+Fp7T5rpaiAL5UFoF6FSj0ipG5bWgAJ1qpF4UjARe2J4u1aukIjM7F+s2bMX8ZZ9jxZv/RXZOHgY/+TI+XTKFP/9m3e98891QwMv8tz/D+o078OZLY+BwOHmbxS01kme89HtsGho3rI0nht4Dthxq8ivLULFCIgcvbM8ZtvcLy7hh/vUe9BzGDr8fN3fvrN7gMLglAi9hDoASwYsINBjkEMCHg8MNDjTyRaDhD0AYDGHgRCzD67H6cgAiwhPhmQyO5OSG2SPAFB8H2KyA1QbY7IDdAhP7GRMTdtvUACkQKQVibGYUFLpKWnruNc82Nm1QH9YO7WBu0zJSbhm63cKsQmSmpePisXQcPZaBI2dzcCK3AKfNQHq8DW6TGTFZBUg6nc3/VcjOR60YK6pUTRDgCsteYWClTgp/bY23RZWeBF6iKpyG6QyBF8OEOqo6SuBFvXAaCbzIVWV7twwbcDuu7dIeLpcbT0yej+9/2cKLdL+qPX78dTuHMq2bN+RLjS5v0wRD+t7Kn6/5aTNmL1zJlxqxJUEjJ7zGs17YxfaR2fDH7mIzXlgm13/H9Mevm/fgmWkL+UlKbDkROwmJLVliEIdlv8xasJK3yZ7deE1HPD/2IVgt+vrSSr2RrLwlAi9hanp4+LNAfj7cDLDwDBMhqwSlBSAi4GCgw2RjwEMEH3YbTHY7244d4PdtMNmsMDEowu9bAbGMp55YjrVhlsrFiG1YrWL7NrGuaI/BFvGqmGRHXr6zyDTiMCWj6qRARBQo81KjiHhjjEadeQ5k8v1U0vmeKpnH0nHxnwycSM/DKYcbFxJtyKyaiOzKcXBbzIjNKkDF3ELUMJtQO8GORjWSUI0tC6onZLHYku3GEE7sJYEXQ4U7ajpL4CVqQmmojhB4US/cRgAvoap57kIGXy5UMSUp1CqecuykJHZiEtuotzSXw+kEW05UvWol2Nj8UXaxZ+cvXEKl1GQCLqURVaGyBF7CFPLYWys4wOAwRAY8BEAiwREGTUTAYfcCFZZRYoqLDdMD5asTeFFeU2ox8goQeFFeY1eBE1nHGVgR4MqlY+l849pLaexnBrIu5iGrajyHK5nVEpBZIwk5VeIBqxnJcKOG3YL6qfFoWCsFzZpVQuXqico7qeMWCbzoOHgGdp3Ai4GDr+OuE3hRL3gEXtTTmizpSwECL2HGq8SlRmG2Xx7VCbyUh+pkM1wFCLyUXkGXw4XsU5nIOibAFJaxwjJXJLiSezobbnFfJ5fVgsyaiShoWgm5dZORXikel+KsgMWMSnE21K+agMvqpKB+5Xh+nHNCDKWulhQRAi8lKUTPtagAgRctRoV8KkkBAi8lKaTccwIvymlJLUWXAgRewowngZcwBaTqpIBCChB4CSKkGxysyGGKAFcuIeufDGSduAS303tagsliQkLNJMTUr4DCxqnIrJ6Ei8kxOGs14ZzDBZhNqJYUg3oMrnDAEof6lRMQr7NNbRUacmE3Q+AlbAmpgXJQgMBLOYhOJotUwOly8YMJ3G7AzXZ54/+ZwG+wQxPYDxNQOSUGFzML4HC54XbzkmCHDQivvHWk/yN6yvBnYiO8PfaOtc//40+FxyZvWz6+iK6Ljkh1JL8kO8KRC4IlNzs9QPRR3gfJC1ZHuu/xX/TBt99Se3IfBZfl/nt8kbnKDiNgtUVTvN/CJXjp8UV0RNBf0Pqm1jVoxJICpEAQBQi8hDksCLyEKSBVJwUUUsCo4CX3bI5PpkrGsYscqmQeu8TBClsu5LlMQHy1RL5hLTtume2rYq9bAZcqx+F8vBUnHS4cv5iHUxl5vEqNlFjUqRSHBh7QEo842RHNCoXOsM0QeDFe6EOdJPpMtjQ2SYyPsfIJVm6+g08Q+WTLZ5LoFiehwmF+nomlfJLrd6KvMPETJnnS5FmYyAafJMpPymN1fOyINoWq0vRRLCM9k00S2XGG3kmlNFEXJ9c+bQFuNsmXJvPSJNUzxxc7xdr2tC9N0IW+eafm0qTdwwe8/fazKZxIKGkjM861F6a//rBAcE2CEJ534i3JF1Fr8fQ/3zh5wYXca098xLB4ZuVSzzwwQhZ3cTLumej7gQuuvUk4I9Ih6huJ3wwWs4lveOo39CJhSrE2rWaz5/PFwsRV4v95NROHOLfpPTxTPHNTqiONB1FnXlb+Wv454feFD5V4lqU4BNmnSRhrvr4I3RVOnXTznwOuaqCYBtQQKRBNChB4CTOaBF7CFJCqkwIKKRCt4CX/Qp6wp4oIUzx7rbD3aZfANriVX3GV4/mRyxJcSalXUXyfDGu1RBy7lIdj53Nx7FwO/3c6M5//EVU9OZYvE5KWCtWtFIdYHUKW3EIn8gtdKHA64fJMBsVvEjU2STSbTYiLsSAzp1D8szg6Jomeb2NlM1T+Da7/JFH2barnmfRNrmfeGDhJFIqIEyi/b7ejZZKo0K/FiDRjFidY4ipEjw3fSaJ84lf0JFGYrIkTPM8kUZwaqzBJ9EwtZRNUwSMBaJhYSoQwq/SZ1DLgIJ/kSp2QSond8pYRIZB8wiq1wctKjXGbQiaGdHnaMpsDbPJpsFuo4y0vNiACKT6BFv335m1IU2hpwiy4wMpJE2tPe0L4BD2kYEmTcpF6sSfCsPD1RZROlEeCBjI74u8I33Eg2GHaS+BM8k3kDV5fvDc8vnl8kUqJPlZKjsGlbJbxIvyWkGwKeE7stwcgSGNSphMrI/ab1/XoIgwXTwx8wIWkixsWszkin0ctNkpLjbQYFfJJCwoQeAkzCgRewhSQqpMCCimgV/BSkFnAN6rlG9f+k4FLRzOEn+J7diSz/LJXiOGZKhJcSa5XQYQsDLYkwxonHLmcledA2oVcHD2XgyPnspF2PhdnM/PZaiHUqBCLeqnxqF8lAfUrxYNBFpZ9obWLQxSHCwUOJ/LYz0IX8p1O5BWw+07kOdkzF/LEcoVO4dvoUK6IThKlSYhneiCfvHm/STSbzbBaTCgsdBb/TaI02ZG+f4ziSaIwCRUmXtIk0ftONkkUNZBPEvmkMJRJojSJlk8S+USKTcaE0eMzeZMmoz7tyyZmJvn0UHjtOzGTpuPe2Zk0gS1qkiif5GptkkhLjUL5DUNltKYA7fFSfEQKC7PgchbA5SqA08n+5cPlLITTVSDez4fTWSg8d+SL98X3rCwvx8oX4tYek7UWfvKHFNCEAgRewgwDgZcwBaTqpIBCCmgVvDhyC/nmtZkiTOHHLvMNbDN4JktBer6PArZEGxLrpIABFQZXkusxoOKFK/akwCOXs/KcOHIuB2kXsnH0bDaOns/F+awCsNTqmgyyVPLuyVK3UjzsFnUhC/vCMd/p4rCEZaPwnw7vTw5SnOI9Ea4woOIDnKxmxFgsiLGZESO+jrVbhNdW2U/+3IIYi9nnW2CFhpmizdBSI0XlpMZUUoDAi0pCkxlFFShP8OJwZMPp8EINAVIUeKAGgxweqMHhhy/08HnuyBPhSCAEESCJAEGcTgeczjyZHVae2RH8YJCEwZbSXhZLLCwWG8zmGJgtdlgsMeJ7O8yWGNhsCRg65OfSNkvlSQFDKEDgJcwwE3gJU0CqTgoopEB5gRe2hwqDKnzD2rQM8D1W+PHLbJ+VdOSdz/XpoSXWyjNTJLiSxDNWkgW4UicFManFHzF/Kc+Bo2dzcOx8Ns9k+ed8Hs5nF8BqNqFWxTjUTRU2vK1XOQ51UuNgUxiycIjCoInTKWagSBknAjgRsk+kTBUvXPGBa2OWywAAIABJREFUKBYTYmxWDkcYSLFbLJAgSqwHooiAxWaF3WKCsLwhui4CL9EVT6P0hsCLUSKt/X663U4PRHDwDA0JbgiQQYIbDHokxQEZWdkodHjvy597MzkE6FFi5oeYFSIHGU7RplC3kGeNeHfzKVlPk8ksAg0brBYBbJjNDG6IP60xsJgZ4BDAB7vPwAd7L9yP4eWtVm95oZxNLGcXywnPrVahPAco0k8PSBHBCrMvtmcyhXZaIS01KjnWVMKYChB4CTPuBF7CFJCqkwIKKRAp8MKPXD7BQIoXpvA9V8T3OaezfP6uMtstSKyVjKR6Akzhy4LY6zopYJAlrkp8yD1OzykUMlnOM9Ai7MlyMaeQL0+pzTJZ+J4sifx0odoVY2EtJWRhEKVAlonClu74ZKXw7BOHmKVSNESxS7DExjJNLIi1mgWQImaosAybGPaMZ6eYoxKihBxUWUECL2VRjeqUtwIEXso7AurZZxkTUiYGy6QQMioEoBAUOIhZHPwZBxO+2Rt8iYr0rIQlLL7ZG8GWuOTD7Q59eSlTTQAbXtBgEcGDPINDAB4MbIhQQwQPcrAhgQyhvjfjg72XAIYETLxgxAtSJDDCQIkEUli5UMGGeiOgbJYIvJRNN6oV/QoQeAkzxgRewhSQqpMCCilQVvDidrmRcyoLbNNaD1xJS8elY8JyIHYcs/zIZbPVzI9cZqcCMZiSXL8i/ynBlYQaSbKNEkPv3IXsQhGu5OLIuSwOWzJyHXxZUK2KEmQR9mSpVYGl+vpmgPhAFJZ5Iu6Nwpf2OF3CvihsOY+4HwoDLGw5j/yEB5YdI8ER9lPIPrEgRgZReJYKuycu+YnGTJTQoxZeSQIv4elHtctHAQIvyuguLPso9GRpeDI2+D4Zvtkbwn4b0tIU3yUjLJuDQQoGNaQsDflSFt8lLkUvYRHa92Z7uFy+G7eH0mt/sOG7FCUwg4JDCTGDw5vh4QUZVltskSAjlIwPIZNDACk1KqXgYpYDDqeezjUKRXXtlTECeDl+6ix69BnrEb92jSro0/s6DLz3pnILyJIPV6N2jcro0e2KIn2Y+PJSfLr6F8/z1ApJ6H9PDwzpe6tsw+miuzBu2kJetnGD2rwQ02H2wpV4eeIwWC2hZUSVm0AaMEzgJcwg6AG8FGTk85NP2F4Tjlzhp/DeAUdOIRyeZ4Vw5jphcTmRl1mAvKwCoWyuU6ibVwiXg/6HFeaQoeoRUoCBALb5asgj1OVGNgMux9IDPIqvkShuYMuyVoRMFWFDW+F9uBfbf+Xo+RyknWOb32bhyPkcsH1aGGRhy4PYniy1UmNRPSUGqfE2FPLlPSI0cbo9y3kYOGFgJc/pCOi7zSws4/GCFCHjJNYuLvGR4InFAruNQRbKRAk3rqWtT+CltIpReS0ooAfw4nYVQgAZ3iUj8n0zvJBCeF5UNoeQ7ZEvgxpCtod8fw457JAgSLDn8s1KmX9luSSw4bPHhmwpiH8GhbBERQAPwZaueMFG8UtX2FITbyZH0UtXzGZrWbqlSp3y3ONFlQ5qyIiRwMu7c8ejcmoKtu7aDwY1Xhz/MG6/8apyicaoiXPR7LJ6GDGgV7HgJTsnF2NH9EFhoQO/bt6Nqa++h4/fmowWTeqX6HfLbgPx9pxncEX7ZrzsXweP4e6HJ2HH94ths2n3819ix1QqQOAlTKHLCl4K2ZF2uQ44OQhxcKjB4UaOwwtJGBBhYISV46+FOhJA8cCUPKf4jAEV9lqow2yU9WIno1jjrLDEWflP9t4Wbwf8vmUva/tUjxRQWoHSghd26ghb9pNUL4VDFQZXEuskIaVRqqKunb6Uj8Nn2MlCWXxPlhMX85Gd7+DLhaokxSA1wYqKCTYkJ9gQazXxpT/+mSjsBB4OUSxmxEqbxzKIwpfvWPiJRAJgsfJyBFEUDWHEGiPwEjFpqeEIKpAYa4LDkY9L2TlBNwf1z5wIPCFFyswQoIejMK/IE1KK27cjcMmLd7PSsnffFLBZKAMO0h4XcpAhbCoq7JUh7ZHhv3SFvS/N0hVhT4+il65oGWyUXXN1ahJ4UUdnZsVI4OW75S+jTs2qXNxHx7+K1ArJmPL0IGzZuR8z31iBw2mncMPVl6NP7+vRulkDpGdkYfizc/D3kRO8Tsum9fHsyAfQtFEd/r7PiCm4tks7rP15C44dP437e3XHiIF3IC7Wjj37j2DG6x/ivXnjPcEcNm4WHn7gNpy7kI7nZixFbIwNNatVRuOGtTF13OCAoDM45Ha7Pc/Onk9Ht7tG45PFL6DZZXXx8dc/Ie34GTw57F5e99SZCxg9cR6WzH4ab73/FYSsmiqokJyI3rd0xaqvf+bwpXnjevzI9PGP90Ob5g2x8sv1eOfjNcjMysGdt1zNs4GqV0nl/Z7w0mI88//auw8wJ4r/DeDvptxd7oCjg6KgYkXFigXlJ1joTbAAItKEowooRRABEeSQoiKIIoigiIACijRFURQVe1cUUaT3dse1JP//dzabS3IdkiV3+64PTy7J7s7MZ3LIvpmZ7dcB85esxd79h/Ha8yPM+3Ce5pIYvBSyA+SDk+V2o1xi6aAjlg9ao8ISY0RIUJiiRpgEjzKR0SenssUkxqoQRBboVIFIvBOOuJwhibzmTJDXZV+7elT7xeshiv94X8Dify3egYoV45GW7saJDPepVJXHUsBUgZOdalSUSspomkzf3XhkKo8+jUdfA0We7zuShh2H07D3aAb2Hk3HgZRMFaLIwrdlXA6UibejfEIsKpdxqtBFTeVRi8sGr4li3KnHWGjWJveA5lbiBBi8lLguPeUG5b1YqHEnEmNaSSHvkKJu+5rfYqEBIUjoYqG+28oaC5Zm+e7KUpTFQnOCaEGLfwZOBckvyMhr8U9jTY3sYCT/qSv5rcGhRoZE8YiNU/5wWfwEDF7M+wBEJHhJT4N313bzGuErSYuNA87Qp9UEbsZUIyN4kWvENl1Hon7dK3FX8/poct8QFV7Uu7421nz0Fd5e9QnWLZqCo8dTsXTVBlx92QWIiXFizhsrVTizZNYYdXoZUVKzxplI6tQK8a5YDB47E1NG91bn+fK739B1YDJ+WT/XX5V6rfth7JBuKvh4eMwMVK9WGXc2qYdSCS71WugmwcvmLf+hVeObkZ6egdUfbcL551ZTQYx8ITnj1eX4/a9/8dzY/urQbTv2oMl9Q7Hx3enYu/8QWnd5DEP6tEetC2qgauXyKmB6LHk2Xp40GA6HHRfWPBufbvoJoyfNxZhHuuDc6lXxwrzlSCxdSgVSP/32N9r1egJVKpVD26b/Q1xcLLq1b2p6v56uAhm8FCCfeiINQ598ER9+9p3as3atmpj2ZH81rEy2MdoYOBPscMTa4XTZ4YizwR5n03+OtcEhoUecHfY4TT065T0JP2JtsMfa1HOHb19nvB32GHnu+yPnlPdjNch72VvIZApZ3CHPraB9A973naeUy4FMdcvX4EXLtNBJHDnKDSyrgAkfRTk2x77BF6Fa0Puh5RbU/kC4Ao4toP1Btcq3fVJmEepVpHMFnzfH5fopuYd8yHJ0cd79H9xHuXxYA+ulnVwflnY5cDw1M0Q21Dn4M52uuXACLpzQXEjT4pDmjUUaYpDmdeCEx4E0jx1pXjvS3DakuzWky+FeDfKQku5BSrobx05k4Uiq/MlEpturQpSqZePUuixnl5fFb12oluhCXIy+ZkpJDlGk/W6vFx6PPHrg9gBuT8hz3/vy14vH6/Ht69X39Xrhdrt9j/pz2cf/njqXB26vBrc8ynM5RpVnlONV/cCNAhSgAAUoQAHzBUa1vCzshXq3/wP37GlhP29BJ9TOqgF7Nz2ECNyM4KVXp1Zqis2GL3/EH1v+w7JXnsTy1Z9ixQefY/Ko3uqQrCy3ChuMUSUn0jLw429b8M+2Xfjp960qiDHCFAleZATIVZddoI6VNVUqlkvE4N7t8g1eJPAp7FQjmV505aVyfq8a0SKjUJJH9MCtN1+db/CSWDpBBUMFTTXq2HccapxVBR3b3qHaICNinpq2AJ+vmI7fNv+rLDatnImE+Pzv4llQ3xTH9xm8FNBrLy94D4vfXY/500aoYV69hk3FudXPUKmd2l66tlj0e7oWhwzNhXRbLDK0OGRqMUjX4pGhxSLdFocMxCLD5kI64pBpi4Xsn4kYpMtrmkvtl2ZLKBZtZSUpcDICDm8mXJ7jcHlTfI+pcHlSEOtJwfEMDXvTY7A7PR47MhKxLaM80r0OJGhpqBmzF+fH7sd5sQdRM+4IqsamAQ4nvLZYwC6PMfDaY+H1/QxbLLzG+45YeG36vl5HjH6MPLcHHiP7yDQ/eV3/Wd7PQAw8RljhCx/8IYQEESGhhAomfMGIBBn6vhJeeKCHIBJ66EGHLOWkhye+QMQTGJBkhxxyTEYRQw67pkFuviRDUu02/TbR6rk8yh0n7L6fbb7nxnv27Ocy9Ur2t6n39POo5/5j9fejfZPpZglxDhxJObn1HqKtfR6vrJXhhqxf4fbINJJMeD1ZkEU65Wf13JsFjztLvS/7Ge/J67Kehv6+HK8/er36z8a+soio1+2Gx6sf65X1OTxyS1njXNnP9WPkj1udRx5PfZPPnUP90WxyC1cnbHYHNE3WyJDX5dH4E/Dc7jtG7Se3dvUdo24D64TmO1bW7tA04ziHfjtZee4vQ4717a9ed8Im51Tn14+N9BYfZ4dk5SfSw+EZ6dry/BTQBcqWisGxVBkxRpFIC1xzXrnwFxGlI17qXX+5ml50ztlV1UiTShXKYtj4l7Buw7f+6UMGRq8HWqFKxXLoMnACSpeKR50rL0Z6RibeXbsxz+Bl3LPzkeX2YNSgB8IWvARONZK6yYgUqcPK15LDErzIKJx4V5yyCNyeeaIvdu05oIKXnz96pVCL+Yb/g3R6z8jgpQB/WTCoUf06ePC+5mrPNes3YdDoGf4PzAu/NEOGR0OmR/9GXP2svhm3BTwi5Ln+vszkSc3KfwVoJ1xwak7YtVg45D9vDOxaDJxwwg752QmnNwYxWhzscMIhr2vyGKP/LI+as1CfMjfcyJJ/OGuZyPJmIgsZ8CALWd50uLUsZCEd3hyjEUJGn+RTUo7rIG/+F0bB+4fuGzrqxSjY+KZb89c1e6SO75jAQ9VICw3wtyv7TTVKQ1VCP6dXPWqyd/bm/2Ldt4//Tf0H/Wj9PeMtfw1DmqT2NUZ+SJV8pWSXGlxG0CiSUFzfeaS/Qmqc72dBP43mr4e/Dr7z6xxGC/RzG+3Tjwxppe84wy7QwV8Rn33gR8tfa7+Rr0zfg6qGUSffiRwOWXdA/xdVdi0031/sxvHZtZUhlZqWBWgZgJYOh1y4y1SiVBfSUlxITYlHamo8jqe64HXb4bRnITHhBMrGp6GcKwXl49NQ2pkBu1eO02D3SBk22FQVNNjk4+PV1B/1EfDa4JXn6sNkh1eV5oBHs8OrOeDxOtSjW3PCCzvc8prmhBsO/Y/vPTdkfzk2/03zeuDQ3LCpo+WMHtg0r5SoP2pQwYV61PQgRB4l1LBJyKEuBDU41AWdHTa7XV3wqYtLec0pf9fIfoEhiO+5Tc4pP+thiR60RH8QUpBpuN8vylSj4DuayG1a9SkiekgReEcTfTHQwP0Db/0aulioMX2kMIuF+u/C4puCEo7FQnOaSoAmYYRv3YzAdTTU7V19t3hVj/qCoBJOOCSg8K23od/FxLdvyO1dHb7bx+plGPsZa2oUfNcVCVusvhWHxXWt3kdsf04BTjUy71MRkalG5lW/UCWFTjUKPGjyzEX4579dmDbuoRznSp7+hhoBMnvyENjtNvzw6xZ06D22UMHLNz9uRqf+43OdauQf8VKzuloTJq8tdI0X2U/Wkxk46nl8/8FsNfXp+1/+wgsTBqpTBE41Mka8yHovN1xdS73/+1/b0Lb74/h27SzExuj/f5Rr51aNbsL9dzXMUQ1jqhGDl0J9zKy3U50mSWrem4Qvsv26+R/c3WO0musmH8APFs71XbR7ocmVowa4bYBHLpxscslj0y+YINMT5DU7suRR/ZH3s3/OUpdEDmR55RjjwizUPPTixasuovQzyc8e2HwXVnqJgGaT1+WSUOpoZAnys03PHNSloFzM6WU5HTbIl9j+Gxip68bs0MKIEfT9JeDIftSvL6Wk/If65ztLJf/JIgV8CIPPnO8srBwTfopY53zamLN9RTl3SBsK+rULaGQBWVYuU/OzyypockZBfRrIUdC5Qity8jrZOHIRm5HpLvQnz+O248hR+QbMg2MpXhw74VF/5Nswp11DmXgHSrucKO2yo0ycQ00Vym/zQL6Fl/Kz5Cc9tEQWvL7X1fuQaTT6o0fL0qfaICv7dU1el2/nJQb17Wfsr55nwS0jAlSA4obmdUPT5G8XL2zeTGjy++/NgubNgMMro0E8sP//ImrqbxaP/rP8jSM/y2vyd4Z8P+7wynuyvxcOtY/6G0H9LKGN/FExkbyn9gHsKtiRqVN2PaTR7HDIzwHf1jt838jLN/rqIll92y8XyE44bLFQF8HqYlm+sY/Tf3bEqcUoY+zxvpE/+kggGTGE0NFDwTFoQb8peb6vj7oo/G1WZWHRwNBD7oii39kkt8VC5Zaxxvocxp1W9Of6nU0ykJEh63BIeJL3uh0n3bhcDgxcL0P6o8hhhC+wUP3oyPt2r0awoZdhLEIa6wtV5DNhLE6q33XFCFvC2VaeK/wCDF7Cb8ozRl6AwUvkjY0SrB68fPvTZtzfbzwmDO+BJrddjyNHU/D+J1/j2toXqS/wP9r4vQo2ZArS9LnL8p1qFDjiRZa/kOvS6eMH4IpLa2LVh5sg78tzCV5k8VtZc0UCn5TUNMitokM3CV6y72qUif927kPy8wtwdrXK6jybvvtdLRIs06IkGJKZH7JQrnHdK2vM1LnqYnTv0BypqWlqnZprG/fAnKlDUfuSmuqL29feWqsWzp3x1EB1p6Qdu/djyYr1GNTzHv8aLwxezPt9LDYlyYfnsgZd1AfnlhuvUPXe8s8OtOw8Ah+8ORlnVKmA3hNf9bUnt29zg0c65Gx49uWm/m1/wPMcO/ujD987BZ07e2RCkUbcB4y4UHGKf3hGULG+oRwFXF4bozYKSj+C2lrwJbsv5snJGTrYovA3Fi7UZ9LogWD5wJVv9AoYQZQUr/Y1OkA9DwywCj8CoOA9C+dWqIbmt1NoMTlzwFMuIvwnyN3mqCceu92JKG07gXMd+1DTuR/nOPahhmMfKtqOqTBDRhWpx5CfZdRP9usctxz+PgvXGY1fwpCoz/+RiOTvTfbvutGa4AFx2b88uf4d7Q/FQyz8o+ECfvlCi/KF4UHlFvyXSLjQeR4KUIACFLCwgLPHuhLf+vxGvEjj3175iVrXRMIS2WTNk5nJg+B0OtFvxLNq1ItsMlVpw5c/5TviRaaOPz6wk9p/xtxlKqyRTcKW9Ru/91+nbt22C4NGT8fmv7erNWJyu1uQBC9SN2OTcOaOW+rgoW5tkVgmAZlZbgx4fJo6r2wy8GDN+q/8wYtMoRo9+RUcPHwMsr5N36534vk5S9V0Jdlkkd1ral+IqbOWYN7iNf5yZFrV3GeGqTVt2iWN4VSjEv8bcpINlGRx3LDuaHiLvpZL6IiXXsmzVWDiu+T2TcOQ576LMa9HpRdqtID8LJt61EefyMu+B33EjHpfv0jIntbhm9KhZsTo+/hHHxj/4FYHyDtGGTKNQt/TiAaMkf76RaScX6+DP1tRF5P667LJSBhph7zm/67fd4VgCwhT1DEhE2MMbjXdQj+ZP8TRzxVw0eF7pldXn+6hVyzbQ6YtyCbn09/Wp3D4zQKnARkzhIx+8dtkn88oQtXcV45+Lnnuq71/CozRCH1Uk95e35QWee4LzfQBRLqXujAP8deP1c+l+6m5KH5rf+fr44h87fS119/uwDYY+/gefcNdgk2ypQ1xPTAwNqOxwfXwfwbyCOLU+yF1Csm9stsQMtVK/zwYdTb6M/S5oWG8HuIRYGS0xG/mL0+vUXY0ZlRY/z2Sd6vYD6uQhVvJFgjJIXwfuhwTBwNeD/47KiAvzYYKSEtyPX/JJmXrKEABClCAArkKWCF4KUzXyxf4Bw4dVYvvyiyJwG3n7v0om1ha3bmoqJuMZpHRMhKU5LZJmWVKJ8DpyH85i/zKlXPIOi2yvmno5nZ7cOjIMVQoV8a/TossGJyRmRnUTrnT04GDel1yO09R210S9ucaLwX0osxTa9zgOnTv0EztGbrGy84DJ0rC5yCoDeVKx/B20iWuV0t+g8y4nXTJV2QLzRQoyhovZtaLZVEgPwFONeLnozgKcKqReb1mhalG5mmypJIkwOClgN6c9foKLFnxsbqrkaSSSUOnBN3ViMFLSfp1YFuKswCDl+Lce9asO4MXa/Z7cW81g5fi3oPWrD+DF/P6ncGLedYsqXgJMHgpoL9kONcjT7yAT774Qe152UXnqkWLKlfUb5HF4KV4feBZ25IrwOCl5PZtSW0Zg5eS2rMlu10MXkp2/5bU1jF4Ma9nGbyYZ82SipcAg5dC9teRYynIzMxCxfKJQUcweCkkIHejQIQFGLxEGJinD7sAg5ewk/KEJggweDEBmUWEXYDBS9hJ8zwhgxfzrFlS8RJg8HKK/cXg5RQBeTgFwiTA4CVMkDyNaQIMXkyjZkFhFGDwEkZMnso0AQYvplGDwYt51iypeAkweDnF/mLwcoqAPJwCYRJg8BImSJ7GNAEGL6ZRs6AwCjB4CSMmT2WaAIMX06gZvJhHzZKKmQCDl1PsMAYvpwjIwykQJgEGL2GC5GlME2DwYho1CwqjAIOXMGLyVKYJMHgxjZrBi3nULKmYCTB4OcUOY/ByioA8nAJhEmDwEiZInsY0AQYvplGzoDAKMHgJIyZPZZoAgxfTqBm8mEfNkoqZAIOXYtZhrC4FKEABClCAAhSgAAUoQAEKUIACxUeAwUvx6SvWlAIUoAAFKEABClCAAhSgAAUoQIFiJsDgpZh1GKtLAQpQgAIUoAAFKEABClCAAhSgQPERYPBSfPoq7DXdf/AIEuJdcMXFhP3cPCEFzBbIcrth02yw2TSzi2Z5FChQQD6fDru9wP24AwWiWUA+x/sOHEH5sqURG+OM5qqybhYUOHIsBenpmahcsawFW88mU4AC0S7A4CXaeygC9du2Yw+Shk7Bv9v3qLO3afo/PD7oATgduV8UJE9/A/MWrwmqyVWXXYDXnh8RgdrxlBQousCJtAzc23M0enRsgeZ33Fj0E/AICkRQYNuOvWhy3xC8v3ASzqxaMc+SDh4+hnqt++V4f/aUIbjh6loRrCFPTYGCBWa9vgLPzFri37FR/ToYNagzEsskFHww96BABAXki8RO/cf7/11bs8aZePC+5mjRsG6epbZ8YDi2/Lsz6P0+nVujd+fWEawpT00BClhZgMGLBXu/x+BJKJXgwrhhD2L33gO4p+cYPD6wU57/g5rw/AL8t3MvhvRu79eKjXWiaqXyFtRjk6NNYNLMN/HKwlWqWskjejJ4ibYOsnh92vceix9/3aIUCgpeDhw6iv/d2R8zkx9G9WqV/XKVK5bjyESLf46iofmLV6zH2WdWxhW1zlf/Jug2KBnd2jdD53sbR0P1WAcLC+zdfxjLVm9Ay0Y3IcEVh/lL1uKVN1fjk6XP5fl3pwQvzW6/EY0bXOeXSyydgLKJpSwsyaZTgAKRFGDwEkndKDy3DMOs26KPGq0io1ZkG/fsfOzeexDTxj2Ua40leDl89DgmDO8RhS1ilawucPjIcaRlZKBD77EY1OMeBi9W/0BEWfvlgkACbglgChu8rJj3FM6tfkaUtYTVoUCwwMiJc7Bj1z7MmTqUNBSIKoHtu/ahUfvBmD9tOK6+/MJc6ybBi4SGMuqbGwUoQAEzBBi8mKEcRWVs+WcHWnYegfVvPYNKFfQ5sPLNwPI1n2HJrDF5Bi9rP/5KDXUvl1gat958Na6pnfv/yKKoqayKxQTkH1n9urZh8GKxfi8Ozd2z7xBuvXtgoYOXW2+6CollSuHC885Cq8Y3Q76F5UaBaBLIzHKjUftH0Oy2G/Fw0j3RVDXWhQJYumoDHkuejQ3Lpqn1iHLbJHhJSHBBpiWdWaWC+rdD9WpVqEcBClAgYgIMXiJGG50n/u7nP9Gx7zhsfHe6/x/zi95dj5nzluPDxVNzrfS7azfin+271UJ6P/+xFes2fIspo3ujUf3s4ZnR2VrWykoCDF6s1NvFq62FDV6Op5zAsy8vgUwtOnY8VV08VCyfiDdnjkIMFzItXp1ewms7atIrWLnuS7w3fwIXMi3hfV3cmvfn1u3o0PtJPHB3I/Ttemee1Z/+ylLY7DZ4vcCHn36r1od56+UxDF+KW4ezvhQoRgIMXopRZ4WjqsaIl4/fflb9g162gka8hJY7bPxLOHzkmFqHgBsFokWAwUu09ATrESpQ2OAl9Lit23aheadH8caMkahdqyZhKRAVAjPmLsP0ucuwcOYoXH7xuVFRJ1aCAiKwY/d+3N9vHOpceTHGD3sQdrutUDCZmVlo1GEw7m/bEF3aNSnUMdyJAhSgQFEFGLwUVayY75/bGi9jp87D3v2H8lzjJbTJcleDb37crObOcqNAtAgweImWnmA9whW8pKSm4bqmSWoNjeuvuoSwFDitAh6PF5NnvgkZJfvqs8NQ68JzTmt9WDgFAgX+2roDXQZOUNPhRw7sBIc99zt15qV2b88xuKXulej9QCvCUoACFIiIAIOXiLBG90m7P/I0ypRKwLhh3XO9q9Gg0TNwZtUKeCTpXtWQqS8tRsuGdVH9rKr4Y8s2dBmQjO4dmqHn/S2iu6GsnSUEstxueD1eNTIgqVNLNL/9RjidDku0nY2MfgFZC0MW123cYQhWvpasbiftdOgXBHMXrVZTN40Q++PPf0BaejpuuOZStc8zs95S040+WDSZ67xEf1eX+Brtq2VTAAAR4klEQVTKmhnyeZTRrufVyF78uUqlckW+yC3xWGygqQJ/bPkPbbqNRLPbbkC/bm1gs+kjXeJdsWptQpm62WWg3IWrKZrcej227diDDz/7Tt3RqEK5RKz5aBOGjnsR854bzjUMTe05FkYBawkweLFWf6vWyvD1pKFTIKu+y9a68c0Y/XBn/8XqnV0fU3fUmDK6j3pfvgWQtV2MTfaXbxPiYmMsqMcmR5uABIVr1m8KqhbvChNtvWTd+tRpkoTUE2l+AFnoURZ8lO3pGQvV6IGvVs1Uz9//5GsMf+pl//6y79Mje+GGa2pZF5AtjxoBGVVo/LshsFISKNY4i4uSRk1HWbAiqz78Eo888UKOlrdoWFfdkfPI0RTUbdkHjw24H+1b36aCl84DJkCmgRrb0D7t0enuRhbUY5MpQAGzBBi8mCUdheXI/3BKJbiQEB9XYO3k24JDR46hUoVycMUxcCkQjDtQgAIUOAkBGcF14OBRdWTlimWhadpJnIWHUIACFKBAfgJerxcHDx9TQfcZVSpw1BY/LhSgQMQFGLxEnJgFUIACFKAABShAAQpQgAIUoAAFKGBVAQYvVu15tpsCFKAABShAAQpQgAIUoAAFKECBiAsweIk4MQugAAUoQAEKUIACFKAABShAAQpQwKoCDF6s2vNsNwUoQAEKUIACFKAABShAAQpQgAIRF2DwEnFiFkABClCAAhSgAAUoQAEKUIACFKCAVQUYvFi159luClCAAhSgAAUoQAEKUIACFKAABSIuwOAl4sQsgAIUoAAFKEABClCAAhSgAAUoQAGrCjB4sWrPs90UoAAFKEABClCAAhSgAAUoQAEKRFyAwUvEiVkABShAAQpQgAIUoAAFKEABClCAAlYVYPBi1Z5nuylAAQpQgAIUoAAFKEABClCAAhSIuACDl4gTswAKUIACFKAABShAAQpQgAIUoAAFrCrA4MWqPc92U4ACFKAABShAAQpQgAIUoAAFKBBxAQYvESdmARSgAAUoQAEKUIACFKAABShAAQpYVYDBi1V7nu2mAAUoQAEKUIACFKAABShAAQpQIOICDF4iTswCKEABClCAAhSgAAUoQAEKUIACFLCqAIMXq/Y8200BClDA4gLbduzBb3/+i+279qNcYilcfH511LrwnGKh8vHnP8Dtdqu6Op0O1DirCqpXq1Jg3b/7+U9s37kPLRrWLXDfU91hzJRXsXvvQUwe1Qvxrrig091690C8v3Ay7Hab//UstxtDxr4IwIuJI5PgsNtPtQo8ngIUoAAFKEABCkSFAIOXqOgGVoICFKAABcwSOJGWgedmv4V5i9eoIiW0+Hf7HvVzzRpnYvGsMYiNcZpVHX85X373G7oOTMaq1yeierXK+ZZ/af3OOd6/9aarMHFkL7jiYvI8dvSkuVi8Yj1+WT83ou37YMM3eGjkNCyYMRJX1KoZVJYELFfc1g1frXoR8a7YoPe2btuF5p0exYiH7keHO2+LaB15cgpQgAIUoAAFKGCWAIMXs6RZDgUoQAEKRIXAlBcXYfYbKzG4Vzt0vOsONbJCwoD1G7/HmMlzsXrB00iIDx6hYUbFv/jmV3R7eCJWvZ5c4OgVCV563t8C/bu1ReqJNLy7diOemDoP3Ts0w8Aed+dZ3dQT6cjMykJi6YSINSklNQ2NOwzGnU3qYVDPe/zlHD2eijlvrMTrb3+g6ixblUrlkNSpFe5pUd+/n7w//rnX8NGSZ1C5YtmI1ZMnpgAFKEABClCAAmYJMHgxS5rlUIACFKDAaRfYuXs/7mj3CNo0/R/GDumaoz4yGiYu1ok9+w9h2LiXsOWfHTh4+JgKCFo2vAl9utwJp0OfAjNy4hycW70qLjj3LBV87D1wGM+O7YdJL7yZ6+vxcbF4Yd5yvPfBF9i+ax+uv+oSPJx0Ly696Bzs2XcIXQZOUCNvLrmgBuJiY3D+OdUw+pGcI1uk7MDgxWjEvT3HqGlHrz0/Am8u/xBffvc7+nRuhdeXrsPf/+5E/25tsOXfnfj8618wZXQfdZjb7cGb73yE5as/xd/bdqnRP7fXuwZJnVqq9zd8+RNenP8OZIrSWWdUQqvGN+PB+5r7DXLr0AVL12Hcs/Ox8d3pQQHP0zMW4p21n2H8oz2QNHQyFr04Gl99/zsOHTkWFBZlZrlRt0UftG99a1Bwc9o/PKwABShAAQpQgAIUOEkBBi8nCcfDKEABClCg+Ams2/At+o98DgtfeByXX3Jeng2Q9V+embVEhSPly5XBn1t3YPorSzHgwbtU8CDbXQ+OUmvEyFa/7pVqvZKxg7upUSu5vT71pcVqms9dzW9R4YpMdZKgZfWCiShbppSa/iShRe8HWqkyy5ctjUb1r8u1jqHBi8fjRfNOw9QUpZnJD8MY1SMHX335hSo4urdlA3z+zS9YtvpTfLh4qjrv5JmLMGfhSlX/hrfUweYt/2HuotVqKtKGL39E0tApaj0YCWN+/HWLGin0cNI96NquaZ52Iya8jBNp6f5wx9ixTpMkNLvtBhUmyc+fr5ie5zouE6e/gc1bt+PlSYOL34eMNaYABShAAQpQgAIhAgxe+JGgAAUoQAHLCEhwIKHEp8unoVxi6UK1W6bOyKgMGQFTKiFOBRtG8CIjTKaPH6BCEmOTQCb09b37D6PBXQNUYCHBhWyHjxzHTa364r42t2N4/44o6lSj+9rcoaYWHTh0RAU2b6/8BMkjeqL5HTeqNr6x7EM1+uWimmf76ybhjhG87D94BLe0eQj3tGyAUYMe8O8jdZUpPnd2fQyVKpTFS08/4n9v0Ojp+GvrDrzz6vg87eS4u5rXV+0K3IaNf0mNDOrTuTWmz12GL1bMQOlS8bme5/1Pvsbwp17GV6tmFqqPuBMFKEABClCAAhSIZgEGL9HcO6wbBShAAQqEVcCYBrN24SRUq1oxz3PLmi+zXl+Bxe+uV9OAjE1Gj8yfNlw9lYBFRs0EhhZ5vW4snDszeRDqXV/bfz45hysuVp2zqMFLYOXlrkGDet6N9q31BWkleFmz/iuseePpoDYGBi9GnaaNewiyMG/glpmZhSvv6K4CpSqVyvvfkhE6sj5LXovzGsc9N7Y/bqt3ddA5ZY2X2QveUyGRscaLjKbp/UDrHIsJ//Tb32jX6wmu8xLWTz9PRgEKUIACFKDA6RJg8HK65FkuBShAAQqYLiDrm3R/5Gk8P/4hNKgbHDYEVkYCihfnv6vWGJGgpGrl8mrB1x279p9U8CJrpci6JhKwSHhjbJ0HTEB6RibemDGyyMGLLF7bse0dauSOjEyx2TT/eQsTvBhTieY+Mwx1rrw4qC9klM91TZNwd/P6OQIUQEO96y/Pte8yMjJxVcMHkVuYYxzg9XpxWYMueGJwVzwzazFq16qpRg0Fbj/9vhXtksaoKVEyTYobBShAAQpQgAIUKM4CDF6Kc++x7hSgAAUoUCSBI8dScPs9D+OsMypi0UtjciwSK6NAJBjp2OdJJJZJCJpmM/ypWfhv576TCl5kpEjTjkPRt+ud6NWplaqzLOR7beMeaNXoJox/9EG1gG3HvuOw7JUn1YK9+W25La4buH9hghdZx6bJfUPVmjWydo2xyYK7sl5Nvdb9UOfKSzBldO+gqkhwomnZIU9oPWWq0d0tGuS4HbSMhpEpWLIZa7zIGjOy1k3oCBq5HfWj42dxqlGRPt3cmQIUoAAFKECBaBVg8BKtPcN6UYACFKBARARknRFZb0QWuJWFbM+sWhH/7dyL9z/+Gu+t+wKbVs7EzHnvYOHyDzFheA9UrJCIT774Qb12slONpCEy0uaPv7ahX9c2uOj86nh10RqsWb9JrcNy1WUXwBgtImujyBopx1NO4OrLL8jVIBzBi5xYRuF88+Of6NKuCRrdcq26s9GMucuwdM6TakqQ3J2oW/umaoHdjIwsfP/Ln/j48x+CAqnQCsriuhKyTByZ5H9Lpm41aDtAlXNN7YvQofdYtR5N8vQFuLtFfXVb7NDg6Offt2LO1KER+QzwpBSgAAUoQAEKUMBMAQYvZmqzLApQgAIUiAqBz776GcnPL1C3VzY2uV1y22b/Q9f2TdW6LrKY7rc/bVZvy3QYj9sDlysWMjVHNrl9c62Lzsmxxkter8uitcPGvQgZVWNsTw7tBpkyZGyvLl6Dl19foW5hLWXKFKTcNgle5JbPEuLktskdlFZ/tCnHGi/T5ryNpas2+O9qJAvsyhQqWQ/G2GRtFlmjRUa+vP72+5g2Z6l/TRbZR4IYmYKV1ybHjH/udXy+YgbK+BbPlbsuTZ75Jj7a+J26k5Nssn6MLDbcrvVtcMXF+E9nhDTikl85UfFBYiUoQAEKUIACFKBAIQQYvBQCibtQgAIUoEDJFJDpPvsOHEJCvAsVypXJ0chdew7AZrOFdZ0RuZvR0eMpaqSNw27PUaYEDxKIVCyfmOftlsPdG7LOzL4Dh1WZcbHZIYiUI1OLpD5eL5SRTEPKbzt2PFVNq2rb7JagKUyBx0hw9MO62bm2T0YajZ06D+sWT0HVgIV9w91mno8CFKAABShAAQqYJcDgxSxplkMBClCAAhSwiICMoJFbTy984XF156fQzVjjJTR4knVn2nYfhf7d2uD+uxpaRIvNpAAFKEABClCgpAsweCnpPcz2UYACFKAABU6DwGPJs7F3/yE880RfyO2uA7dF73yk1nYJXKRXRvoMGTtTrQ8z9Ym+po32OQ00LJICFKAABShAAYsJMHixWIezuRSgAAUoQAEKUIACFKAABShAAQqYJ8DgxTxrlkQBClCAAhSgAAUoQAEKUIACFKCAxQQYvFisw9lcClCAAhSgAAUoQAEKUIACFKAABcwTYPBinjVLogAFKEABClCAAhSgAAUoQAEKUMBiAgxeLNbhbC4FKEABClCAAhSgAAUoQAEKUIAC5gkweDHPmiVRgAIUoAAFKEABClCAAhSgAAUoYDEBBi8W63A2lwIUoAAFKEABClCAAhSgAAUoQAHzBBi8mGfNkihAAQpQgAIUoAAFKEABClCAAhSwmACDF4t1OJtLAQpQgAIUoAAFKEABClCAAhSggHkCDF7Ms2ZJFKAABShAAQpQgAIUoAAFKEABClhMgMGLxTqczaUABShAAQpQgAIUoAAFKEABClDAPAEGL+ZZsyQKUIACFKAABShAAQpQgAIUoAAFLCbA4MViHc7mUoACFKAABShAAQpQgAIUoAAFKGCeAIMX86xZEgUoQAEKUIACFKAABShAAQpQgAIWE2DwYrEOZ3MpQAEKUIACFKAABShAAQpQgAIUME+AwYt51iyJAhSgAAUoQAEKUIACFKAABShAAYsJMHixWIezuRSgAAUoQAEKUIACFKAABShAAQqYJ8DgxTxrlkQBClCAAhSgAAUoQAEKUIACFKCAxQQYvFisw9lcClCAAhSgAAUoQAEKUIACFKAABcwTYPBinjVLogAFKEABClCAAhSgAAUoQAEKUMBiAgxeLNbhbC4FKEABClCAAhSgAAUoQAEKUIAC5gkweDHPmiVRgAIUoAAFKEABClCAAhSgAAUoYDEBBi8W63A2lwIUoAAFKEABClCAAhSgAAUoQAHzBBi8mGfNkihAAQpQgAIUoAAFKEABClCAAhSwmACDF4t1OJtLAQpQgAIUoAAFKEABClCAAhSggHkCDF7Ms2ZJFKAABShAAQpQgAIUoAAFKEABClhMgMGLxTqczaUABShAAQpQgAIUoAAFKEABClDAPAEGL+ZZsyQKUIACFKAABShAAQpQgAIUoAAFLCbA4MViHc7mUoACFKAABShAAQpQgAIUoAAFKGCeAIMX86xZEgUoQAEKUIACFKAABShAAQpQgAIWE2DwYrEOZ3MpQAEKUIACFKAABShAAQpQgAIUME+AwYt51iyJAhSgAAUoQAEKUIACFKAABShAAYsJMHixWIezuRSgAAUoQAEKUIACFKAABShAAQqYJ8DgxTxrlkQBClCAAhSgAAUoQAEKUIACFKCAxQQYvFisw9lcClCAAhSgAAUoQAEKUIACFKAABcwTYPBinjVLogAFKEABClCAAhSgAAUoQAEKUMBiAgxeLNbhbC4FKEABClCAAhSgAAUoQAEKUIAC5gn8H6EktBvOtkf5AAAAAElFTkSuQmCC",
      "text/html": [
       "<div>                            <div id=\"cc22e17d-eb0b-46ee-87ed-032760df85a5\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};\n",
       "                    window.PLOTLYENV.BASE_URL='https://plot.ly';                                    if (document.getElementById(\"cc22e17d-eb0b-46ee-87ed-032760df85a5\")) {                    Plotly.newPlot(                        \"cc22e17d-eb0b-46ee-87ed-032760df85a5\",                        [{\"line\":{\"color\":\"rgba(255, 153, 51, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Cheddar Cheese \",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.45425803022834943,0.4635852383250739,0.4635852383250739,0.4635852383250739,0.4636798002956153,0.4636798002956153,0.46591817074500436,0.46591817074500436,0.46677804090116026,0.0,0.0],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(55, 128, 191, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Skim Milk Powder \",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.0,0.0,0.0,0.0,0.004971654452727307,0.004971654452727307,0.0013261676895452486,0.0013261676895452486,0.0,0.0,0.0],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(50, 171, 96, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Corn Flakes\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.29549466719353246,0.272290252933748,0.272290252933748,0.272290252933748,0.2722566142189322,0.2722566142189322,0.2726210570801422,0.2726210570801422,0.2722716120360926,0.0,0.0],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(128, 0, 128, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Flour\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.593774098076513,0.8732530655162973,0.8732530655162973,0.8732530655162973,0.8736966345595847,0.8736966345595847,0.8723434806298653,0.8723434806298653,0.8756896040871776,2.7806371704038293,2.8343471321651803],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(219, 64, 82, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Frozen Corn\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[2.268635610012755,2.5013808786754104,2.5013808786754104,2.5013808786754104,2.5038122539961485,2.5038122539961485,2.4932053897597815,2.4932053897597815,2.489799212469519,6.767165502247927,6.546722661748803],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(0, 128, 128, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Carrots\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[20.23753296543084,18.886755180288095,18.886755180288095,18.886755180288095,18.873885051176302,18.873885051176302,18.85891307199347,18.85891307199347,18.84765900469924,12.294749210235624,11.51816134864665],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(255, 255, 51, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Apples \",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.24361128188384357,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(128, 128, 0, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Bananas\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.473153318897977],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(251, 128, 114, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Peanut Butter \",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.12805251539256746,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(128, 177, 211, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Canned Pink Salmon\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.12104920427733595,0.14353599116275984,0.14353599116275984,0.14353599116275984,0.14354906613633078,0.14354906613633078,0.14262135938736997,0.14262135938736997,0.14278668549897625,0.5454545454545454,0.5454545454545454],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(128, 177, 211, 0.8999999999999999)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Frozen French Fries\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.0,0.4090351337566819,0.4090351337566819,0.4090351337566819,0.412937360723493,0.412937360723493,0.4209176724985478,0.4209176724985478,0.42559696306029865,1.583574308208625,1.8496577096528282],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(255, 153, 51, 0.8999999999999999)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Milk 2%\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.0,0.04817754604191061,0.04817754604191061,0.04817754604191061,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(55, 128, 191, 0.8999999999999999)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Orange Juice\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.02578774258599594,0.02578774258599594,0.03537723503050071,3.0087653074825926,3.1183272523014787],\"type\":\"scatter\"}],                        {\"annotations\":[{\"align\":\"center\",\"font\":{\"size\":12},\"showarrow\":false,\"text\":\"There were not any changes given this constraint, meaning the food weight was less than 120 Hectograms.\",\"x\":0.5,\"xref\":\"paper\",\"y\":1.1,\"yref\":\"paper\"}],\"template\":{\"data\":{\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"title\":{\"text\":\"Changes in Diet Given the Maximum Constraint of 120 Hectograms of Food Per Day\"},\"xaxis\":{\"title\":{\"text\":\"Carrot Price ($)\"}},\"yaxis\":{\"title\":{\"text\":\"Hectograms\"}}},                        {\"showLink\": true, \"linkText\": \"Export to plot.ly\", \"plotlyServerURL\": \"https://plot.ly\", \"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('cc22e17d-eb0b-46ee-87ed-032760df85a5');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "cf.go_offline()\n",
    "\n",
    "ReferenceGood = 'Carrots'\n",
    "\n",
    "scale = [0.5,0.75,0.9,1.,1.1,1.2,1.3,1.4,1.5,2,4]\n",
    "\n",
    "cost0 = solve_subsistence_problem(FoodNutrients,Prices,\n",
    "                                  diet_min[group],diet_max[group],max_weight=120,tol=tol).fun\n",
    "\n",
    "my_p = Prices.copy()\n",
    "\n",
    "diet = {}\n",
    "for s in scale:\n",
    "\n",
    "    my_p[ReferenceGood] = Prices[ReferenceGood]*s\n",
    "    result = solve_subsistence_problem(FoodNutrients,my_p,\n",
    "                                       diet_min[group],diet_max[group],max_weight=120,tol=tol)\n",
    "    diet[my_p[ReferenceGood]] = result.diet\n",
    "\n",
    "Diet_response = pd.DataFrame(diet).T\n",
    "Diet_response.index.name = '%s Price' % ReferenceGood\n",
    "\n",
    "Diet_response.reset_index(inplace=True)\n",
    "\n",
    "# Get rid of units for index (cufflinks chokes)\n",
    "Diet_response['%s Price' % ReferenceGood] = Diet_response['%s Price' % ReferenceGood].apply(lambda x: x.magnitude)\n",
    "\n",
    "Diet_response = Diet_response.set_index('%s Price' % ReferenceGood)\n",
    "\n",
    "# Just look at goods consumed in quantities greater than error tolerance\n",
    "Diet_response.loc[:, (Diet_response > tol).sum() > 0].iplot(layout={\n",
    "    'title': 'Changes in Diet Given the Maximum Constraint of 120 Hectograms of Food Per Day',  \n",
    "    'xaxis': {\n",
    "        'title': 'Carrot Price ($)'\n",
    "    },\n",
    "    'yaxis': {\n",
    "        'title': 'Hectograms'\n",
    "    },\n",
    "    'annotations': [{\n",
    "        'text': 'There were not any changes given this constraint, meaning the food weight was less than 120 Hectograms.',  \n",
    "        'showarrow': False,\n",
    "        'align': 'center',\n",
    "        'x': 0.5,\n",
    "        'y': 1.1,  \n",
    "        'xref': 'paper',\n",
    "        'yref': 'paper',\n",
    "        'font': {\n",
    "            'size': 12  \n",
    "        }\n",
    "    }]\n",
    "})\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Graphs for Traditional + Grocery Store Sensitivity"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "        <script type=\"text/javascript\">\n",
       "        window.PlotlyConfig = {MathJaxConfig: 'local'};\n",
       "        if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\n",
       "        if (typeof require !== 'undefined') {\n",
       "        require.undef(\"plotly\");\n",
       "        requirejs.config({\n",
       "            paths: {\n",
       "                'plotly': ['https://cdn.plot.ly/plotly-2.32.0.min']\n",
       "            }\n",
       "        });\n",
       "        require(['plotly'], function(Plotly) {\n",
       "            window._Plotly = Plotly;\n",
       "        });\n",
       "        }\n",
       "        </script>\n",
       "        "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "ename": "TypeError",
     "evalue": "object of type 'float' has no len()",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[17], line 12\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m i,p \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28menumerate\u001b[39m(Prices_2):\n\u001b[1;32m     11\u001b[0m     my_p \u001b[38;5;241m=\u001b[39m Prices_2\u001b[38;5;241m.\u001b[39mcopy()\n\u001b[0;32m---> 12\u001b[0m     \u001b[43mmy_p\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43miloc\u001b[49m\u001b[43m[\u001b[49m\u001b[43mi\u001b[49m\u001b[43m]\u001b[49m \u001b[38;5;241m=\u001b[39m p\u001b[38;5;241m*\u001b[39ms\n\u001b[1;32m     13\u001b[0m     result \u001b[38;5;241m=\u001b[39m solve_subsistence_problem(FoodNutrients_2,my_p,diet_min[group],diet_max[group],tol\u001b[38;5;241m=\u001b[39mtol)\n\u001b[1;32m     14\u001b[0m     cost[Prices_2\u001b[38;5;241m.\u001b[39mindex[i]] \u001b[38;5;241m=\u001b[39m np\u001b[38;5;241m.\u001b[39mlog(result\u001b[38;5;241m.\u001b[39mfun\u001b[38;5;241m/\u001b[39mcost0)\n",
      "File \u001b[0;32m/srv/conda/lib/python3.11/site-packages/pandas/core/indexing.py:911\u001b[0m, in \u001b[0;36m_LocationIndexer.__setitem__\u001b[0;34m(self, key, value)\u001b[0m\n\u001b[1;32m    908\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_has_valid_setitem_indexer(key)\n\u001b[1;32m    910\u001b[0m iloc \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mname \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124miloc\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mobj\u001b[38;5;241m.\u001b[39miloc\n\u001b[0;32m--> 911\u001b[0m \u001b[43miloc\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_setitem_with_indexer\u001b[49m\u001b[43m(\u001b[49m\u001b[43mindexer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mvalue\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mname\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[0;32m/srv/conda/lib/python3.11/site-packages/pandas/core/indexing.py:1944\u001b[0m, in \u001b[0;36m_iLocIndexer._setitem_with_indexer\u001b[0;34m(self, indexer, value, name)\u001b[0m\n\u001b[1;32m   1942\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_setitem_with_indexer_split_path(indexer, value, name)\n\u001b[1;32m   1943\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m-> 1944\u001b[0m     \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_setitem_single_block\u001b[49m\u001b[43m(\u001b[49m\u001b[43mindexer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mvalue\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mname\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[0;32m/srv/conda/lib/python3.11/site-packages/pandas/core/indexing.py:2218\u001b[0m, in \u001b[0;36m_iLocIndexer._setitem_single_block\u001b[0;34m(self, indexer, value, name)\u001b[0m\n\u001b[1;32m   2215\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mobj\u001b[38;5;241m.\u001b[39m_check_is_chained_assignment_possible()\n\u001b[1;32m   2217\u001b[0m \u001b[38;5;66;03m# actually do the set\u001b[39;00m\n\u001b[0;32m-> 2218\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mobj\u001b[38;5;241m.\u001b[39m_mgr \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mobj\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_mgr\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43msetitem\u001b[49m\u001b[43m(\u001b[49m\u001b[43mindexer\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mindexer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mvalue\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mvalue\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   2219\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mobj\u001b[38;5;241m.\u001b[39m_maybe_update_cacher(clear\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m, inplace\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m)\n",
      "File \u001b[0;32m/srv/conda/lib/python3.11/site-packages/pandas/core/internals/managers.py:415\u001b[0m, in \u001b[0;36mBaseBlockManager.setitem\u001b[0;34m(self, indexer, value, warn)\u001b[0m\n\u001b[1;32m    411\u001b[0m     \u001b[38;5;66;03m# No need to split if we either set all columns or on a single block\u001b[39;00m\n\u001b[1;32m    412\u001b[0m     \u001b[38;5;66;03m# manager\u001b[39;00m\n\u001b[1;32m    413\u001b[0m     \u001b[38;5;28mself\u001b[39m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcopy()\n\u001b[0;32m--> 415\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mapply\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43msetitem\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mindexer\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mindexer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mvalue\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mvalue\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[0;32m/srv/conda/lib/python3.11/site-packages/pandas/core/internals/managers.py:363\u001b[0m, in \u001b[0;36mBaseBlockManager.apply\u001b[0;34m(self, f, align_keys, **kwargs)\u001b[0m\n\u001b[1;32m    361\u001b[0m         applied \u001b[38;5;241m=\u001b[39m b\u001b[38;5;241m.\u001b[39mapply(f, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n\u001b[1;32m    362\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m--> 363\u001b[0m         applied \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mgetattr\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mb\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mf\u001b[49m\u001b[43m)\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    364\u001b[0m     result_blocks \u001b[38;5;241m=\u001b[39m extend_blocks(applied, result_blocks)\n\u001b[1;32m    366\u001b[0m out \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mtype\u001b[39m(\u001b[38;5;28mself\u001b[39m)\u001b[38;5;241m.\u001b[39mfrom_blocks(result_blocks, \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39maxes)\n",
      "File \u001b[0;32m/srv/conda/lib/python3.11/site-packages/pandas/core/internals/blocks.py:1421\u001b[0m, in \u001b[0;36mBlock.setitem\u001b[0;34m(self, indexer, value, using_cow)\u001b[0m\n\u001b[1;32m   1417\u001b[0m     vi \u001b[38;5;241m=\u001b[39m values[indexer]\n\u001b[1;32m   1418\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m lib\u001b[38;5;241m.\u001b[39mis_list_like(vi):\n\u001b[1;32m   1419\u001b[0m         \u001b[38;5;66;03m# checking lib.is_scalar here fails on\u001b[39;00m\n\u001b[1;32m   1420\u001b[0m         \u001b[38;5;66;03m#  test_iloc_setitem_custom_object\u001b[39;00m\n\u001b[0;32m-> 1421\u001b[0m         casted \u001b[38;5;241m=\u001b[39m setitem_datetimelike_compat(values, \u001b[38;5;28;43mlen\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mvi\u001b[49m\u001b[43m)\u001b[49m, casted)\n\u001b[1;32m   1423\u001b[0m \u001b[38;5;28mself\u001b[39m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_maybe_copy(using_cow, inplace\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m)\n\u001b[1;32m   1424\u001b[0m values \u001b[38;5;241m=\u001b[39m cast(np\u001b[38;5;241m.\u001b[39mndarray, \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mvalues\u001b[38;5;241m.\u001b[39mT)\n",
      "File \u001b[0;32m/srv/conda/lib/python3.11/site-packages/pint/quantity.py:1816\u001b[0m, in \u001b[0;36mQuantity.__len__\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1815\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m__len__\u001b[39m(\u001b[38;5;28mself\u001b[39m):\n\u001b[0;32m-> 1816\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mlen\u001b[39;49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_magnitude\u001b[49m\u001b[43m)\u001b[49m\n",
      "\u001b[0;31mTypeError\u001b[0m: object of type 'float' has no len()"
     ]
    }
   ],
   "source": [
    "cf.go_offline()\n",
    "\n",
    "scale = [.5,.6,.7,.8,.9,1.,1.1,1.2,1.3,1.4,1.5]\n",
    "\n",
    "cost0 = solve_subsistence_problem(FoodNutrients_2,Prices_2,diet_min[group],diet_max[group],tol=tol).fun\n",
    "\n",
    "Price_response={}\n",
    "for s in scale:\n",
    "    cost = {}\n",
    "    for i,p in enumerate(Prices_2):\n",
    "        my_p = Prices_2.copy()\n",
    "        my_p.iloc[i] = p*s\n",
    "        result = solve_subsistence_problem(FoodNutrients_2,my_p,diet_min[group],diet_max[group],tol=tol)\n",
    "        cost[Prices_2.index[i]] = np.log(result.fun/cost0)\n",
    "    Price_response[np.log(s)] = cost\n",
    "\n",
    "Price_response = pd.DataFrame(Price_response).T\n",
    "Price_response.iplot(layout={\n",
    "    'title': 'Effects of Carrot Price Changes on Total Cost of Diet',  \n",
    "    'xaxis': {\n",
    "        'title': 'Change in Log Price'\n",
    "    },\n",
    "    'yaxis': {\n",
    "        'title': 'Change in Log Cost'\n",
    "    }\n",
    "})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "        <script type=\"text/javascript\">\n",
       "        window.PlotlyConfig = {MathJaxConfig: 'local'};\n",
       "        if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\n",
       "        if (typeof require !== 'undefined') {\n",
       "        require.undef(\"plotly\");\n",
       "        requirejs.config({\n",
       "            paths: {\n",
       "                'plotly': ['https://cdn.plot.ly/plotly-2.32.0.min']\n",
       "            }\n",
       "        });\n",
       "        require(['plotly'], function(Plotly) {\n",
       "            window._Plotly = Plotly;\n",
       "        });\n",
       "        }\n",
       "        </script>\n",
       "        "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/srv/conda/lib/python3.11/site-packages/pandas/core/dtypes/cast.py:1601: UnitStrippedWarning:\n",
      "\n",
      "The unit of the quantity is stripped when downcasting to ndarray.\n",
      "\n"
     ]
    },
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "linkText": "Export to plot.ly",
        "plotlyServerURL": "https://plot.ly",
        "showLink": true
       },
       "data": [
        {
         "line": {
          "color": "rgba(255, 153, 51, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "caribou",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          2.091672950417704,
          2.091672950417704,
          0.36418816388467373,
          0.5823041520478226,
          0.5823041520478226,
          0.5823041520478226,
          0.5823041520478226,
          0.5823041520478226,
          0.5823041520478226,
          0.6484408207581536,
          0.7195052459132655
         ]
        },
        {
         "line": {
          "color": "rgba(55, 128, 191, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "seal",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          3.882359546452026,
          3.882359546452026,
          3.106394058405731,
          2.802459866940375,
          2.802459866940375,
          2.802459866940375,
          2.802459866940375,
          2.802459866940375,
          2.802459866940375,
          2.72625115180478,
          1.591679611256962
         ]
        },
        {
         "line": {
          "color": "rgba(50, 171, 96, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Frozen Corn",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0,
          0,
          3.615508718318859,
          2.2752904617495413,
          2.2752904617495413,
          2.2752904617495413,
          2.2752904617495413,
          2.2752904617495413,
          2.2752904617495413,
          1.5143781073097673,
          0
         ]
        },
        {
         "line": {
          "color": "rgba(128, 0, 128, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Carrots",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          21.459592151261997,
          21.459592151261997,
          14.070327134471531,
          9.616823078470604,
          9.616823078470604,
          9.616823078470604,
          9.616823078470604,
          9.616823078470604,
          9.616823078470604,
          9.397299915663076,
          6.7067975174852625
         ]
        },
        {
         "line": {
          "color": "rgba(219, 64, 82, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Bananas",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0.551482842440268,
          5.800368492507088
         ]
        },
        {
         "line": {
          "color": "rgba(0, 128, 128, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Frozen French Fries",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0,
          0,
          1.9865572075839215,
          3.951273768156879,
          3.951273768156879,
          3.951273768156879,
          3.951273768156879,
          3.951273768156879,
          3.951273768156879,
          4.211809486355937,
          5.332788291672367
         ]
        },
        {
         "line": {
          "color": "rgba(255, 255, 51, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Milk 2%",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0.9389848865386325,
          0.9389848865386325,
          3.6527910939727524,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "line": {
          "color": "rgba(128, 128, 0, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Orange Juice",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0.6009724523577934,
          0.6009724523577934,
          0,
          4.051504558637259,
          4.051504558637259,
          4.051504558637259,
          4.051504558637259,
          4.051504558637259,
          4.051504558637259,
          4.073496166605105,
          4.515529155680777
         ]
        }
       ],
       "layout": {
        "autosize": true,
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "fillpattern": {
             "fillmode": "overlay",
             "size": 10,
             "solidity": 0.2
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "text": "Diet Changes as Carrot Price Increases"
        },
        "xaxis": {
         "autorange": true,
         "range": [
          0.34500000000000003,
          2.7600000000000002
         ],
         "title": {
          "text": "Carrots Price"
         },
         "type": "linear"
        },
        "yaxis": {
         "autorange": true,
         "range": [
          -1.1921995639589997,
          22.651791715220998
         ],
         "title": {
          "text": "Hectograms"
         },
         "type": "linear"
        }
       }
      },
      "image/png": "",
      "text/html": [
       "<div>                            <div id=\"c8bd2afb-dccb-4097-97d0-acbeb43b3f2c\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};\n",
       "                    window.PLOTLYENV.BASE_URL='https://plot.ly';                                    if (document.getElementById(\"c8bd2afb-dccb-4097-97d0-acbeb43b3f2c\")) {                    Plotly.newPlot(                        \"c8bd2afb-dccb-4097-97d0-acbeb43b3f2c\",                        [{\"line\":{\"color\":\"rgba(255, 153, 51, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"caribou\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[2.091672950417704,2.091672950417704,0.36418816388467373,0.5823041520478226,0.5823041520478226,0.5823041520478226,0.5823041520478226,0.5823041520478226,0.5823041520478226,0.6484408207581536,0.7195052459132655],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(55, 128, 191, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"seal\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[3.882359546452026,3.882359546452026,3.106394058405731,2.802459866940375,2.802459866940375,2.802459866940375,2.802459866940375,2.802459866940375,2.802459866940375,2.72625115180478,1.591679611256962],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(50, 171, 96, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Frozen Corn\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.0,0.0,3.615508718318859,2.2752904617495413,2.2752904617495413,2.2752904617495413,2.2752904617495413,2.2752904617495413,2.2752904617495413,1.5143781073097673,0.0],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(128, 0, 128, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Carrots\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[21.459592151261997,21.459592151261997,14.070327134471531,9.616823078470604,9.616823078470604,9.616823078470604,9.616823078470604,9.616823078470604,9.616823078470604,9.397299915663076,6.7067975174852625],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(219, 64, 82, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Bananas\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.551482842440268,5.800368492507088],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(0, 128, 128, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Frozen French Fries\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.0,0.0,1.9865572075839215,3.951273768156879,3.951273768156879,3.951273768156879,3.951273768156879,3.951273768156879,3.951273768156879,4.211809486355937,5.332788291672367],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(255, 255, 51, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Milk 2%\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.9389848865386325,0.9389848865386325,3.6527910939727524,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(128, 128, 0, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Orange Juice\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.6009724523577934,0.6009724523577934,0.0,4.051504558637259,4.051504558637259,4.051504558637259,4.051504558637259,4.051504558637259,4.051504558637259,4.073496166605105,4.515529155680777],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"title\":{\"text\":\"Diet Changes as Carrot Price Increases\"},\"xaxis\":{\"title\":{\"text\":\"Carrots Price\"}},\"yaxis\":{\"title\":{\"text\":\"Hectograms\"}}},                        {\"showLink\": true, \"linkText\": \"Export to plot.ly\", \"plotlyServerURL\": \"https://plot.ly\", \"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('c8bd2afb-dccb-4097-97d0-acbeb43b3f2c');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "cf.go_offline()\n",
    "\n",
    "ReferenceGood = 'Carrots'\n",
    "\n",
    "scale = [0.5,0.75,0.9,1.,1.1,1.2,1.3,1.4,1.5,2,4]\n",
    "\n",
    "cost0 = solve_subsistence_problem(FoodNutrients_2,Prices_2,diet_min[group],diet_max[group],tol=tol).fun\n",
    "\n",
    "my_p = Prices_2.copy()\n",
    "\n",
    "diet = {}\n",
    "for s in scale:\n",
    "\n",
    "    my_p[ReferenceGood] = Prices_2[ReferenceGood]*s\n",
    "    result = solve_subsistence_problem(FoodNutrients_2,my_p,diet_min[group],diet_max[group],tol=tol)\n",
    "    diet[my_p[ReferenceGood]] = result.diet\n",
    "\n",
    "Diet_response = pd.DataFrame(diet).T\n",
    "Diet_response.index.name = '%s Price' % ReferenceGood\n",
    "\n",
    "Diet_response.reset_index(inplace=True)\n",
    "\n",
    "# Get rid of units for index (cufflinks chokes)\n",
    "Diet_response['%s Price' % ReferenceGood] = Diet_response['%s Price' % ReferenceGood].apply(lambda x: x.magnitude)\n",
    "\n",
    "Diet_response = Diet_response.set_index('%s Price' % ReferenceGood)\n",
    "\n",
    "# Just look at goods consumed in quantities greater than error tolerance\n",
    "Diet_response.loc[:,(Diet_response>tol).sum()>0].iplot(layout={\n",
    "    'title': 'Diet Changes as Carrot Price Increases',  \n",
    "    'xaxis': {\n",
    "        'title': f'{ReferenceGood} Price'  \n",
    "    },\n",
    "    'yaxis': {\n",
    "        'title': 'Hectograms' \n",
    "    }\n",
    "})\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "linkText": "Export to plot.ly",
        "plotlyServerURL": "https://plot.ly",
        "showLink": true
       },
       "data": [
        {
         "line": {
          "color": "rgba(255, 153, 51, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Carbohydrate, by difference",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          216.8614676917411,
          216.8614676917411,
          267.0480529541285,
          270.2244425177459,
          270.2244425177459,
          270.2244425177459,
          270.2244425177459,
          270.2244425177459,
          270.2244425177459,
          272.69360788993004,
          368.5433541202415
         ]
        },
        {
         "line": {
          "color": "rgba(55, 128, 191, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Energy",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          3100,
          3100,
          3100,
          3100.0000000000005,
          3100.0000000000005,
          3100.0000000000005,
          3100.0000000000005,
          3100.0000000000005,
          3100.0000000000005,
          3100,
          3100
         ]
        },
        {
         "line": {
          "color": "rgba(50, 171, 96, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Protein",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          189.00273852908794,
          189.00273852908794,
          133.04933779086443,
          119.80819704027891,
          119.80819704027891,
          119.80819704027891,
          119.80819704027891,
          119.80819704027891,
          119.80819704027891,
          118.71853564975281,
          91.33270467911471
         ]
        },
        {
         "line": {
          "color": "rgba(128, 0, 128, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Total lipid (fat)",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          17.855421417175133,
          17.855421417175133,
          54.80400998963781,
          69.76975494180142,
          69.76975494180142,
          69.76975494180142,
          69.76975494180142,
          69.76975494180142,
          69.76975494180142,
          71.10299446985343,
          82.21415431628171
         ]
        }
       ],
       "layout": {
        "autosize": true,
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "fillpattern": {
             "fillmode": "overlay",
             "size": 10,
             "solidity": 0.2
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "text": "Nutrient Changes in Diet as Carrot Price Increases."
        },
        "xaxis": {
         "autorange": true,
         "range": [
          0.34500000000000003,
          2.7600000000000002
         ],
         "title": {
          "text": "Carrots Price"
         },
         "type": "linear"
        },
        "yaxis": {
         "autorange": true,
         "range": [
          -153.3748329485374,
          3271.230254365713
         ],
         "title": {
          "text": "Nutrients"
         },
         "type": "linear"
        }
       }
      },
      "image/png": "",
      "text/html": [
       "<div>                            <div id=\"5d6c4de6-31d7-402e-a942-e8491062ad40\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};\n",
       "                    window.PLOTLYENV.BASE_URL='https://plot.ly';                                    if (document.getElementById(\"5d6c4de6-31d7-402e-a942-e8491062ad40\")) {                    Plotly.newPlot(                        \"5d6c4de6-31d7-402e-a942-e8491062ad40\",                        [{\"line\":{\"color\":\"rgba(255, 153, 51, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Carbohydrate, by difference\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[216.8614676917411,216.8614676917411,267.0480529541285,270.2244425177459,270.2244425177459,270.2244425177459,270.2244425177459,270.2244425177459,270.2244425177459,272.69360788993004,368.5433541202415],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(55, 128, 191, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Energy\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[3100.0,3100.0,3100.0,3100.0000000000005,3100.0000000000005,3100.0000000000005,3100.0000000000005,3100.0000000000005,3100.0000000000005,3100.0,3100.0],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(50, 171, 96, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Protein\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[189.00273852908794,189.00273852908794,133.04933779086443,119.80819704027891,119.80819704027891,119.80819704027891,119.80819704027891,119.80819704027891,119.80819704027891,118.71853564975281,91.33270467911471],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(128, 0, 128, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Total lipid (fat)\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[17.855421417175133,17.855421417175133,54.80400998963781,69.76975494180142,69.76975494180142,69.76975494180142,69.76975494180142,69.76975494180142,69.76975494180142,71.10299446985343,82.21415431628171],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"title\":{\"text\":\"Nutrient Changes in Diet as Carrot Price Increases.\"},\"xaxis\":{\"title\":{\"text\":\"Carrots Price\"}},\"yaxis\":{\"title\":{\"text\":\"Nutrients\"}}},                        {\"showLink\": true, \"linkText\": \"Export to plot.ly\", \"plotlyServerURL\": \"https://plot.ly\", \"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('5d6c4de6-31d7-402e-a942-e8491062ad40');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Matrix product maps quantities of food into quantities of nutrients\n",
    "NutrientResponse = Diet_response@FoodNutrients_2.T\n",
    "\n",
    "# Drop columns of missing nutrients\n",
    "NutrientResponse = NutrientResponse.loc[:,NutrientResponse.count()>0]\n",
    "NutrientResponse.iplot(layout={\n",
    "    'title': 'Nutrient Changes in Diet as Carrot Price Increases.', \n",
    "    'xaxis': {\n",
    "        'title': f'{ReferenceGood} Price' \n",
    "    },\n",
    "    'yaxis': {\n",
    "        'title': 'Nutrients' \n",
    "    }\n",
    "})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "        <script type=\"text/javascript\">\n",
       "        window.PlotlyConfig = {MathJaxConfig: 'local'};\n",
       "        if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\n",
       "        if (typeof require !== 'undefined') {\n",
       "        require.undef(\"plotly\");\n",
       "        requirejs.config({\n",
       "            paths: {\n",
       "                'plotly': ['https://cdn.plot.ly/plotly-2.32.0.min']\n",
       "            }\n",
       "        });\n",
       "        require(['plotly'], function(Plotly) {\n",
       "            window._Plotly = Plotly;\n",
       "        });\n",
       "        }\n",
       "        </script>\n",
       "        "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/srv/conda/lib/python3.11/site-packages/pandas/core/dtypes/cast.py:1601: UnitStrippedWarning:\n",
      "\n",
      "The unit of the quantity is stripped when downcasting to ndarray.\n",
      "\n"
     ]
    },
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "linkText": "Export to plot.ly",
        "plotlyServerURL": "https://plot.ly",
        "showLink": true
       },
       "data": [
        {
         "line": {
          "color": "rgba(255, 153, 51, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "caribou",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          2.091672950417704,
          2.091672950417704,
          0.36418816388467373,
          0.5823041520478226,
          0.5823041520478226,
          0.5823041520478226,
          0.5823041520478226,
          0.5823041520478226,
          0.5823041520478226,
          0.6484408207581536,
          0.7195052459132655
         ]
        },
        {
         "line": {
          "color": "rgba(55, 128, 191, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "seal",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          3.882359546452026,
          3.882359546452026,
          3.106394058405731,
          2.802459866940375,
          2.802459866940375,
          2.802459866940375,
          2.802459866940375,
          2.802459866940375,
          2.802459866940375,
          2.72625115180478,
          1.591679611256962
         ]
        },
        {
         "line": {
          "color": "rgba(50, 171, 96, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Frozen Corn",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0,
          0,
          3.615508718318859,
          2.2752904617495413,
          2.2752904617495413,
          2.2752904617495413,
          2.2752904617495413,
          2.2752904617495413,
          2.2752904617495413,
          1.5143781073097673,
          0
         ]
        },
        {
         "line": {
          "color": "rgba(128, 0, 128, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Carrots",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          21.459592151261997,
          21.459592151261997,
          14.070327134471531,
          9.616823078470604,
          9.616823078470604,
          9.616823078470604,
          9.616823078470604,
          9.616823078470604,
          9.616823078470604,
          9.397299915663076,
          6.7067975174852625
         ]
        },
        {
         "line": {
          "color": "rgba(219, 64, 82, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Bananas",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0.551482842440268,
          5.800368492507088
         ]
        },
        {
         "line": {
          "color": "rgba(0, 128, 128, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Frozen French Fries",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0,
          0,
          1.9865572075839215,
          3.951273768156879,
          3.951273768156879,
          3.951273768156879,
          3.951273768156879,
          3.951273768156879,
          3.951273768156879,
          4.211809486355937,
          5.332788291672367
         ]
        },
        {
         "line": {
          "color": "rgba(255, 255, 51, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Milk 2%",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0.9389848865386325,
          0.9389848865386325,
          3.6527910939727524,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
         ]
        },
        {
         "line": {
          "color": "rgba(128, 128, 0, 1.0)",
          "dash": "solid",
          "shape": "linear",
          "width": 1.3
         },
         "mode": "lines",
         "name": "Orange Juice",
         "text": "",
         "type": "scatter",
         "x": [
          0.34500000000000003,
          0.5175000000000001,
          0.6210000000000001,
          0.6900000000000001,
          0.7590000000000001,
          0.8280000000000001,
          0.8970000000000001,
          0.966,
          1.0350000000000001,
          1.3800000000000001,
          2.7600000000000002
         ],
         "y": [
          0.6009724523577934,
          0.6009724523577934,
          0,
          4.051504558637259,
          4.051504558637259,
          4.051504558637259,
          4.051504558637259,
          4.051504558637259,
          4.051504558637259,
          4.073496166605105,
          4.515529155680777
         ]
        }
       ],
       "layout": {
        "autosize": true,
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "fillpattern": {
             "fillmode": "overlay",
             "size": 10,
             "solidity": 0.2
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "text": "Changes in Diet Given the Maximum Constraint of 120 Hectograms of Food Per Day"
        },
        "xaxis": {
         "autorange": true,
         "range": [
          0.34500000000000003,
          2.7600000000000002
         ],
         "title": {
          "text": "Carrots Price"
         },
         "type": "linear"
        },
        "yaxis": {
         "autorange": true,
         "range": [
          -1.1921995639589997,
          22.651791715220998
         ],
         "title": {
          "text": "Hectograms"
         },
         "type": "linear"
        }
       }
      },
      "image/png": "",
      "text/html": [
       "<div>                            <div id=\"a4f7ede7-c88d-4491-9a25-d411a72cd24a\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};\n",
       "                    window.PLOTLYENV.BASE_URL='https://plot.ly';                                    if (document.getElementById(\"a4f7ede7-c88d-4491-9a25-d411a72cd24a\")) {                    Plotly.newPlot(                        \"a4f7ede7-c88d-4491-9a25-d411a72cd24a\",                        [{\"line\":{\"color\":\"rgba(255, 153, 51, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"caribou\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[2.091672950417704,2.091672950417704,0.36418816388467373,0.5823041520478226,0.5823041520478226,0.5823041520478226,0.5823041520478226,0.5823041520478226,0.5823041520478226,0.6484408207581536,0.7195052459132655],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(55, 128, 191, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"seal\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[3.882359546452026,3.882359546452026,3.106394058405731,2.802459866940375,2.802459866940375,2.802459866940375,2.802459866940375,2.802459866940375,2.802459866940375,2.72625115180478,1.591679611256962],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(50, 171, 96, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Frozen Corn\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.0,0.0,3.615508718318859,2.2752904617495413,2.2752904617495413,2.2752904617495413,2.2752904617495413,2.2752904617495413,2.2752904617495413,1.5143781073097673,0.0],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(128, 0, 128, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Carrots\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[21.459592151261997,21.459592151261997,14.070327134471531,9.616823078470604,9.616823078470604,9.616823078470604,9.616823078470604,9.616823078470604,9.616823078470604,9.397299915663076,6.7067975174852625],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(219, 64, 82, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Bananas\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.551482842440268,5.800368492507088],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(0, 128, 128, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Frozen French Fries\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.0,0.0,1.9865572075839215,3.951273768156879,3.951273768156879,3.951273768156879,3.951273768156879,3.951273768156879,3.951273768156879,4.211809486355937,5.332788291672367],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(255, 255, 51, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Milk 2%\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.9389848865386325,0.9389848865386325,3.6527910939727524,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],\"type\":\"scatter\"},{\"line\":{\"color\":\"rgba(128, 128, 0, 1.0)\",\"dash\":\"solid\",\"shape\":\"linear\",\"width\":1.3},\"mode\":\"lines\",\"name\":\"Orange Juice\",\"text\":\"\",\"x\":[0.34500000000000003,0.5175000000000001,0.6210000000000001,0.6900000000000001,0.7590000000000001,0.8280000000000001,0.8970000000000001,0.966,1.0350000000000001,1.3800000000000001,2.7600000000000002],\"y\":[0.6009724523577934,0.6009724523577934,0.0,4.051504558637259,4.051504558637259,4.051504558637259,4.051504558637259,4.051504558637259,4.051504558637259,4.073496166605105,4.515529155680777],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"title\":{\"text\":\"Changes in Diet Given the Maximum Constraint of 120 Hectograms of Food Per Day\"},\"xaxis\":{\"title\":{\"text\":\"Carrots Price\"}},\"yaxis\":{\"title\":{\"text\":\"Hectograms\"}}},                        {\"showLink\": true, \"linkText\": \"Export to plot.ly\", \"plotlyServerURL\": \"https://plot.ly\", \"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('a4f7ede7-c88d-4491-9a25-d411a72cd24a');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "cf.go_offline()\n",
    "\n",
    "ReferenceGood = 'Carrots'\n",
    "\n",
    "scale = [0.5,0.75,0.9,1.,1.1,1.2,1.3,1.4,1.5,2,4]\n",
    "\n",
    "cost0 = solve_subsistence_problem(FoodNutrients_2,Prices_2,\n",
    "                                  diet_min[group],diet_max[group],max_weight=120,tol=tol).fun\n",
    "\n",
    "my_p = Prices_2.copy()\n",
    "\n",
    "diet = {}\n",
    "for s in scale:\n",
    "\n",
    "    my_p[ReferenceGood] = Prices_2[ReferenceGood]*s\n",
    "    result = solve_subsistence_problem(FoodNutrients_2,my_p,\n",
    "                                       diet_min[group],diet_max[group],max_weight=120,tol=tol)\n",
    "    diet[my_p[ReferenceGood]] = result.diet\n",
    "\n",
    "Diet_response = pd.DataFrame(diet).T\n",
    "Diet_response.index.name = '%s Price' % ReferenceGood\n",
    "\n",
    "Diet_response.reset_index(inplace=True)\n",
    "\n",
    "# Get rid of units for index (cufflinks chokes)\n",
    "Diet_response['%s Price' % ReferenceGood] = Diet_response['%s Price' % ReferenceGood].apply(lambda x: x.magnitude)\n",
    "\n",
    "Diet_response = Diet_response.set_index('%s Price' % ReferenceGood)\n",
    "\n",
    "# Just look at goods consumed in quantities greater than error tolerance\n",
    "Diet_response.loc[:, (Diet_response > tol).sum() > 0].iplot(layout={\n",
    "    'title': 'Changes in Diet Given the Maximum Constraint of 120 Hectograms of Food Per Day',  # Customize this title as needed\n",
    "    'xaxis': {\n",
    "        'title': f'{ReferenceGood} Price'\n",
    "    },\n",
    "    'yaxis': {\n",
    "        'title': 'Hectograms'\n",
    "    }\n",
    "})"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 7. <span style=\"color:red\">*Deliverable 7[B]*</span> - Total Cost for Population of Interest <a name=\"total-cost\"></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Using information fron Canada census data on the state of [Nunavut](https://www12.statcan.gc.ca/census-recensement/2021/dp-pd/prof/details/page.cfm?Lang=E&SearchText=Nunavut&DGUIDlist=2021A000262&GENDERlist=1,2,3&STATISTIClist=1&HEADERlist=0). We load this dataframe in, containing the population information."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age Group</th>\n",
       "      <th>Total Population</th>\n",
       "      <th>Male Population</th>\n",
       "      <th>Female Population</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Total</td>\n",
       "      <td>36855</td>\n",
       "      <td>18770</td>\n",
       "      <td>18090</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0 to 14 years</td>\n",
       "      <td>12080</td>\n",
       "      <td>6175</td>\n",
       "      <td>5905</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0 to 4 years</td>\n",
       "      <td>4385</td>\n",
       "      <td>2295</td>\n",
       "      <td>2085</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5 to 9 years</td>\n",
       "      <td>3990</td>\n",
       "      <td>2030</td>\n",
       "      <td>1965</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10 to 14 years</td>\n",
       "      <td>3705</td>\n",
       "      <td>1850</td>\n",
       "      <td>1850</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>15 to 64 years</td>\n",
       "      <td>23170</td>\n",
       "      <td>11740</td>\n",
       "      <td>11430</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>15 to 19 years</td>\n",
       "      <td>3085</td>\n",
       "      <td>1535</td>\n",
       "      <td>1550</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>20 to 24 years</td>\n",
       "      <td>2860</td>\n",
       "      <td>1475</td>\n",
       "      <td>1385</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>25 to 29 years</td>\n",
       "      <td>2990</td>\n",
       "      <td>1470</td>\n",
       "      <td>1520</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>30 to 34 years</td>\n",
       "      <td>3040</td>\n",
       "      <td>1555</td>\n",
       "      <td>1485</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>35 to 39 years</td>\n",
       "      <td>2370</td>\n",
       "      <td>1195</td>\n",
       "      <td>1175</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>40 to 44 years</td>\n",
       "      <td>2110</td>\n",
       "      <td>1085</td>\n",
       "      <td>1025</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>45 to 49 years</td>\n",
       "      <td>1930</td>\n",
       "      <td>965</td>\n",
       "      <td>960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>50 to 54 years</td>\n",
       "      <td>1985</td>\n",
       "      <td>995</td>\n",
       "      <td>990</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>55 to 59 years</td>\n",
       "      <td>1615</td>\n",
       "      <td>840</td>\n",
       "      <td>770</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>60 to 64 years</td>\n",
       "      <td>1190</td>\n",
       "      <td>625</td>\n",
       "      <td>565</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>65 years and over</td>\n",
       "      <td>1605</td>\n",
       "      <td>855</td>\n",
       "      <td>755</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>65 to 69 years</td>\n",
       "      <td>720</td>\n",
       "      <td>395</td>\n",
       "      <td>325</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>70 to 74 years</td>\n",
       "      <td>485</td>\n",
       "      <td>260</td>\n",
       "      <td>225</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>75 to 79 years</td>\n",
       "      <td>220</td>\n",
       "      <td>115</td>\n",
       "      <td>105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>80 to 84 years</td>\n",
       "      <td>105</td>\n",
       "      <td>50</td>\n",
       "      <td>50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>85 years and over</td>\n",
       "      <td>80</td>\n",
       "      <td>35</td>\n",
       "      <td>50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>85 to 89 years</td>\n",
       "      <td>60</td>\n",
       "      <td>30</td>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>90 to 94 years</td>\n",
       "      <td>20</td>\n",
       "      <td>10</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>95 to 99 years</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>100 years and over</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Age Group  Total Population  Male Population  Female Population\n",
       "0                Total             36855            18770              18090\n",
       "1        0 to 14 years             12080             6175               5905\n",
       "2         0 to 4 years              4385             2295               2085\n",
       "3         5 to 9 years              3990             2030               1965\n",
       "4       10 to 14 years              3705             1850               1850\n",
       "5       15 to 64 years             23170            11740              11430\n",
       "6       15 to 19 years              3085             1535               1550\n",
       "7       20 to 24 years              2860             1475               1385\n",
       "8       25 to 29 years              2990             1470               1520\n",
       "9       30 to 34 years              3040             1555               1485\n",
       "10      35 to 39 years              2370             1195               1175\n",
       "11      40 to 44 years              2110             1085               1025\n",
       "12      45 to 49 years              1930              965                960\n",
       "13      50 to 54 years              1985              995                990\n",
       "14      55 to 59 years              1615              840                770\n",
       "15      60 to 64 years              1190              625                565\n",
       "16   65 years and over              1605              855                755\n",
       "17      65 to 69 years               720              395                325\n",
       "18      70 to 74 years               485              260                225\n",
       "19      75 to 79 years               220              115                105\n",
       "20      80 to 84 years               105               50                 50\n",
       "21   85 years and over                80               35                 50\n",
       "22      85 to 89 years                60               30                 35\n",
       "23      90 to 94 years                20               10                 15\n",
       "24      95 to 99 years                 0                0                  0\n",
       "25  100 years and over                 0                0                  0"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "population_df = pd.read_csv(\"data/nunavut_population.csv\")\n",
    "population_df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Creating a function to do the work to return the price for a specific age & gender."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "def price_problem_trad(gender, age_range):\n",
    "    '''\n",
    "    This function takes in the gender & age and returns the price for a subsitence diet.\n",
    "    '''\n",
    "    group = gender + \" \" + age_range\n",
    "    tol = 1e-6\n",
    "    result = solve_subsistence_problem(FoodNutrients_2, Prices_2,diet_min[group], diet_max[group], tol=tol)\n",
    "    return result.fun\n",
    "\n",
    "def price_problem_non_trad(gender, age_range):\n",
    "    '''\n",
    "    This function takes in the gender & age and returns the price for a subsitence diet.\n",
    "    '''\n",
    "    group = gender + \" \" + age_range\n",
    "    tol = 1e-6\n",
    "    result = solve_subsistence_problem(FoodNutrients, Prices,diet_min[group], diet_max[group], tol=tol)\n",
    "    return result.fun"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Mapping from your CSV age groups to the supported age groups in price_problem\n",
    "age_group_mapping = {\n",
    "    \"0 to 4 years\": \"C 1-3\",\n",
    "    \"5 to 9 years\": [\"F 4-8\", \"M 4-8\"],\n",
    "    \"10 to 14 years\": [\"F 9-13\", \"M 9-13\"],\n",
    "    \"15 to 19 years\": [\"F 14-18\", \"M 14-18\"],\n",
    "    \"20 to 24 years\": [\"F 19-30\", \"M 19-30\"],\n",
    "    \"25 to 29 years\": [\"F 19-30\", \"M 19-30\"],\n",
    "    \"30 to 34 years\": [\"F 31-50\", \"M 31-50\"],\n",
    "    \"35 to 39 years\": [\"F 31-50\", \"M 31-50\"],\n",
    "    \"40 to 44 years\": [\"F 31-50\", \"M 31-50\"],\n",
    "    \"45 to 49 years\": [\"F 31-50\", \"M 31-50\"],\n",
    "    \"50 to 54 years\": [\"F 51+\", \"M 51+\"],\n",
    "    \"55 to 59 years\": [\"F 51+\", \"M 51+\"],\n",
    "    \"60 to 64 years\": [\"F 51+\", \"M 51+\"],\n",
    "    \"65 to 69 years\": [\"F 51+\", \"M 51+\"],\n",
    "    \"70 to 74 years\": [\"F 51+\", \"M 51+\"],\n",
    "    \"75 to 79 years\": [\"F 51+\", \"M 51+\"],\n",
    "    \"80 to 84 years\": [\"F 51+\", \"M 51+\"],\n",
    "    \"85 years and over\": [\"F 51+\", \"M 51+\"],\n",
    "}\n",
    "\n",
    "total_cost_t = 0\n",
    "\n",
    "# Iterate over the DataFrame rows\n",
    "for _, row in population_df.iterrows():\n",
    "    age_group_csv = row['Age Group']\n",
    "    if age_group_csv in age_group_mapping:\n",
    "        mapped_groups = age_group_mapping[age_group_csv]\n",
    "        if not isinstance(mapped_groups, list):\n",
    "            mapped_groups = [mapped_groups]  # Ensure it's a list even for single mappings\n",
    "        \n",
    "        for group in mapped_groups:\n",
    "            gender, age_range = group.split(' ')\n",
    "            if gender == 'C':  # Handle all-gender groups\n",
    "                cost_per_person = price_problem_trad('C', age_range)\n",
    "                total_cost_t += cost_per_person * (row['Male Population'] + row['Female Population'])\n",
    "            else:  # Handle male and female groups separately\n",
    "                population_key = 'Male Population' if gender == 'M' else 'Female Population'\n",
    "                cost_per_person = price_problem_trad(gender, age_range)\n",
    "                total_cost_t += cost_per_person * row[population_key]\n",
    "\n",
    "total_cost_nt = 0\n",
    "\n",
    "# Iterate over the DataFrame rows\n",
    "for _, row in population_df.iterrows():\n",
    "    age_group_csv = row['Age Group']\n",
    "    if age_group_csv in age_group_mapping:\n",
    "        mapped_groups = age_group_mapping[age_group_csv]\n",
    "        if not isinstance(mapped_groups, list):\n",
    "            mapped_groups = [mapped_groups]  # Ensure it's a list even for single mappings\n",
    "        \n",
    "        for group in mapped_groups:\n",
    "            gender, age_range = group.split(' ')\n",
    "            if gender == 'C':  # Handle all-gender groups\n",
    "                cost_per_person = price_problem_non_trad('C', age_range)\n",
    "                total_cost_nt += cost_per_person * (row['Male Population'] + row['Female Population'])\n",
    "            else:  # Handle male and female groups separately\n",
    "                population_key = 'Male Population' if gender == 'M' else 'Female Population'\n",
    "                cost_per_person = price_problem_non_trad(gender, age_range)\n",
    "                total_cost_nt += cost_per_person * row[population_key]\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Our biggest question for this project was whether it was more affordable for inuits to include traditional foods VS not including traditional foods in their diet.** \n",
    "\n",
    "Our answer to the following question could be solved by comparing the total cost of the two different diets (traditional foods VS non traditional Inuit foods)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The total cost for the society, non-traditional diet: $661546.2113581084\n",
      "The total cost for the society, traditional diet: $489621.19151593046\n"
     ]
    }
   ],
   "source": [
    "print(f\"The total cost for the society, non-traditional diet: ${total_cost_nt}\")\n",
    "print(f\"The total cost for the society, traditional diet: ${total_cost_t}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Hence, we show that the traditional diet for feeding the full Inuit population of Nunavut is cheaper than using non-traditional foods."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 8. Works Cited  <a name=\"works-cited\"></a>\n",
    "Canada, Government of Canada; Crown-Indigenous Relations and Northern Affairs. 2009. “Inuit.” Administrative page; fact sheet; resource list. February 13, 2009. https://www.rcaanc-cirnac.gc.ca/eng/1100100014187/1534785248701.\n",
    "\n",
    "Government of Canada, Statistics Canada. 2020. “Household Food Insecurity, 2017/2018.” June 24, 2020. https://www150.statcan.gc.ca/n1/pub/82-625-x/2020001/article/00001-eng.htm.\n",
    "\n",
    "———. 2023. “Profile Table: Nunavut [Territory], Indigenous Population Profile, 2021 Census of Population.” June 21, 2023. https://www12.statcan.gc.ca/census-recensement/2021/dp-pd/ipp-ppa/details/page.cfm?Lang=E&SearchText=Nunavut&DGUID=2021A000262&GENDER=1&AGE=1&HP=0&HH=0.\n",
    "\n",
    "Hopping, B. N., E. Mead, E. Erber, C. Sheehy, C. Roache, and S. Sharma. 2010. “Dietary Adequacy of Inuit in the Canadian Arctic.” Journal of Human Nutrition and Dietetics 23 (s1): 27–34. https://doi.org/10.1111/j.1365-277X.2010.01099.x.\n",
    "\n",
    "“Household Food Insecurity in Canada, 2022.” n.d. PROOF (blog). Accessed February 27, 2024. https://proof.utoronto.ca/resource/household-food-insecurity-in-canada-2022/.\n",
    "\n",
    "“Indigenous Territory.” n.d. Accessed February 27, 2024. https://www.thecanadianencyclopedia.ca/en/article/indigenous-territory.\n",
    "\n",
    "Lambden, Jill, Olivier Receveur, Joan Marshall, and Harriet Kuhnlein. 2006. “Traditional and Market Food Access in Arctic Canada Is Affected by Economic Factors.” International Journal of Circumpolar Health 65 (4): 331–40. https://doi.org/10.3402/ijch.v65i4.18117.\n",
    "\n",
    "“NORDIC NUTRITION RECOMMENDATIONS 2023 / INTEGRATING ENVIRONMENTAL ASPECTS.” n.d. Accessed February 27, 2024. https://pub.norden.org/nord2023-003/contents.html.\n",
    "\n",
    "“Nunavut.” n.d. Accessed February 27, 2024. https://indigenouspeoplesatlasofcanada.ca/article/nunavut/.\n",
    "St-Germain, Andrée-Anne Fafard, Tracey Galloway, and Valerie Tarasuk. 2019. “Food Insecurity in Nunavut Following the Introduction of Nutrition North Canada.” CMAJ 191 (20): E552–58. https://doi.org/10.1503/cmaj.181617.\n",
    "\n",
    "Sharma, Sangita & Cao, Xia & Roache, Cindy & Buchan, Annie & Reid, Rhonda & Gittelsohn, Joel. (2009). Assessing Dietary Intake in a Population Undergoing a Rapid Transition in Diet and Lifestyle: The Arctic Inuit in Nunavut, Canada.. The British Journal of Nutrition. 103. 749-59. 10.1017/S0007114509992224. \n",
    "\n",
    "“Vol IV: Dietary Structure and Relative Health in Inuit Communities.” 2020. The McGill Journal of Global Health. August 25, 2020. https://mghjournal.com/2020/08/25/dietary-structure-and-relative-health-in-inuit-communities/."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
